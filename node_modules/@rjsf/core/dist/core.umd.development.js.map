{"version":3,"file":"core.umd.development.js","sources":["../src/components/fields/ArrayField.tsx","../src/components/fields/BooleanField.tsx","../src/components/fields/MultiSchemaField.tsx","../src/components/fields/NumberField.tsx","../src/components/fields/ObjectField.tsx","../src/components/fields/SchemaField.tsx","../src/components/fields/StringField.tsx","../src/components/fields/NullField.tsx","../src/components/fields/index.ts","../src/components/templates/ArrayFieldDescriptionTemplate.tsx","../src/components/templates/ArrayFieldItemTemplate.tsx","../src/components/templates/ArrayFieldTemplate.tsx","../src/components/templates/ArrayFieldTitleTemplate.tsx","../src/components/templates/BaseInputTemplate.tsx","../src/components/templates/ButtonTemplates/SubmitButton.tsx","../src/components/templates/ButtonTemplates/IconButton.tsx","../src/components/templates/ButtonTemplates/AddButton.tsx","../src/components/templates/ButtonTemplates/index.ts","../src/components/templates/DescriptionField.tsx","../src/components/templates/ErrorList.tsx","../src/components/templates/FieldTemplate/Label.tsx","../src/components/templates/FieldTemplate/FieldTemplate.tsx","../src/components/templates/FieldErrorTemplate.tsx","../src/components/templates/FieldHelpTemplate.tsx","../src/components/templates/ObjectFieldTemplate.tsx","../src/components/templates/TitleField.tsx","../src/components/templates/UnsupportedField.tsx","../src/components/templates/WrapIfAdditionalTemplate.tsx","../src/components/templates/index.ts","../src/components/widgets/AltDateWidget.tsx","../src/components/widgets/AltDateTimeWidget.tsx","../src/components/widgets/CheckboxWidget.tsx","../src/components/widgets/CheckboxesWidget.tsx","../src/components/widgets/ColorWidget.tsx","../src/components/widgets/DateWidget.tsx","../src/components/widgets/DateTimeWidget.tsx","../src/components/widgets/EmailWidget.tsx","../src/components/widgets/FileWidget.tsx","../src/components/widgets/HiddenWidget.tsx","../src/components/widgets/PasswordWidget.tsx","../src/components/widgets/RadioWidget.tsx","../src/components/widgets/RangeWidget.tsx","../src/components/widgets/SelectWidget.tsx","../src/components/widgets/TextareaWidget.tsx","../src/components/widgets/TextWidget.tsx","../src/components/widgets/TimeWidget.tsx","../src/components/widgets/URLWidget.tsx","../src/components/widgets/UpDownWidget.tsx","../src/components/widgets/index.ts","../src/getDefaultRegistry.ts","../src/components/Form.tsx","../src/withTheme.tsx"],"sourcesContent":["import { Component, MouseEvent } from 'react';\nimport {\n  getTemplate,\n  getWidget,\n  getUiOptions,\n  isFixedItems,\n  allowAdditionalItems,\n  isCustomWidget,\n  optionsList,\n  ArrayFieldTemplateProps,\n  ErrorSchema,\n  FieldProps,\n  FormContextType,\n  IdSchema,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  UiSchema,\n  ITEMS_KEY,\n} from '@rjsf/utils';\nimport cloneDeep from 'lodash/cloneDeep';\nimport get from 'lodash/get';\nimport isObject from 'lodash/isObject';\nimport set from 'lodash/set';\nimport { nanoid } from 'nanoid';\n\n/** Type used to represent the keyed form data used in the state */\ntype KeyedFormDataType<T> = { key: string; item: T };\n\n/** Type used for the state of the `ArrayField` component */\ntype ArrayFieldState<T> = {\n  /** The keyed form data elements */\n  keyedFormData: KeyedFormDataType<T>[];\n  /** Flag indicating whether any of the keyed form data has been updated */\n  updatedKeyedFormData: boolean;\n};\n\n/** Used to generate a unique ID for an element in a row */\nfunction generateRowId() {\n  return nanoid();\n}\n\n/** Converts the `formData` into `KeyedFormDataType` data, using the `generateRowId()` function to create the key\n *\n * @param formData - The data for the form\n * @returns - The `formData` converted into a `KeyedFormDataType` element\n */\nfunction generateKeyedFormData<T>(formData: T[]): KeyedFormDataType<T>[] {\n  return !Array.isArray(formData)\n    ? []\n    : formData.map((item) => {\n        return {\n          key: generateRowId(),\n          item,\n        };\n      });\n}\n\n/** Converts `KeyedFormDataType` data into the inner `formData`\n *\n * @param keyedFormData - The `KeyedFormDataType` to be converted\n * @returns - The inner `formData` item(s) in the `keyedFormData`\n */\nfunction keyedToPlainFormData<T>(keyedFormData: KeyedFormDataType<T> | KeyedFormDataType<T>[]): T[] {\n  if (Array.isArray(keyedFormData)) {\n    return keyedFormData.map((keyedItem) => keyedItem.item);\n  }\n  return [];\n}\n\n/** The `ArrayField` component is used to render a field in the schema that is of type `array`. It supports both normal\n * and fixed array, allowing user to add and remove elements from the array data.\n */\nclass ArrayField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> extends Component<\n  FieldProps<T[], S, F>,\n  ArrayFieldState<T>\n> {\n  /** Constructs an `ArrayField` from the `props`, generating the initial keyed data from the `formData`\n   *\n   * @param props - The `FieldProps` for this template\n   */\n  constructor(props: FieldProps<T[], S, F>) {\n    super(props);\n    const { formData = [] } = props;\n    const keyedFormData = generateKeyedFormData<T>(formData);\n    this.state = {\n      keyedFormData,\n      updatedKeyedFormData: false,\n    };\n  }\n\n  /** React lifecycle method that is called when the props are about to change allowing the state to be updated. It\n   * regenerates the keyed form data and returns it\n   *\n   * @param nextProps - The next set of props data\n   * @param prevState - The previous set of state data\n   */\n  static getDerivedStateFromProps<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n    nextProps: Readonly<FieldProps<T[], S, F>>,\n    prevState: Readonly<ArrayFieldState<T>>\n  ) {\n    // Don't call getDerivedStateFromProps if keyed formdata was just updated.\n    if (prevState.updatedKeyedFormData) {\n      return {\n        updatedKeyedFormData: false,\n      };\n    }\n    const nextFormData = Array.isArray(nextProps.formData) ? nextProps.formData : [];\n    const previousKeyedFormData = prevState.keyedFormData || [];\n    const newKeyedFormData =\n      nextFormData.length === previousKeyedFormData.length\n        ? previousKeyedFormData.map((previousKeyedFormDatum, index) => {\n            return {\n              key: previousKeyedFormDatum.key,\n              item: nextFormData[index],\n            };\n          })\n        : generateKeyedFormData<T>(nextFormData);\n    return {\n      keyedFormData: newKeyedFormData,\n    };\n  }\n\n  /** Returns the appropriate title for an item by getting first the title from the schema.items, then falling back to\n   * the description from the schema.items, and finally the string \"Item\"\n   */\n  get itemTitle() {\n    const { schema, registry } = this.props;\n    const { translateString } = registry;\n    return get(\n      schema,\n      [ITEMS_KEY, 'title'],\n      get(schema, [ITEMS_KEY, 'description'], translateString(TranslatableString.ArrayItemTitle))\n    );\n  }\n\n  /** Determines whether the item described in the schema is always required, which is determined by whether any item\n   * may be null.\n   *\n   * @param itemSchema - The schema for the item\n   * @return - True if the item schema type does not contain the \"null\" type\n   */\n  isItemRequired(itemSchema: S) {\n    if (Array.isArray(itemSchema.type)) {\n      // While we don't yet support composite/nullable jsonschema types, it's\n      // future-proof to check for requirement against these.\n      return !itemSchema.type.includes('null');\n    }\n    // All non-null array item types are inherently required by design\n    return itemSchema.type !== 'null';\n  }\n\n  /** Determines whether more items can be added to the array. If the uiSchema indicates the array doesn't allow adding\n   * then false is returned. Otherwise, if the schema indicates that there are a maximum number of items and the\n   * `formData` matches that value, then false is returned, otherwise true is returned.\n   *\n   * @param formItems - The list of items in the form\n   * @returns - True if the item is addable otherwise false\n   */\n  canAddItem(formItems: any[]) {\n    const { schema, uiSchema, registry } = this.props;\n    let { addable } = getUiOptions<T[], S, F>(uiSchema, registry.globalUiOptions);\n    if (addable !== false) {\n      // if ui:options.addable was not explicitly set to false, we can add\n      // another item if we have not exceeded maxItems yet\n      if (schema.maxItems !== undefined) {\n        addable = formItems.length < schema.maxItems;\n      } else {\n        addable = true;\n      }\n    }\n    return addable;\n  }\n\n  /** Returns the default form information for an item based on the schema for that item. Deals with the possibility\n   * that the schema is fixed and allows additional items.\n   */\n  _getNewFormDataRow = (): T => {\n    const { schema, registry } = this.props;\n    const { schemaUtils } = registry;\n    let itemSchema = schema.items as S;\n    if (isFixedItems(schema) && allowAdditionalItems(schema)) {\n      itemSchema = schema.additionalItems as S;\n    }\n    // Cast this as a T to work around schema utils being for T[] caused by the FieldProps<T[], S, F> call on the class\n    return schemaUtils.getDefaultFormState(itemSchema) as unknown as T;\n  };\n\n  /** Callback handler for when the user clicks on the add or add at index buttons. Creates a new row of keyed form data\n   * either at the end of the list (when index is not specified) or inserted at the `index` when it is, adding it into\n   * the state, and then returning `onChange()` with the plain form data converted from the keyed data\n   *\n   * @param event - The event for the click\n   * @param [index] - The optional index at which to add the new data\n   */\n  _handleAddClick(event: MouseEvent, index?: number) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    const { onChange } = this.props;\n    const { keyedFormData } = this.state;\n    const newKeyedFormDataRow: KeyedFormDataType<T> = {\n      key: generateRowId(),\n      item: this._getNewFormDataRow(),\n    };\n    const newKeyedFormData = [...keyedFormData];\n    if (index !== undefined) {\n      newKeyedFormData.splice(index, 0, newKeyedFormDataRow);\n    } else {\n      newKeyedFormData.push(newKeyedFormDataRow);\n    }\n    this.setState(\n      {\n        keyedFormData: newKeyedFormData,\n        updatedKeyedFormData: true,\n      },\n      () => onChange(keyedToPlainFormData(newKeyedFormData))\n    );\n  }\n\n  /** Callback handler for when the user clicks on the add button. Creates a new row of keyed form data at the end of\n   * the list, adding it into the state, and then returning `onChange()` with the plain form data converted from the\n   * keyed data\n   *\n   * @param event - The event for the click\n   */\n  onAddClick = (event: MouseEvent) => {\n    this._handleAddClick(event);\n  };\n\n  /** Callback handler for when the user clicks on the add button on an existing array element. Creates a new row of\n   * keyed form data inserted at the `index`, adding it into the state, and then returning `onChange()` with the plain\n   * form data converted from the keyed data\n   *\n   * @param index - The index at which the add button is clicked\n   */\n  onAddIndexClick = (index: number) => {\n    return (event: MouseEvent) => {\n      this._handleAddClick(event, index);\n    };\n  };\n\n  /** Callback handler for when the user clicks on the copy button on an existing array element. Clones the row of\n   * keyed form data at the `index` into the next position in the state, and then returning `onChange()` with the plain\n   * form data converted from the keyed data\n   *\n   * @param index - The index at which the copy button is clicked\n   */\n  onCopyIndexClick = (index: number) => {\n    return (event: MouseEvent) => {\n      if (event) {\n        event.preventDefault();\n      }\n\n      const { onChange } = this.props;\n      const { keyedFormData } = this.state;\n      const newKeyedFormDataRow: KeyedFormDataType<T> = {\n        key: generateRowId(),\n        item: cloneDeep(keyedFormData[index].item),\n      };\n      const newKeyedFormData = [...keyedFormData];\n      if (index !== undefined) {\n        newKeyedFormData.splice(index + 1, 0, newKeyedFormDataRow);\n      } else {\n        newKeyedFormData.push(newKeyedFormDataRow);\n      }\n      this.setState(\n        {\n          keyedFormData: newKeyedFormData,\n          updatedKeyedFormData: true,\n        },\n        () => onChange(keyedToPlainFormData(newKeyedFormData))\n      );\n    };\n  };\n\n  /** Callback handler for when the user clicks on the remove button on an existing array element. Removes the row of\n   * keyed form data at the `index` in the state, and then returning `onChange()` with the plain form data converted\n   * from the keyed data\n   *\n   * @param index - The index at which the remove button is clicked\n   */\n  onDropIndexClick = (index: number) => {\n    return (event: MouseEvent) => {\n      if (event) {\n        event.preventDefault();\n      }\n      const { onChange, errorSchema } = this.props;\n      const { keyedFormData } = this.state;\n      // refs #195: revalidate to ensure properly reindexing errors\n      let newErrorSchema: ErrorSchema<T>;\n      if (errorSchema) {\n        newErrorSchema = {};\n        for (const idx in errorSchema) {\n          const i = parseInt(idx);\n          if (i < index) {\n            set(newErrorSchema, [i], errorSchema[idx]);\n          } else if (i > index) {\n            set(newErrorSchema, [i - 1], errorSchema[idx]);\n          }\n        }\n      }\n      const newKeyedFormData = keyedFormData.filter((_, i) => i !== index);\n      this.setState(\n        {\n          keyedFormData: newKeyedFormData,\n          updatedKeyedFormData: true,\n        },\n        () => onChange(keyedToPlainFormData(newKeyedFormData), newErrorSchema as ErrorSchema<T[]>)\n      );\n    };\n  };\n\n  /** Callback handler for when the user clicks on one of the move item buttons on an existing array element. Moves the\n   * row of keyed form data at the `index` to the `newIndex` in the state, and then returning `onChange()` with the\n   * plain form data converted from the keyed data\n   *\n   * @param index - The index of the item to move\n   * @param newIndex - The index to where the item is to be moved\n   */\n  onReorderClick = (index: number, newIndex: number) => {\n    return (event: MouseEvent<HTMLButtonElement>) => {\n      if (event) {\n        event.preventDefault();\n        event.currentTarget.blur();\n      }\n      const { onChange, errorSchema } = this.props;\n      let newErrorSchema: ErrorSchema<T>;\n      if (errorSchema) {\n        newErrorSchema = {};\n        for (const idx in errorSchema) {\n          const i = parseInt(idx);\n          if (i == index) {\n            set(newErrorSchema, [newIndex], errorSchema[index]);\n          } else if (i == newIndex) {\n            set(newErrorSchema, [index], errorSchema[newIndex]);\n          } else {\n            set(newErrorSchema, [idx], errorSchema[i]);\n          }\n        }\n      }\n\n      const { keyedFormData } = this.state;\n      function reOrderArray() {\n        // Copy item\n        const _newKeyedFormData = keyedFormData.slice();\n\n        // Moves item from index to newIndex\n        _newKeyedFormData.splice(index, 1);\n        _newKeyedFormData.splice(newIndex, 0, keyedFormData[index]);\n\n        return _newKeyedFormData;\n      }\n      const newKeyedFormData = reOrderArray();\n      this.setState(\n        {\n          keyedFormData: newKeyedFormData,\n        },\n        () => onChange(keyedToPlainFormData(newKeyedFormData), newErrorSchema as ErrorSchema<T[]>)\n      );\n    };\n  };\n\n  /** Callback handler used to deal with changing the value of the data in the array at the `index`. Calls the\n   * `onChange` callback with the updated form data\n   *\n   * @param index - The index of the item being changed\n   */\n  onChangeForIndex = (index: number) => {\n    return (value: any, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n      const { formData, onChange, errorSchema } = this.props;\n      const arrayData = Array.isArray(formData) ? formData : [];\n      const newFormData = arrayData.map((item: T, i: number) => {\n        // We need to treat undefined items as nulls to have validation.\n        // See https://github.com/tdegrunt/jsonschema/issues/206\n        const jsonValue = typeof value === 'undefined' ? null : value;\n        return index === i ? jsonValue : item;\n      });\n      onChange(\n        newFormData,\n        errorSchema &&\n          errorSchema && {\n            ...errorSchema,\n            [index]: newErrorSchema,\n          },\n        id\n      );\n    };\n  };\n\n  /** Callback handler used to change the value for a checkbox */\n  onSelectChange = (value: any) => {\n    const { onChange, idSchema } = this.props;\n    onChange(value, undefined, idSchema && idSchema.$id);\n  };\n\n  /** Renders the `ArrayField` depending on the specific needs of the schema and uischema elements\n   */\n  render() {\n    const { schema, uiSchema, idSchema, registry } = this.props;\n    const { schemaUtils, translateString } = registry;\n    if (!(ITEMS_KEY in schema)) {\n      const uiOptions = getUiOptions<T[], S, F>(uiSchema);\n      const UnsupportedFieldTemplate = getTemplate<'UnsupportedFieldTemplate', T[], S, F>(\n        'UnsupportedFieldTemplate',\n        registry,\n        uiOptions\n      );\n\n      return (\n        <UnsupportedFieldTemplate\n          schema={schema}\n          idSchema={idSchema}\n          reason={translateString(TranslatableString.MissingItems)}\n          registry={registry}\n        />\n      );\n    }\n    if (schemaUtils.isMultiSelect(schema)) {\n      // If array has enum or uniqueItems set to true, call renderMultiSelect() to render the default multiselect widget or a custom widget, if specified.\n      return this.renderMultiSelect();\n    }\n    if (isCustomWidget<T[], S, F>(uiSchema)) {\n      return this.renderCustomWidget();\n    }\n    if (isFixedItems(schema)) {\n      return this.renderFixedArray();\n    }\n    if (schemaUtils.isFilesArray(schema, uiSchema)) {\n      return this.renderFiles();\n    }\n    return this.renderNormalArray();\n  }\n\n  /** Renders a normal array without any limitations of length\n   */\n  renderNormalArray() {\n    const {\n      schema,\n      uiSchema = {},\n      errorSchema,\n      idSchema,\n      name,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      registry,\n      onBlur,\n      onFocus,\n      idPrefix,\n      idSeparator = '_',\n      rawErrors,\n    } = this.props;\n    const { keyedFormData } = this.state;\n    const title = schema.title === undefined ? name : schema.title;\n    const { schemaUtils, formContext } = registry;\n    const uiOptions = getUiOptions<T[], S, F>(uiSchema);\n    const _schemaItems: S = isObject(schema.items) ? (schema.items as S) : ({} as S);\n    const itemsSchema: S = schemaUtils.retrieveSchema(_schemaItems);\n    const formData = keyedToPlainFormData(this.state.keyedFormData);\n    const canAdd = this.canAddItem(formData);\n    const arrayProps: ArrayFieldTemplateProps<T[], S, F> = {\n      canAdd,\n      items: keyedFormData.map((keyedItem, index) => {\n        const { key, item } = keyedItem;\n        // While we are actually dealing with a single item of type T, the types require a T[], so cast\n        const itemCast = item as unknown as T[];\n        const itemSchema = schemaUtils.retrieveSchema(_schemaItems, itemCast);\n        const itemErrorSchema = errorSchema ? (errorSchema[index] as ErrorSchema<T[]>) : undefined;\n        const itemIdPrefix = idSchema.$id + idSeparator + index;\n        const itemIdSchema = schemaUtils.toIdSchema(itemSchema, itemIdPrefix, itemCast, idPrefix, idSeparator);\n        return this.renderArrayFieldItem({\n          key,\n          index,\n          name: name && `${name}-${index}`,\n          canAdd,\n          canMoveUp: index > 0,\n          canMoveDown: index < formData.length - 1,\n          itemSchema,\n          itemIdSchema,\n          itemErrorSchema,\n          itemData: itemCast,\n          itemUiSchema: uiSchema.items,\n          autofocus: autofocus && index === 0,\n          onBlur,\n          onFocus,\n          rawErrors,\n          totalItems: keyedFormData.length,\n        });\n      }),\n      className: `field field-array field-array-of-${itemsSchema.type}`,\n      disabled,\n      idSchema,\n      uiSchema,\n      onAddClick: this.onAddClick,\n      readonly,\n      required,\n      schema,\n      title,\n      formContext,\n      formData,\n      rawErrors,\n      registry,\n    };\n\n    const Template = getTemplate<'ArrayFieldTemplate', T[], S, F>('ArrayFieldTemplate', registry, uiOptions);\n    return <Template {...arrayProps} />;\n  }\n\n  /** Renders an array using the custom widget provided by the user in the `uiSchema`\n   */\n  renderCustomWidget() {\n    const {\n      schema,\n      idSchema,\n      uiSchema,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      hideError,\n      placeholder,\n      onBlur,\n      onFocus,\n      formData: items = [],\n      registry,\n      rawErrors,\n      name,\n    } = this.props;\n    const { widgets, formContext, globalUiOptions, schemaUtils } = registry;\n    const { widget, title: uiTitle, ...options } = getUiOptions<T[], S, F>(uiSchema, globalUiOptions);\n    const Widget = getWidget<T[], S, F>(schema, widget, widgets);\n    const label = uiTitle ?? schema.title ?? name;\n    const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema, globalUiOptions);\n    return (\n      <Widget\n        id={idSchema.$id}\n        name={name}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        options={options}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        hideError={hideError}\n        required={required}\n        label={label}\n        hideLabel={!displayLabel}\n        placeholder={placeholder}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n      />\n    );\n  }\n\n  /** Renders an array as a set of checkboxes\n   */\n  renderMultiSelect() {\n    const {\n      schema,\n      idSchema,\n      uiSchema,\n      formData: items = [],\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      placeholder,\n      onBlur,\n      onFocus,\n      registry,\n      rawErrors,\n      name,\n    } = this.props;\n    const { widgets, schemaUtils, formContext, globalUiOptions } = registry;\n    const itemsSchema = schemaUtils.retrieveSchema(schema.items as S, items);\n    const enumOptions = optionsList(itemsSchema);\n    const { widget = 'select', title: uiTitle, ...options } = getUiOptions<T[], S, F>(uiSchema, globalUiOptions);\n    const Widget = getWidget<T[], S, F>(schema, widget, widgets);\n    const label = uiTitle ?? schema.title ?? name;\n    const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema, globalUiOptions);\n    return (\n      <Widget\n        id={idSchema.$id}\n        name={name}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        options={{ ...options, enumOptions }}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        required={required}\n        label={label}\n        hideLabel={!displayLabel}\n        placeholder={placeholder}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n      />\n    );\n  }\n\n  /** Renders an array of files using the `FileWidget`\n   */\n  renderFiles() {\n    const {\n      schema,\n      uiSchema,\n      idSchema,\n      name,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      onBlur,\n      onFocus,\n      registry,\n      formData: items = [],\n      rawErrors,\n    } = this.props;\n    const { widgets, formContext, globalUiOptions, schemaUtils } = registry;\n    const { widget = 'files', title: uiTitle, ...options } = getUiOptions<T[], S, F>(uiSchema, globalUiOptions);\n    const Widget = getWidget<T[], S, F>(schema, widget, widgets);\n    const label = uiTitle ?? schema.title ?? name;\n    const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema, globalUiOptions);\n    return (\n      <Widget\n        options={options}\n        id={idSchema.$id}\n        name={name}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        schema={schema}\n        uiSchema={uiSchema}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        required={required}\n        registry={registry}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n        label={label}\n        hideLabel={!displayLabel}\n      />\n    );\n  }\n\n  /** Renders an array that has a maximum limit of items\n   */\n  renderFixedArray() {\n    const {\n      schema,\n      uiSchema = {},\n      formData = [],\n      errorSchema,\n      idPrefix,\n      idSeparator = '_',\n      idSchema,\n      name,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      registry,\n      onBlur,\n      onFocus,\n      rawErrors,\n    } = this.props;\n    const { keyedFormData } = this.state;\n    let { formData: items = [] } = this.props;\n    const title = schema.title || name;\n    const uiOptions = getUiOptions<T[], S, F>(uiSchema);\n    const { schemaUtils, formContext } = registry;\n    const _schemaItems: S[] = isObject(schema.items) ? (schema.items as S[]) : ([] as S[]);\n    const itemSchemas = _schemaItems.map((item: S, index: number) =>\n      schemaUtils.retrieveSchema(item, formData[index] as unknown as T[])\n    );\n    const additionalSchema = isObject(schema.additionalItems)\n      ? schemaUtils.retrieveSchema(schema.additionalItems as S, formData)\n      : null;\n\n    if (!items || items.length < itemSchemas.length) {\n      // to make sure at least all fixed items are generated\n      items = items || [];\n      items = items.concat(new Array(itemSchemas.length - items.length));\n    }\n\n    // These are the props passed into the render function\n    const canAdd = this.canAddItem(items) && !!additionalSchema;\n    const arrayProps: ArrayFieldTemplateProps<T[], S, F> = {\n      canAdd,\n      className: 'field field-array field-array-fixed-items',\n      disabled,\n      idSchema,\n      formData,\n      items: keyedFormData.map((keyedItem, index) => {\n        const { key, item } = keyedItem;\n        // While we are actually dealing with a single item of type T, the types require a T[], so cast\n        const itemCast = item as unknown as T[];\n        const additional = index >= itemSchemas.length;\n        const itemSchema =\n          additional && isObject(schema.additionalItems)\n            ? schemaUtils.retrieveSchema(schema.additionalItems as S, itemCast)\n            : itemSchemas[index];\n        const itemIdPrefix = idSchema.$id + idSeparator + index;\n        const itemIdSchema = schemaUtils.toIdSchema(itemSchema, itemIdPrefix, itemCast, idPrefix, idSeparator);\n        const itemUiSchema = additional\n          ? uiSchema.additionalItems || {}\n          : Array.isArray(uiSchema.items)\n          ? uiSchema.items[index]\n          : uiSchema.items || {};\n        const itemErrorSchema = errorSchema ? (errorSchema[index] as ErrorSchema<T[]>) : undefined;\n\n        return this.renderArrayFieldItem({\n          key,\n          index,\n          name: name && `${name}-${index}`,\n          canAdd,\n          canRemove: additional,\n          canMoveUp: index >= itemSchemas.length + 1,\n          canMoveDown: additional && index < items.length - 1,\n          itemSchema,\n          itemData: itemCast,\n          itemUiSchema,\n          itemIdSchema,\n          itemErrorSchema,\n          autofocus: autofocus && index === 0,\n          onBlur,\n          onFocus,\n          rawErrors,\n          totalItems: keyedFormData.length,\n        });\n      }),\n      onAddClick: this.onAddClick,\n      readonly,\n      required,\n      registry,\n      schema,\n      uiSchema,\n      title,\n      formContext,\n      rawErrors,\n    };\n\n    const Template = getTemplate<'ArrayFieldTemplate', T[], S, F>('ArrayFieldTemplate', registry, uiOptions);\n    return <Template {...arrayProps} />;\n  }\n\n  /** Renders the individual array item using a `SchemaField` along with the additional properties required to be send\n   * back to the `ArrayFieldItemTemplate`.\n   *\n   * @param props - The props for the individual array item to be rendered\n   */\n  renderArrayFieldItem(props: {\n    key: string;\n    index: number;\n    name: string;\n    canAdd: boolean;\n    canRemove?: boolean;\n    canMoveUp: boolean;\n    canMoveDown: boolean;\n    itemSchema: S;\n    itemData: T[];\n    itemUiSchema: UiSchema<T[], S, F>;\n    itemIdSchema: IdSchema<T[]>;\n    itemErrorSchema?: ErrorSchema<T[]>;\n    autofocus?: boolean;\n    onBlur: FieldProps<T[], S, F>['onBlur'];\n    onFocus: FieldProps<T[], S, F>['onFocus'];\n    rawErrors?: string[];\n    totalItems: number;\n  }) {\n    const {\n      key,\n      index,\n      name,\n      canAdd,\n      canRemove = true,\n      canMoveUp,\n      canMoveDown,\n      itemSchema,\n      itemData,\n      itemUiSchema,\n      itemIdSchema,\n      itemErrorSchema,\n      autofocus,\n      onBlur,\n      onFocus,\n      rawErrors,\n      totalItems,\n    } = props;\n    const { disabled, hideError, idPrefix, idSeparator, readonly, uiSchema, registry, formContext } = this.props;\n    const {\n      fields: { ArraySchemaField, SchemaField },\n      globalUiOptions,\n    } = registry;\n    const ItemSchemaField = ArraySchemaField || SchemaField;\n    const { orderable = true, removable = true, copyable = false } = getUiOptions<T[], S, F>(uiSchema, globalUiOptions);\n    const has: { [key: string]: boolean } = {\n      moveUp: orderable && canMoveUp,\n      moveDown: orderable && canMoveDown,\n      copy: copyable && canAdd,\n      remove: removable && canRemove,\n      toolbar: false,\n    };\n    has.toolbar = Object.keys(has).some((key: keyof typeof has) => has[key]);\n\n    return {\n      children: (\n        <ItemSchemaField\n          name={name}\n          index={index}\n          schema={itemSchema}\n          uiSchema={itemUiSchema}\n          formData={itemData}\n          formContext={formContext}\n          errorSchema={itemErrorSchema}\n          idPrefix={idPrefix}\n          idSeparator={idSeparator}\n          idSchema={itemIdSchema}\n          required={this.isItemRequired(itemSchema)}\n          onChange={this.onChangeForIndex(index)}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          registry={registry}\n          disabled={disabled}\n          readonly={readonly}\n          hideError={hideError}\n          autofocus={autofocus}\n          rawErrors={rawErrors}\n        />\n      ),\n      className: 'array-item',\n      disabled,\n      canAdd,\n      hasCopy: has.copy,\n      hasToolbar: has.toolbar,\n      hasMoveUp: has.moveUp,\n      hasMoveDown: has.moveDown,\n      hasRemove: has.remove,\n      index,\n      totalItems,\n      key,\n      onAddIndexClick: this.onAddIndexClick,\n      onCopyIndexClick: this.onCopyIndexClick,\n      onDropIndexClick: this.onDropIndexClick,\n      onReorderClick: this.onReorderClick,\n      readonly,\n      registry,\n      schema: itemSchema,\n      uiSchema: itemUiSchema,\n    };\n  }\n}\n\n/** `ArrayField` is `React.ComponentType<FieldProps<T[], S, F>>` (necessarily) but the `registry` requires things to be a\n * `Field` which is defined as `React.ComponentType<FieldProps<T, S, F>>`, so cast it to make `registry` happy.\n */\nexport default ArrayField;\n","import {\n  getWidget,\n  getUiOptions,\n  optionsList,\n  FieldProps,\n  FormContextType,\n  EnumOptionsType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n} from '@rjsf/utils';\nimport isObject from 'lodash/isObject';\n\n/** The `BooleanField` component is used to render a field in the schema is boolean. It constructs `enumOptions` for the\n * two boolean values based on the various alternatives in the schema.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction BooleanField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    registry,\n    required,\n    disabled,\n    readonly,\n    autofocus,\n    onChange,\n    onFocus,\n    onBlur,\n    rawErrors,\n  } = props;\n  const { title } = schema;\n  const { widgets, formContext, translateString, globalUiOptions } = registry;\n  const {\n    widget = 'checkbox',\n    title: uiTitle,\n    // Unlike the other fields, don't use `getDisplayLabel()` since it always returns false for the boolean type\n    label: displayLabel = true,\n    ...options\n  } = getUiOptions<T, S, F>(uiSchema, globalUiOptions);\n  const Widget = getWidget(schema, widget, widgets);\n  const yes = translateString(TranslatableString.YesLabel);\n  const no = translateString(TranslatableString.NoLabel);\n  let enumOptions: EnumOptionsType<S>[] | undefined;\n  const label = uiTitle ?? title ?? name;\n  if (Array.isArray(schema.oneOf)) {\n    enumOptions = optionsList<S>({\n      oneOf: schema.oneOf\n        .map((option) => {\n          if (isObject(option)) {\n            return {\n              ...option,\n              title: option.title || (option.const === true ? yes : no),\n            };\n          }\n          return undefined;\n        })\n        .filter((o: any) => o) as S[], // cast away the error that typescript can't grok is fixed\n    } as unknown as S);\n  } else {\n    // We deprecated enumNames in v5. It's intentionally omitted from RSJFSchema type, so we need to cast here.\n    const schemaWithEnumNames = schema as S & { enumNames?: string[] };\n    const enums = schema.enum ?? [true, false];\n    if (!schemaWithEnumNames.enumNames && enums.length === 2 && enums.every((v: any) => typeof v === 'boolean')) {\n      enumOptions = [\n        {\n          value: enums[0],\n          label: enums[0] ? yes : no,\n        },\n        {\n          value: enums[1],\n          label: enums[1] ? yes : no,\n        },\n      ];\n    } else {\n      enumOptions = optionsList<S>({\n        enum: enums,\n        // NOTE: enumNames is deprecated, but still supported for now.\n        enumNames: schemaWithEnumNames.enumNames,\n      } as unknown as S);\n    }\n  }\n\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      uiSchema={uiSchema}\n      id={idSchema.$id}\n      name={name}\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      label={label}\n      hideLabel={!displayLabel}\n      value={formData}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      registry={registry}\n      formContext={formContext}\n      autofocus={autofocus}\n      rawErrors={rawErrors}\n    />\n  );\n}\n\nexport default BooleanField;\n","import { Component } from 'react';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport omit from 'lodash/omit';\nimport {\n  deepEquals,\n  ERRORS_KEY,\n  FieldProps,\n  FormContextType,\n  getUiOptions,\n  getWidget,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n} from '@rjsf/utils';\n\n/** Type used for the state of the `AnyOfField` component */\ntype AnyOfFieldState<S extends StrictRJSFSchema = RJSFSchema> = {\n  /** The currently selected option */\n  selectedOption: number;\n  /* The option schemas after retrieving all $refs */\n  retrievedOptions: S[];\n};\n\n/** The `AnyOfField` component is used to render a field in the schema that is an `anyOf`, `allOf` or `oneOf`. It tracks\n * the currently selected option and cleans up any irrelevant data in `formData`.\n *\n * @param props - The `FieldProps` for this template\n */\nclass AnyOfField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> extends Component<\n  FieldProps<T, S, F>,\n  AnyOfFieldState<S>\n> {\n  /** Constructs an `AnyOfField` with the given `props` to initialize the initially selected option in state\n   *\n   * @param props - The `FieldProps` for this template\n   */\n  constructor(props: FieldProps<T, S, F>) {\n    super(props);\n\n    const {\n      formData,\n      options,\n      registry: { schemaUtils },\n    } = this.props;\n    // cache the retrieved options in state in case they have $refs to save doing it later\n    const retrievedOptions = options.map((opt: S) => schemaUtils.retrieveSchema(opt, formData));\n\n    this.state = {\n      retrievedOptions,\n      selectedOption: this.getMatchingOption(0, formData, retrievedOptions),\n    };\n  }\n\n  /** React lifecycle method that is called when the props and/or state for this component is updated. It recomputes the\n   * currently selected option based on the overall `formData`\n   *\n   * @param prevProps - The previous `FieldProps` for this template\n   * @param prevState - The previous `AnyOfFieldState` for this template\n   */\n  componentDidUpdate(prevProps: Readonly<FieldProps<T, S, F>>, prevState: Readonly<AnyOfFieldState>) {\n    const { formData, options, idSchema } = this.props;\n    const { selectedOption } = this.state;\n    let newState = this.state;\n    if (!deepEquals(prevProps.options, options)) {\n      const {\n        registry: { schemaUtils },\n      } = this.props;\n      // re-cache the retrieved options in state in case they have $refs to save doing it later\n      const retrievedOptions = options.map((opt: S) => schemaUtils.retrieveSchema(opt, formData));\n      newState = { selectedOption, retrievedOptions };\n    }\n    if (!deepEquals(formData, prevProps.formData) && idSchema.$id === prevProps.idSchema.$id) {\n      const { retrievedOptions } = newState;\n      const matchingOption = this.getMatchingOption(selectedOption, formData, retrievedOptions);\n\n      if (prevState && matchingOption !== selectedOption) {\n        newState = { selectedOption: matchingOption, retrievedOptions };\n      }\n    }\n    if (newState !== this.state) {\n      this.setState(newState);\n    }\n  }\n\n  /** Determines the best matching option for the given `formData` and `options`.\n   *\n   * @param formData - The new formData\n   * @param options - The list of options to choose from\n   * @return - The index of the `option` that best matches the `formData`\n   */\n  getMatchingOption(selectedOption: number, formData: T | undefined, options: S[]) {\n    const { schemaUtils } = this.props.registry;\n\n    const option = schemaUtils.getClosestMatchingOption(formData, options, selectedOption);\n    if (option > 0) {\n      return option;\n    }\n    // If the form data matches none of the options, use the currently selected\n    // option, assuming it's available; otherwise use the first option\n    return selectedOption || 0;\n  }\n\n  /** Callback handler to remember what the currently selected option is. In addition to that the `formData` is updated\n   * to remove properties that are not part of the newly selected option schema, and then the updated data is passed to\n   * the `onChange` handler.\n   *\n   * @param option - The new option value being selected\n   */\n  onOptionChange = (option?: string) => {\n    const { selectedOption, retrievedOptions } = this.state;\n    const { formData, onChange, registry } = this.props;\n    const { schemaUtils } = registry;\n    const intOption = option !== undefined ? parseInt(option, 10) : -1;\n    if (intOption === selectedOption) {\n      return;\n    }\n    const newOption = intOption >= 0 ? retrievedOptions[intOption] : undefined;\n    const oldOption = selectedOption >= 0 ? retrievedOptions[selectedOption] : undefined;\n\n    let newFormData = schemaUtils.sanitizeDataForNewSchema(newOption, oldOption, formData);\n    if (newFormData && newOption) {\n      // Call getDefaultFormState to make sure defaults are populated on change. Pass \"excludeObjectChildren\"\n      // so that only the root objects themselves are created without adding undefined children properties\n      newFormData = schemaUtils.getDefaultFormState(newOption, newFormData, 'excludeObjectChildren') as T;\n    }\n    onChange(newFormData, undefined, this.getFieldId());\n\n    this.setState({ selectedOption: intOption });\n  };\n\n  getFieldId() {\n    const { idSchema, schema } = this.props;\n    return `${idSchema.$id}${schema.oneOf ? '__oneof_select' : '__anyof_select'}`;\n  }\n\n  /** Renders the `AnyOfField` selector along with a `SchemaField` for the value of the `formData`\n   */\n  render() {\n    const {\n      name,\n      baseType,\n      disabled = false,\n      errorSchema = {},\n      formContext,\n      onBlur,\n      onFocus,\n      registry,\n      schema,\n      uiSchema,\n    } = this.props;\n\n    const { widgets, fields, translateString, globalUiOptions, schemaUtils } = registry;\n    const { SchemaField: _SchemaField } = fields;\n    const { selectedOption, retrievedOptions } = this.state;\n    const {\n      widget = 'select',\n      placeholder,\n      autofocus,\n      autocomplete,\n      title = schema.title,\n      ...uiOptions\n    } = getUiOptions<T, S, F>(uiSchema, globalUiOptions);\n    const Widget = getWidget<T, S, F>({ type: 'number' }, widget, widgets);\n    const rawErrors = get(errorSchema, ERRORS_KEY, []);\n    const fieldErrorSchema = omit(errorSchema, [ERRORS_KEY]);\n    const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema, globalUiOptions);\n\n    const option = selectedOption >= 0 ? retrievedOptions[selectedOption] || null : null;\n    let optionSchema: S;\n\n    if (option) {\n      // If the subschema doesn't declare a type, infer the type from the\n      // parent schema\n      optionSchema = option.type ? option : Object.assign({}, option, { type: baseType });\n    }\n\n    const translateEnum: TranslatableString = title\n      ? TranslatableString.TitleOptionPrefix\n      : TranslatableString.OptionPrefix;\n    const translateParams = title ? [title] : [];\n    const enumOptions = retrievedOptions.map((opt: { title?: string }, index: number) => ({\n      label: opt.title || translateString(translateEnum, translateParams.concat(String(index + 1))),\n      value: index,\n    }));\n\n    return (\n      <div className='panel panel-default panel-body'>\n        <div className='form-group'>\n          <Widget\n            id={this.getFieldId()}\n            name={`${name}${schema.oneOf ? '__oneof_select' : '__anyof_select'}`}\n            schema={{ type: 'number', default: 0 } as S}\n            onChange={this.onOptionChange}\n            onBlur={onBlur}\n            onFocus={onFocus}\n            disabled={disabled || isEmpty(enumOptions)}\n            multiple={false}\n            rawErrors={rawErrors}\n            errorSchema={fieldErrorSchema}\n            value={selectedOption >= 0 ? selectedOption : undefined}\n            options={{ enumOptions, ...uiOptions }}\n            registry={registry}\n            formContext={formContext}\n            placeholder={placeholder}\n            autocomplete={autocomplete}\n            autofocus={autofocus}\n            label={title ?? name}\n            hideLabel={!displayLabel}\n          />\n        </div>\n        {option !== null && <_SchemaField {...this.props} schema={optionSchema!} />}\n      </div>\n    );\n  }\n}\n\nexport default AnyOfField;\n","import { useState, useCallback } from 'react';\nimport { asNumber, FieldProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n// Matches a string that ends in a . character, optionally followed by a sequence of\n// digits followed by any number of 0 characters up until the end of the line.\n// Ensuring that there is at least one prefixed character is important so that\n// you don't incorrectly match against \"0\".\nconst trailingCharMatcherWithPrefix = /\\.([0-9]*0)*$/;\n\n// This is used for trimming the trailing 0 and . characters without affecting\n// the rest of the string. Its possible to use one RegEx with groups for this\n// functionality, but it is fairly complex compared to simply defining two\n// different matchers.\nconst trailingCharMatcher = /[0.]0*$/;\n\n/**\n * The NumberField class has some special handling for dealing with trailing\n * decimal points and/or zeroes. This logic is designed to allow trailing values\n * to be visible in the input element, but not be represented in the\n * corresponding form data.\n *\n * The algorithm is as follows:\n *\n * 1. When the input value changes the value is cached in the component state\n *\n * 2. The value is then normalized, removing trailing decimal points and zeros,\n *    then passed to the \"onChange\" callback\n *\n * 3. When the component is rendered, the formData value is checked against the\n *    value cached in the state. If it matches the cached value, the cached\n *    value is passed to the input instead of the formData value\n */\nfunction NumberField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const { registry, onChange, formData, value: initialValue } = props;\n  const [lastValue, setLastValue] = useState(initialValue);\n  const { StringField } = registry.fields;\n\n  let value = formData;\n\n  /** Handle the change from the `StringField` to properly convert to a number\n   *\n   * @param value - The current value for the change occurring\n   */\n  const handleChange = useCallback(\n    (value: FieldProps<T, S, F>['value']) => {\n      // Cache the original value in component state\n      setLastValue(value);\n\n      // Normalize decimals that don't start with a zero character in advance so\n      // that the rest of the normalization logic is simpler\n      if (`${value}`.charAt(0) === '.') {\n        value = `0${value}`;\n      }\n\n      // Check that the value is a string (this can happen if the widget used is a\n      // <select>, due to an enum declaration etc) then, if the value ends in a\n      // trailing decimal point or multiple zeroes, strip the trailing values\n      const processed =\n        typeof value === 'string' && value.match(trailingCharMatcherWithPrefix)\n          ? asNumber(value.replace(trailingCharMatcher, ''))\n          : asNumber(value);\n\n      onChange(processed as unknown as T);\n    },\n    [onChange]\n  );\n\n  if (typeof lastValue === 'string' && typeof value === 'number') {\n    // Construct a regular expression that checks for a string that consists\n    // of the formData value suffixed with zero or one '.' characters and zero\n    // or more '0' characters\n    const re = new RegExp(`${value}`.replace('.', '\\\\.') + '\\\\.?0*$');\n\n    // If the cached \"lastValue\" is a match, use that instead of the formData\n    // value to prevent the input value from changing in the UI\n    if (lastValue.match(re)) {\n      value = lastValue as unknown as T;\n    }\n  }\n\n  return <StringField {...props} formData={value} onChange={handleChange} />;\n}\n\nexport default NumberField;\n","import { Component } from 'react';\nimport {\n  getTemplate,\n  getUiOptions,\n  orderProperties,\n  ErrorSchema,\n  FieldProps,\n  FormContextType,\n  GenericObjectType,\n  IdSchema,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  ADDITIONAL_PROPERTY_FLAG,\n  PROPERTIES_KEY,\n  REF_KEY,\n  ANY_OF_KEY,\n  ONE_OF_KEY,\n} from '@rjsf/utils';\nimport Markdown from 'markdown-to-jsx';\nimport get from 'lodash/get';\nimport has from 'lodash/has';\nimport isObject from 'lodash/isObject';\nimport set from 'lodash/set';\nimport unset from 'lodash/unset';\n\n/** Type used for the state of the `ObjectField` component */\ntype ObjectFieldState = {\n  /** Flag indicating whether an additional property key was modified */\n  wasPropertyKeyModified: boolean;\n  /** The set of additional properties */\n  additionalProperties: object;\n};\n\n/** The `ObjectField` component is used to render a field in the schema that is of type `object`. It tracks whether an\n * additional property key was modified and what it was modified to\n *\n * @param props - The `FieldProps` for this template\n */\nclass ObjectField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> extends Component<\n  FieldProps<T, S, F>,\n  ObjectFieldState\n> {\n  /** Set up the initial state */\n  state = {\n    wasPropertyKeyModified: false,\n    additionalProperties: {},\n  };\n\n  /** Returns a flag indicating whether the `name` field is required in the object schema\n   *\n   * @param name - The name of the field to check for required-ness\n   * @returns - True if the field `name` is required, false otherwise\n   */\n  isRequired(name: string) {\n    const { schema } = this.props;\n    return Array.isArray(schema.required) && schema.required.indexOf(name) !== -1;\n  }\n\n  /** Returns the `onPropertyChange` handler for the `name` field. Handles the special case where a user is attempting\n   * to clear the data for a field added as an additional property. Calls the `onChange()` handler with the updated\n   * formData.\n   *\n   * @param name - The name of the property\n   * @param addedByAdditionalProperties - Flag indicating whether this property is an additional property\n   * @returns - The onPropertyChange callback for the `name` property\n   */\n  onPropertyChange = (name: string, addedByAdditionalProperties = false) => {\n    return (value: T | undefined, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n      const { formData, onChange, errorSchema } = this.props;\n      if (value === undefined && addedByAdditionalProperties) {\n        // Don't set value = undefined for fields added by\n        // additionalProperties. Doing so removes them from the\n        // formData, which causes them to completely disappear\n        // (including the input field for the property name). Unlike\n        // fields which are \"mandated\" by the schema, these fields can\n        // be set to undefined by clicking a \"delete field\" button, so\n        // set empty values to the empty string.\n        value = '' as unknown as T;\n      }\n      const newFormData = { ...formData, [name]: value } as unknown as T;\n      onChange(\n        newFormData,\n        errorSchema &&\n          errorSchema && {\n            ...errorSchema,\n            [name]: newErrorSchema,\n          },\n        id\n      );\n    };\n  };\n\n  /** Returns a callback to handle the onDropPropertyClick event for the given `key` which removes the old `key` data\n   * and calls the `onChange` callback with it\n   *\n   * @param key - The key for which the drop callback is desired\n   * @returns - The drop property click callback\n   */\n  onDropPropertyClick = (key: string) => {\n    return (event: DragEvent) => {\n      event.preventDefault();\n      const { onChange, formData } = this.props;\n      const copiedFormData = { ...formData } as T;\n      unset(copiedFormData, key);\n      onChange(copiedFormData);\n    };\n  };\n\n  /** Computes the next available key name from the `preferredKey`, indexing through the already existing keys until one\n   * that is already not assigned is found.\n   *\n   * @param preferredKey - The preferred name of a new key\n   * @param [formData] - The form data in which to check if the desired key already exists\n   * @returns - The name of the next available key from `preferredKey`\n   */\n  getAvailableKey = (preferredKey: string, formData?: T) => {\n    const { uiSchema, registry } = this.props;\n    const { duplicateKeySuffixSeparator = '-' } = getUiOptions<T, S, F>(uiSchema, registry.globalUiOptions);\n\n    let index = 0;\n    let newKey = preferredKey;\n    while (has(formData, newKey)) {\n      newKey = `${preferredKey}${duplicateKeySuffixSeparator}${++index}`;\n    }\n    return newKey;\n  };\n\n  /** Returns a callback function that deals with the rename of a key for an additional property for a schema. That\n   * callback will attempt to rename the key and move the existing data to that key, calling `onChange` when it does.\n   *\n   * @param oldValue - The old value of a field\n   * @returns - The key change callback function\n   */\n  onKeyChange = (oldValue: any) => {\n    return (value: any, newErrorSchema: ErrorSchema<T>) => {\n      if (oldValue === value) {\n        return;\n      }\n      const { formData, onChange, errorSchema } = this.props;\n\n      value = this.getAvailableKey(value, formData);\n      const newFormData: GenericObjectType = {\n        ...(formData as GenericObjectType),\n      };\n      const newKeys: GenericObjectType = { [oldValue]: value };\n      const keyValues = Object.keys(newFormData).map((key) => {\n        const newKey = newKeys[key] || key;\n        return { [newKey]: newFormData[key] };\n      });\n      const renamedObj = Object.assign({}, ...keyValues);\n\n      this.setState({ wasPropertyKeyModified: true });\n\n      onChange(\n        renamedObj,\n        errorSchema &&\n          errorSchema && {\n            ...errorSchema,\n            [value]: newErrorSchema,\n          }\n      );\n    };\n  };\n\n  /** Returns a default value to be used for a new additional schema property of the given `type`\n   *\n   * @param type - The type of the new additional schema property\n   */\n  getDefaultValue(type?: RJSFSchema['type']) {\n    const {\n      registry: { translateString },\n    } = this.props;\n    switch (type) {\n      case 'array':\n        return [];\n      case 'boolean':\n        return false;\n      case 'null':\n        return null;\n      case 'number':\n        return 0;\n      case 'object':\n        return {};\n      case 'string':\n      default:\n        // We don't have a datatype for some reason (perhaps additionalProperties was true)\n        return translateString(TranslatableString.NewStringDefault);\n    }\n  }\n\n  /** Handles the adding of a new additional property on the given `schema`. Calls the `onChange` callback once the new\n   * default data for that field has been added to the formData.\n   *\n   * @param schema - The schema element to which the new property is being added\n   */\n  handleAddClick = (schema: S) => () => {\n    if (!schema.additionalProperties) {\n      return;\n    }\n    const { formData, onChange, registry } = this.props;\n    const newFormData = { ...formData } as T;\n\n    let type: RJSFSchema['type'] = undefined;\n    if (isObject(schema.additionalProperties)) {\n      type = schema.additionalProperties.type;\n      let apSchema = schema.additionalProperties;\n      if (REF_KEY in apSchema) {\n        const { schemaUtils } = registry;\n        apSchema = schemaUtils.retrieveSchema({ $ref: apSchema[REF_KEY] } as S, formData);\n        type = apSchema.type;\n      }\n      if (!type && (ANY_OF_KEY in apSchema || ONE_OF_KEY in apSchema)) {\n        type = 'object';\n      }\n    }\n\n    const newKey = this.getAvailableKey('newKey', newFormData);\n    // Cast this to make the `set` work properly\n    set(newFormData as GenericObjectType, newKey, this.getDefaultValue(type));\n\n    onChange(newFormData);\n  };\n\n  /** Renders the `ObjectField` from the given props\n   */\n  render() {\n    const {\n      schema: rawSchema,\n      uiSchema = {},\n      formData,\n      errorSchema,\n      idSchema,\n      name,\n      required = false,\n      disabled = false,\n      readonly = false,\n      hideError,\n      idPrefix,\n      idSeparator,\n      onBlur,\n      onFocus,\n      registry,\n    } = this.props;\n\n    const { fields, formContext, schemaUtils, translateString, globalUiOptions } = registry;\n    const { SchemaField } = fields;\n    const schema: S = schemaUtils.retrieveSchema(rawSchema, formData);\n    const uiOptions = getUiOptions<T, S, F>(uiSchema, globalUiOptions);\n    const { properties: schemaProperties = {} } = schema;\n\n    const title = uiOptions.title ?? schema.title ?? name;\n    const description = uiOptions.description ?? schema.description;\n    let orderedProperties: string[];\n    try {\n      const properties = Object.keys(schemaProperties);\n      orderedProperties = orderProperties(properties, uiOptions.order);\n    } catch (err) {\n      return (\n        <div>\n          <p className='config-error' style={{ color: 'red' }}>\n            <Markdown>\n              {translateString(TranslatableString.InvalidObjectField, [name || 'root', (err as Error).message])}\n            </Markdown>\n          </p>\n          <pre>{JSON.stringify(schema)}</pre>\n        </div>\n      );\n    }\n\n    const Template = getTemplate<'ObjectFieldTemplate', T, S, F>('ObjectFieldTemplate', registry, uiOptions);\n\n    const templateProps = {\n      // getDisplayLabel() always returns false for object types, so just check the `uiOptions.label`\n      title: uiOptions.label === false ? '' : title,\n      description: uiOptions.label === false ? undefined : description,\n      properties: orderedProperties.map((name) => {\n        const addedByAdditionalProperties = has(schema, [PROPERTIES_KEY, name, ADDITIONAL_PROPERTY_FLAG]);\n        const fieldUiSchema = addedByAdditionalProperties ? uiSchema.additionalProperties : uiSchema[name];\n        const hidden = getUiOptions<T, S, F>(fieldUiSchema).widget === 'hidden';\n        const fieldIdSchema: IdSchema<T> = get(idSchema, [name], {});\n\n        return {\n          content: (\n            <SchemaField\n              key={name}\n              name={name}\n              required={this.isRequired(name)}\n              schema={get(schema, [PROPERTIES_KEY, name], {})}\n              uiSchema={fieldUiSchema}\n              errorSchema={get(errorSchema, name)}\n              idSchema={fieldIdSchema}\n              idPrefix={idPrefix}\n              idSeparator={idSeparator}\n              formData={get(formData, name)}\n              formContext={formContext}\n              wasPropertyKeyModified={this.state.wasPropertyKeyModified}\n              onKeyChange={this.onKeyChange(name)}\n              onChange={this.onPropertyChange(name, addedByAdditionalProperties)}\n              onBlur={onBlur}\n              onFocus={onFocus}\n              registry={registry}\n              disabled={disabled}\n              readonly={readonly}\n              hideError={hideError}\n              onDropPropertyClick={this.onDropPropertyClick}\n            />\n          ),\n          name,\n          readonly,\n          disabled,\n          required,\n          hidden,\n        };\n      }),\n      readonly,\n      disabled,\n      required,\n      idSchema,\n      uiSchema,\n      schema,\n      formData,\n      formContext,\n      registry,\n    };\n    return <Template {...templateProps} onAddClick={this.handleAddClick} />;\n  }\n}\n\nexport default ObjectField;\n","import { useCallback, Component } from 'react';\nimport {\n  ADDITIONAL_PROPERTY_FLAG,\n  deepEquals,\n  descriptionId,\n  ErrorSchema,\n  FieldProps,\n  FieldTemplateProps,\n  FormContextType,\n  getSchemaType,\n  getTemplate,\n  getUiOptions,\n  ID_KEY,\n  IdSchema,\n  mergeObjects,\n  Registry,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  UI_OPTIONS_KEY,\n  UIOptionsType,\n} from '@rjsf/utils';\nimport isObject from 'lodash/isObject';\nimport omit from 'lodash/omit';\n\n/** The map of component type to FieldName */\nconst COMPONENT_TYPES: { [key: string]: string } = {\n  array: 'ArrayField',\n  boolean: 'BooleanField',\n  integer: 'NumberField',\n  number: 'NumberField',\n  object: 'ObjectField',\n  string: 'StringField',\n  null: 'NullField',\n};\n\n/** Computes and returns which `Field` implementation to return in order to render the field represented by the\n * `schema`. The `uiOptions` are used to alter what potential `Field` implementation is actually returned. If no\n * appropriate `Field` implementation can be found then a wrapper around `UnsupportedFieldTemplate` is used.\n *\n * @param schema - The schema from which to obtain the type\n * @param uiOptions - The UI Options that may affect the component decision\n * @param idSchema - The id that is passed to the `UnsupportedFieldTemplate`\n * @param registry - The registry from which fields and templates are obtained\n * @returns - The `Field` component that is used to render the actual field data\n */\nfunction getFieldComponent<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  schema: S,\n  uiOptions: UIOptionsType<T, S, F>,\n  idSchema: IdSchema<T>,\n  registry: Registry<T, S, F>\n) {\n  const field = uiOptions.field;\n  const { fields, translateString } = registry;\n  if (typeof field === 'function') {\n    return field;\n  }\n  if (typeof field === 'string' && field in fields) {\n    return fields[field];\n  }\n\n  const schemaType = getSchemaType(schema);\n  const type: string = Array.isArray(schemaType) ? schemaType[0] : schemaType || '';\n  const componentName = COMPONENT_TYPES[type];\n\n  // If the type is not defined and the schema uses 'anyOf' or 'oneOf', don't\n  // render a field and let the MultiSchemaField component handle the form display\n  if (!componentName && (schema.anyOf || schema.oneOf)) {\n    return () => null;\n  }\n\n  return componentName in fields\n    ? fields[componentName]\n    : () => {\n        const UnsupportedFieldTemplate = getTemplate<'UnsupportedFieldTemplate', T, S, F>(\n          'UnsupportedFieldTemplate',\n          registry,\n          uiOptions\n        );\n\n        return (\n          <UnsupportedFieldTemplate\n            schema={schema}\n            idSchema={idSchema}\n            reason={translateString(TranslatableString.UnknownFieldType, [String(schema.type)])}\n            registry={registry}\n          />\n        );\n      };\n}\n\n/** The `SchemaFieldRender` component is the work-horse of react-jsonschema-form, determining what kind of real field to\n * render based on the `schema`, `uiSchema` and all the other props. It also deals with rendering the `anyOf` and\n * `oneOf` fields.\n *\n * @param props - The `FieldProps` for this component\n */\nfunction SchemaFieldRender<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const {\n    schema: _schema,\n    idSchema: _idSchema,\n    uiSchema,\n    formData,\n    errorSchema,\n    idPrefix,\n    idSeparator,\n    name,\n    onChange,\n    onKeyChange,\n    onDropPropertyClick,\n    required,\n    registry,\n    wasPropertyKeyModified = false,\n  } = props;\n  const { formContext, schemaUtils, globalUiOptions } = registry;\n  const uiOptions = getUiOptions<T, S, F>(uiSchema, globalUiOptions);\n  const FieldTemplate = getTemplate<'FieldTemplate', T, S, F>('FieldTemplate', registry, uiOptions);\n  const DescriptionFieldTemplate = getTemplate<'DescriptionFieldTemplate', T, S, F>(\n    'DescriptionFieldTemplate',\n    registry,\n    uiOptions\n  );\n  const FieldHelpTemplate = getTemplate<'FieldHelpTemplate', T, S, F>('FieldHelpTemplate', registry, uiOptions);\n  const FieldErrorTemplate = getTemplate<'FieldErrorTemplate', T, S, F>('FieldErrorTemplate', registry, uiOptions);\n  const schema = schemaUtils.retrieveSchema(_schema, formData);\n  const fieldId = _idSchema[ID_KEY];\n  const idSchema = mergeObjects(\n    schemaUtils.toIdSchema(schema, fieldId, formData, idPrefix, idSeparator),\n    _idSchema\n  ) as IdSchema<T>;\n\n  /** Intermediary `onChange` handler for field components that will inject the `id` of the current field into the\n   * `onChange` chain if it is not already being provided from a deeper level in the hierarchy\n   */\n  const handleFieldComponentChange = useCallback(\n    (formData: T | undefined, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n      const theId = id || fieldId;\n      return onChange(formData, newErrorSchema, theId);\n    },\n    [fieldId, onChange]\n  );\n\n  const FieldComponent = getFieldComponent<T, S, F>(schema, uiOptions, idSchema, registry);\n  const disabled = Boolean(props.disabled || uiOptions.disabled);\n  const readonly = Boolean(props.readonly || uiOptions.readonly || props.schema.readOnly || schema.readOnly);\n  const uiSchemaHideError = uiOptions.hideError;\n  // Set hideError to the value provided in the uiSchema, otherwise stick with the prop to propagate to children\n  const hideError = uiSchemaHideError === undefined ? props.hideError : Boolean(uiSchemaHideError);\n  const autofocus = Boolean(props.autofocus || uiOptions.autofocus);\n  if (Object.keys(schema).length === 0) {\n    return null;\n  }\n\n  const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema, globalUiOptions);\n\n  const { __errors, ...fieldErrorSchema } = errorSchema || {};\n  // See #439: uiSchema: Don't pass consumed class names or style to child components\n  const fieldUiSchema = omit(uiSchema, ['ui:classNames', 'classNames', 'ui:style']);\n  if (UI_OPTIONS_KEY in fieldUiSchema) {\n    fieldUiSchema[UI_OPTIONS_KEY] = omit(fieldUiSchema[UI_OPTIONS_KEY], ['classNames', 'style']);\n  }\n\n  const field = (\n    <FieldComponent\n      {...props}\n      onChange={handleFieldComponentChange}\n      idSchema={idSchema}\n      schema={schema}\n      uiSchema={fieldUiSchema}\n      disabled={disabled}\n      readonly={readonly}\n      hideError={hideError}\n      autofocus={autofocus}\n      errorSchema={fieldErrorSchema}\n      formContext={formContext}\n      rawErrors={__errors}\n    />\n  );\n\n  const id = idSchema[ID_KEY];\n\n  // If this schema has a title defined, but the user has set a new key/label, retain their input.\n  let label;\n  if (wasPropertyKeyModified) {\n    label = name;\n  } else {\n    label = ADDITIONAL_PROPERTY_FLAG in schema ? name : uiOptions.title || props.schema.title || schema.title || name;\n  }\n\n  const description = uiOptions.description || props.schema.description || schema.description || '';\n  const help = uiOptions.help;\n  const hidden = uiOptions.widget === 'hidden';\n\n  const classNames = ['form-group', 'field', `field-${schema.type}`];\n  if (!hideError && __errors && __errors.length > 0) {\n    classNames.push('field-error has-error has-danger');\n  }\n  if (uiSchema?.classNames) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(\n        \"'uiSchema.classNames' is deprecated and may be removed in a major release; Use 'ui:classNames' instead.\"\n      );\n    }\n    classNames.push(uiSchema.classNames);\n  }\n  if (uiOptions.classNames) {\n    classNames.push(uiOptions.classNames);\n  }\n\n  const helpComponent = (\n    <FieldHelpTemplate\n      help={help}\n      idSchema={idSchema}\n      schema={schema}\n      uiSchema={uiSchema}\n      hasErrors={!hideError && __errors && __errors.length > 0}\n      registry={registry}\n    />\n  );\n  const errorsComponent = hideError ? undefined : (\n    <FieldErrorTemplate\n      errors={__errors}\n      errorSchema={errorSchema}\n      idSchema={idSchema}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    />\n  );\n  const fieldProps: Omit<FieldTemplateProps<T, S, F>, 'children'> = {\n    description: (\n      <DescriptionFieldTemplate\n        id={descriptionId<T>(id)}\n        description={description}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n    ),\n    rawDescription: description,\n    help: helpComponent,\n    rawHelp: typeof help === 'string' ? help : undefined,\n    errors: errorsComponent,\n    rawErrors: hideError ? undefined : __errors,\n    id,\n    label,\n    hidden,\n    onChange,\n    onKeyChange,\n    onDropPropertyClick,\n    required,\n    disabled,\n    readonly,\n    hideError,\n    displayLabel,\n    classNames: classNames.join(' ').trim(),\n    style: uiOptions.style,\n    formContext,\n    formData,\n    schema,\n    uiSchema,\n    registry,\n  };\n\n  const _AnyOfField = registry.fields.AnyOfField;\n  const _OneOfField = registry.fields.OneOfField;\n  const isReplacingAnyOrOneOf = uiSchema?.['ui:field'] && uiSchema?.['ui:fieldReplacesAnyOrOneOf'] === true;\n\n  return (\n    <FieldTemplate {...fieldProps}>\n      <>\n        {field}\n        {/*\n        If the schema `anyOf` or 'oneOf' can be rendered as a select control, don't\n        render the selection and let `StringField` component handle\n        rendering\n      */}\n        {schema.anyOf && !isReplacingAnyOrOneOf && !schemaUtils.isSelect(schema) && (\n          <_AnyOfField\n            name={name}\n            disabled={disabled}\n            readonly={readonly}\n            hideError={hideError}\n            errorSchema={errorSchema}\n            formData={formData}\n            formContext={formContext}\n            idPrefix={idPrefix}\n            idSchema={idSchema}\n            idSeparator={idSeparator}\n            onBlur={props.onBlur}\n            onChange={props.onChange}\n            onFocus={props.onFocus}\n            options={schema.anyOf.map((_schema) =>\n              schemaUtils.retrieveSchema(isObject(_schema) ? (_schema as S) : ({} as S), formData)\n            )}\n            baseType={schema.type}\n            registry={registry}\n            schema={schema}\n            uiSchema={uiSchema}\n          />\n        )}\n        {schema.oneOf && !isReplacingAnyOrOneOf && !schemaUtils.isSelect(schema) && (\n          <_OneOfField\n            name={name}\n            disabled={disabled}\n            readonly={readonly}\n            hideError={hideError}\n            errorSchema={errorSchema}\n            formData={formData}\n            formContext={formContext}\n            idPrefix={idPrefix}\n            idSchema={idSchema}\n            idSeparator={idSeparator}\n            onBlur={props.onBlur}\n            onChange={props.onChange}\n            onFocus={props.onFocus}\n            options={schema.oneOf.map((_schema) =>\n              schemaUtils.retrieveSchema(isObject(_schema) ? (_schema as S) : ({} as S), formData)\n            )}\n            baseType={schema.type}\n            registry={registry}\n            schema={schema}\n            uiSchema={uiSchema}\n          />\n        )}\n      </>\n    </FieldTemplate>\n  );\n}\n\n/** The `SchemaField` component determines whether it is necessary to rerender the component based on any props changes\n * and if so, calls the `SchemaFieldRender` component with the props.\n */\nclass SchemaField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> extends Component<\n  FieldProps<T, S, F>\n> {\n  shouldComponentUpdate(nextProps: Readonly<FieldProps<T, S, F>>) {\n    return !deepEquals(this.props, nextProps);\n  }\n\n  render() {\n    return <SchemaFieldRender<T, S, F> {...this.props} />;\n  }\n}\n\nexport default SchemaField;\n","import {\n  getWidget,\n  getUiOptions,\n  optionsList,\n  hasWidget,\n  FieldProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `StringField` component is used to render a schema field that represents a string type\n *\n * @param props - The `FieldProps` for this template\n */\nfunction StringField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    required,\n    disabled = false,\n    readonly = false,\n    autofocus = false,\n    onChange,\n    onBlur,\n    onFocus,\n    registry,\n    rawErrors,\n  } = props;\n  const { title, format } = schema;\n  const { widgets, formContext, schemaUtils, globalUiOptions } = registry;\n  const enumOptions = schemaUtils.isSelect(schema) ? optionsList(schema) : undefined;\n  let defaultWidget = enumOptions ? 'select' : 'text';\n  if (format && hasWidget<T, S, F>(schema, format, widgets)) {\n    defaultWidget = format;\n  }\n  const { widget = defaultWidget, placeholder = '', title: uiTitle, ...options } = getUiOptions<T, S, F>(uiSchema);\n  const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema, globalUiOptions);\n  const label = uiTitle ?? title ?? name;\n  const Widget = getWidget<T, S, F>(schema, widget, widgets);\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      uiSchema={uiSchema}\n      id={idSchema.$id}\n      name={name}\n      label={label}\n      hideLabel={!displayLabel}\n      value={formData}\n      onChange={onChange}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      formContext={formContext}\n      autofocus={autofocus}\n      registry={registry}\n      placeholder={placeholder}\n      rawErrors={rawErrors}\n    />\n  );\n}\n\nexport default StringField;\n","import { useEffect } from 'react';\nimport { FieldProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The `NullField` component is used to render a field in the schema is null. It also ensures that the `formData` is\n * also set to null if it has no value.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction NullField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const { formData, onChange } = props;\n  useEffect(() => {\n    if (formData === undefined) {\n      onChange(null as unknown as T);\n    }\n  }, [formData, onChange]);\n\n  return null;\n}\n\nexport default NullField;\n","import { Field, FormContextType, RegistryFieldsType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\nimport ArrayField from './ArrayField';\nimport BooleanField from './BooleanField';\nimport MultiSchemaField from './MultiSchemaField';\nimport NumberField from './NumberField';\nimport ObjectField from './ObjectField';\nimport SchemaField from './SchemaField';\nimport StringField from './StringField';\nimport NullField from './NullField';\n\nfunction fields<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): RegistryFieldsType<T, S, F> {\n  return {\n    AnyOfField: MultiSchemaField,\n    ArrayField: ArrayField as unknown as Field<T, S, F>,\n    // ArrayField falls back to SchemaField if ArraySchemaField is not defined, which it isn't by default\n    BooleanField,\n    NumberField,\n    ObjectField,\n    OneOfField: MultiSchemaField,\n    SchemaField,\n    StringField,\n    NullField,\n  };\n}\n\nexport default fields;\n","import {\n  descriptionId,\n  getTemplate,\n  getUiOptions,\n  ArrayFieldDescriptionProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `ArrayFieldDescriptionTemplate` component renders a `DescriptionFieldTemplate` with an `id` derived from\n * the `idSchema`.\n *\n * @param props - The `ArrayFieldDescriptionProps` for the component\n */\nexport default function ArrayFieldDescriptionTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldDescriptionProps<T, S, F>) {\n  const { idSchema, description, registry, schema, uiSchema } = props;\n  const options = getUiOptions<T, S, F>(uiSchema, registry.globalUiOptions);\n  const { label: displayLabel = true } = options;\n  if (!description || !displayLabel) {\n    return null;\n  }\n  const DescriptionFieldTemplate = getTemplate<'DescriptionFieldTemplate', T, S, F>(\n    'DescriptionFieldTemplate',\n    registry,\n    options\n  );\n  return (\n    <DescriptionFieldTemplate\n      id={descriptionId<T>(idSchema)}\n      description={description}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    />\n  );\n}\n","import { CSSProperties } from 'react';\nimport { ArrayFieldTemplateItemType, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The `ArrayFieldItemTemplate` component is the template used to render an items of an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldItemTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTemplateItemType<T, S, F>) {\n  const {\n    children,\n    className,\n    disabled,\n    hasToolbar,\n    hasMoveDown,\n    hasMoveUp,\n    hasRemove,\n    hasCopy,\n    index,\n    onCopyIndexClick,\n    onDropIndexClick,\n    onReorderClick,\n    readonly,\n    registry,\n    uiSchema,\n  } = props;\n  const { CopyButton, MoveDownButton, MoveUpButton, RemoveButton } = registry.templates.ButtonTemplates;\n  const btnStyle: CSSProperties = {\n    flex: 1,\n    paddingLeft: 6,\n    paddingRight: 6,\n    fontWeight: 'bold',\n  };\n  return (\n    <div className={className}>\n      <div className={hasToolbar ? 'col-xs-9' : 'col-xs-12'}>{children}</div>\n      {hasToolbar && (\n        <div className='col-xs-3 array-item-toolbox'>\n          <div\n            className='btn-group'\n            style={{\n              display: 'flex',\n              justifyContent: 'space-around',\n            }}\n          >\n            {(hasMoveUp || hasMoveDown) && (\n              <MoveUpButton\n                style={btnStyle}\n                disabled={disabled || readonly || !hasMoveUp}\n                onClick={onReorderClick(index, index - 1)}\n                uiSchema={uiSchema}\n                registry={registry}\n              />\n            )}\n            {(hasMoveUp || hasMoveDown) && (\n              <MoveDownButton\n                style={btnStyle}\n                disabled={disabled || readonly || !hasMoveDown}\n                onClick={onReorderClick(index, index + 1)}\n                uiSchema={uiSchema}\n                registry={registry}\n              />\n            )}\n            {hasCopy && (\n              <CopyButton\n                style={btnStyle}\n                disabled={disabled || readonly}\n                onClick={onCopyIndexClick(index)}\n                uiSchema={uiSchema}\n                registry={registry}\n              />\n            )}\n            {hasRemove && (\n              <RemoveButton\n                style={btnStyle}\n                disabled={disabled || readonly}\n                onClick={onDropIndexClick(index)}\n                uiSchema={uiSchema}\n                registry={registry}\n              />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import {\n  getTemplate,\n  getUiOptions,\n  ArrayFieldTemplateProps,\n  ArrayFieldTemplateItemType,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `ArrayFieldTemplate` component is the template used to render all items in an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTemplateProps<T, S, F>) {\n  const {\n    canAdd,\n    className,\n    disabled,\n    idSchema,\n    uiSchema,\n    items,\n    onAddClick,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n  } = props;\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  const ArrayFieldDescriptionTemplate = getTemplate<'ArrayFieldDescriptionTemplate', T, S, F>(\n    'ArrayFieldDescriptionTemplate',\n    registry,\n    uiOptions\n  );\n  const ArrayFieldItemTemplate = getTemplate<'ArrayFieldItemTemplate', T, S, F>(\n    'ArrayFieldItemTemplate',\n    registry,\n    uiOptions\n  );\n  const ArrayFieldTitleTemplate = getTemplate<'ArrayFieldTitleTemplate', T, S, F>(\n    'ArrayFieldTitleTemplate',\n    registry,\n    uiOptions\n  );\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <fieldset className={className} id={idSchema.$id}>\n      <ArrayFieldTitleTemplate\n        idSchema={idSchema}\n        title={uiOptions.title || title}\n        required={required}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n      <ArrayFieldDescriptionTemplate\n        idSchema={idSchema}\n        description={uiOptions.description || schema.description}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n      <div className='row array-item-list'>\n        {items &&\n          items.map(({ key, ...itemProps }: ArrayFieldTemplateItemType<T, S, F>) => (\n            <ArrayFieldItemTemplate key={key} {...itemProps} />\n          ))}\n      </div>\n      {canAdd && (\n        <AddButton\n          className='array-item-add'\n          onClick={onAddClick}\n          disabled={disabled || readonly}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n    </fieldset>\n  );\n}\n","import {\n  getTemplate,\n  getUiOptions,\n  titleId,\n  ArrayFieldTitleProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TemplatesType,\n} from '@rjsf/utils';\n\n/** The `ArrayFieldTitleTemplate` component renders a `TitleFieldTemplate` with an `id` derived from\n * the `idSchema`.\n *\n * @param props - The `ArrayFieldTitleProps` for the component\n */\nexport default function ArrayFieldTitleTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTitleProps<T, S, F>) {\n  const { idSchema, title, schema, uiSchema, required, registry } = props;\n  const options = getUiOptions<T, S, F>(uiSchema, registry.globalUiOptions);\n  const { label: displayLabel = true } = options;\n  if (!title || !displayLabel) {\n    return null;\n  }\n  const TitleFieldTemplate: TemplatesType<T, S, F>['TitleFieldTemplate'] = getTemplate<'TitleFieldTemplate', T, S, F>(\n    'TitleFieldTemplate',\n    registry,\n    options\n  );\n  return (\n    <TitleFieldTemplate\n      id={titleId<T>(idSchema)}\n      title={title}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    />\n  );\n}\n","import { ChangeEvent, FocusEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  BaseInputTemplateProps,\n  examplesId,\n  getInputProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `BaseInputTemplate` is the template to use to render the basic `<input>` component for the `core` theme.\n * It is used as the template for rendering many of the <input> based widgets that differ by `type` and callbacks only.\n * It can be customized/overridden for other themes or individual implementations as needed.\n *\n * @param props - The `WidgetProps` for this template\n */\nexport default function BaseInputTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: BaseInputTemplateProps<T, S, F>) {\n  const {\n    id,\n    name, // remove this from ...rest\n    value,\n    readonly,\n    disabled,\n    autofocus,\n    onBlur,\n    onFocus,\n    onChange,\n    onChangeOverride,\n    options,\n    schema,\n    uiSchema,\n    formContext,\n    registry,\n    rawErrors,\n    type,\n    ...rest\n  } = props;\n\n  // Note: since React 15.2.0 we can't forward unknown element attributes, so we\n  // exclude the \"options\" and \"schema\" ones here.\n  if (!id) {\n    console.log('No id for', props);\n    throw new Error(`no id for props ${JSON.stringify(props)}`);\n  }\n  const inputProps = {\n    ...rest,\n    ...getInputProps<T, S, F>(schema, type, options),\n  };\n\n  let inputValue;\n  if (inputProps.type === 'number' || inputProps.type === 'integer') {\n    inputValue = value || value === 0 ? value : '';\n  } else {\n    inputValue = value == null ? '' : value;\n  }\n\n  const _onChange = useCallback(\n    ({ target: { value } }: ChangeEvent<HTMLInputElement>) => onChange(value === '' ? options.emptyValue : value),\n    [onChange, options]\n  );\n  const _onBlur = useCallback(({ target: { value } }: FocusEvent<HTMLInputElement>) => onBlur(id, value), [onBlur, id]);\n  const _onFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) => onFocus(id, value),\n    [onFocus, id]\n  );\n\n  return (\n    <>\n      <input\n        id={id}\n        name={id}\n        className='form-control'\n        readOnly={readonly}\n        disabled={disabled}\n        autoFocus={autofocus}\n        value={inputValue}\n        {...inputProps}\n        list={schema.examples ? examplesId<T>(id) : undefined}\n        onChange={onChangeOverride || _onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        aria-describedby={ariaDescribedByIds<T>(id, !!schema.examples)}\n      />\n      {Array.isArray(schema.examples) && (\n        <datalist key={`datalist_${id}`} id={examplesId<T>(id)}>\n          {(schema.examples as string[])\n            .concat(schema.default && !schema.examples.includes(schema.default) ? ([schema.default] as string[]) : [])\n            .map((example: any) => {\n              return <option key={example} value={example} />;\n            })}\n        </datalist>\n      )}\n    </>\n  );\n}\n","import { getSubmitButtonOptions, FormContextType, RJSFSchema, StrictRJSFSchema, SubmitButtonProps } from '@rjsf/utils';\n\n/** The `SubmitButton` renders a button that represent the `Submit` action on a form\n */\nexport default function SubmitButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ uiSchema }: SubmitButtonProps<T, S, F>) {\n  const { submitText, norender, props: submitButtonProps = {} } = getSubmitButtonOptions<T, S, F>(uiSchema);\n  if (norender) {\n    return null;\n  }\n  return (\n    <div>\n      <button type='submit' {...submitButtonProps} className={`btn btn-info ${submitButtonProps.className}`}>\n        {submitText}\n      </button>\n    </div>\n  );\n}\n","import { FormContextType, IconButtonProps, RJSFSchema, StrictRJSFSchema, TranslatableString } from '@rjsf/utils';\n\nexport default function IconButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: IconButtonProps<T, S, F>\n) {\n  const { iconType = 'default', icon, className, uiSchema, registry, ...otherProps } = props;\n  return (\n    <button type='button' className={`btn btn-${iconType} ${className}`} {...otherProps}>\n      <i className={`glyphicon glyphicon-${icon}`} />\n    </button>\n  );\n}\n\nexport function CopyButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: IconButtonProps<T, S, F>\n) {\n  const {\n    registry: { translateString },\n  } = props;\n  return (\n    <IconButton\n      title={translateString(TranslatableString.CopyButton)}\n      className='array-item-copy'\n      {...props}\n      icon='copy'\n    />\n  );\n}\n\nexport function MoveDownButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: IconButtonProps<T, S, F>\n) {\n  const {\n    registry: { translateString },\n  } = props;\n  return (\n    <IconButton\n      title={translateString(TranslatableString.MoveDownButton)}\n      className='array-item-move-down'\n      {...props}\n      icon='arrow-down'\n    />\n  );\n}\n\nexport function MoveUpButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: IconButtonProps<T, S, F>\n) {\n  const {\n    registry: { translateString },\n  } = props;\n  return (\n    <IconButton\n      title={translateString(TranslatableString.MoveUpButton)}\n      className='array-item-move-up'\n      {...props}\n      icon='arrow-up'\n    />\n  );\n}\n\nexport function RemoveButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: IconButtonProps<T, S, F>\n) {\n  const {\n    registry: { translateString },\n  } = props;\n  return (\n    <IconButton\n      title={translateString(TranslatableString.RemoveButton)}\n      className='array-item-remove'\n      {...props}\n      iconType='danger'\n      icon='remove'\n    />\n  );\n}\n","import { FormContextType, IconButtonProps, RJSFSchema, StrictRJSFSchema, TranslatableString } from '@rjsf/utils';\n\nimport IconButton from './IconButton';\n\n/** The `AddButton` renders a button that represent the `Add` action on a form\n */\nexport default function AddButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  className,\n  onClick,\n  disabled,\n  registry,\n}: IconButtonProps<T, S, F>) {\n  const { translateString } = registry;\n  return (\n    <div className='row'>\n      <p className={`col-xs-3 col-xs-offset-9 text-right ${className}`}>\n        <IconButton\n          iconType='info'\n          icon='plus'\n          className='btn-add col-xs-12'\n          title={translateString(TranslatableString.AddButton)}\n          onClick={onClick}\n          disabled={disabled}\n          registry={registry}\n        />\n      </p>\n    </div>\n  );\n}\n","import { FormContextType, RJSFSchema, StrictRJSFSchema, TemplatesType } from '@rjsf/utils';\n\nimport SubmitButton from './SubmitButton';\nimport AddButton from './AddButton';\nimport { CopyButton, MoveDownButton, MoveUpButton, RemoveButton } from './IconButton';\n\nfunction buttonTemplates<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): TemplatesType<T, S, F>['ButtonTemplates'] {\n  return {\n    SubmitButton,\n    AddButton,\n    CopyButton,\n    MoveDownButton,\n    MoveUpButton,\n    RemoveButton,\n  };\n}\n\nexport default buttonTemplates;\n","import { DescriptionFieldProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The `DescriptionField` is the template to use to render the description of a field\n *\n * @param props - The `DescriptionFieldProps` for this component\n */\nexport default function DescriptionField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: DescriptionFieldProps<T, S, F>) {\n  const { id, description } = props;\n  if (!description) {\n    return null;\n  }\n  if (typeof description === 'string') {\n    return (\n      <p id={id} className='field-description'>\n        {description}\n      </p>\n    );\n  } else {\n    return (\n      <div id={id} className='field-description'>\n        {description}\n      </div>\n    );\n  }\n}\n","import {\n  ErrorListProps,\n  FormContextType,\n  RJSFValidationError,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n} from '@rjsf/utils';\n\n/** The `ErrorList` component is the template that renders the all the errors associated with the fields in the `Form`\n *\n * @param props - The `ErrorListProps` for this component\n */\nexport default function ErrorList<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  errors,\n  registry,\n}: ErrorListProps<T, S, F>) {\n  const { translateString } = registry;\n  return (\n    <div className='panel panel-danger errors'>\n      <div className='panel-heading'>\n        <h3 className='panel-title'>{translateString(TranslatableString.ErrorsLabel)}</h3>\n      </div>\n      <ul className='list-group'>\n        {errors.map((error: RJSFValidationError, i: number) => {\n          return (\n            <li key={i} className='list-group-item text-danger'>\n              {error.stack}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","const REQUIRED_FIELD_SYMBOL = '*';\n\nexport type LabelProps = {\n  /** The label for the field */\n  label?: string;\n  /** A boolean value stating if the field is required */\n  required?: boolean;\n  /** The id of the input field being labeled */\n  id?: string;\n};\n\n/** Renders a label for a field\n *\n * @param props - The `LabelProps` for this component\n */\nexport default function Label(props: LabelProps) {\n  const { label, required, id } = props;\n  if (!label) {\n    return null;\n  }\n  return (\n    <label className='control-label' htmlFor={id}>\n      {label}\n      {required && <span className='required'>{REQUIRED_FIELD_SYMBOL}</span>}\n    </label>\n  );\n}\n","import {\n  FieldTemplateProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  getTemplate,\n  getUiOptions,\n} from '@rjsf/utils';\n\nimport Label from './Label';\n\n/** The `FieldTemplate` component is the template used by `SchemaField` to render any field. It renders the field\n * content, (label, description, children, errors and help) inside of a `WrapIfAdditional` component.\n *\n * @param props - The `FieldTemplateProps` for this component\n */\nexport default function FieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldTemplateProps<T, S, F>) {\n  const { id, label, children, errors, help, description, hidden, required, displayLabel, registry, uiSchema } = props;\n  const uiOptions = getUiOptions(uiSchema);\n  const WrapIfAdditionalTemplate = getTemplate<'WrapIfAdditionalTemplate', T, S, F>(\n    'WrapIfAdditionalTemplate',\n    registry,\n    uiOptions\n  );\n  if (hidden) {\n    return <div className='hidden'>{children}</div>;\n  }\n  return (\n    <WrapIfAdditionalTemplate {...props}>\n      {displayLabel && <Label label={label} required={required} id={id} />}\n      {displayLabel && description ? description : null}\n      {children}\n      {errors}\n      {help}\n    </WrapIfAdditionalTemplate>\n  );\n}\n","import { errorId, FieldErrorProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The `FieldErrorTemplate` component renders the errors local to the particular field\n *\n * @param props - The `FieldErrorProps` for the errors being rendered\n */\nexport default function FieldErrorTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldErrorProps<T, S, F>) {\n  const { errors = [], idSchema } = props;\n  if (errors.length === 0) {\n    return null;\n  }\n  const id = errorId<T>(idSchema);\n\n  return (\n    <div>\n      <ul id={id} className='error-detail bs-callout bs-callout-info'>\n        {errors\n          .filter((elem) => !!elem)\n          .map((error, index: number) => {\n            return (\n              <li className='text-danger' key={index}>\n                {error}\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n","import { helpId, FieldHelpProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The `FieldHelpTemplate` component renders any help desired for a field\n *\n * @param props - The `FieldHelpProps` to be rendered\n */\nexport default function FieldHelpTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldHelpProps<T, S, F>) {\n  const { idSchema, help } = props;\n  if (!help) {\n    return null;\n  }\n  const id = helpId<T>(idSchema);\n  if (typeof help === 'string') {\n    return (\n      <p id={id} className='help-block'>\n        {help}\n      </p>\n    );\n  }\n  return (\n    <div id={id} className='help-block'>\n      {help}\n    </div>\n  );\n}\n","import {\n  FormContextType,\n  ObjectFieldTemplatePropertyType,\n  ObjectFieldTemplateProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n  canExpand,\n  descriptionId,\n  getTemplate,\n  getUiOptions,\n  titleId,\n} from '@rjsf/utils';\n\n/** The `ObjectFieldTemplate` is the template to use to render all the inner properties of an object along with the\n * title and description if available. If the object is expandable, then an `AddButton` is also rendered after all\n * the properties.\n *\n * @param props - The `ObjectFieldTemplateProps` for this component\n */\nexport default function ObjectFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ObjectFieldTemplateProps<T, S, F>) {\n  const {\n    description,\n    disabled,\n    formData,\n    idSchema,\n    onAddClick,\n    properties,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n    uiSchema,\n  } = props;\n  const options = getUiOptions<T, S, F>(uiSchema);\n  const TitleFieldTemplate = getTemplate<'TitleFieldTemplate', T, S, F>('TitleFieldTemplate', registry, options);\n  const DescriptionFieldTemplate = getTemplate<'DescriptionFieldTemplate', T, S, F>(\n    'DescriptionFieldTemplate',\n    registry,\n    options\n  );\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <fieldset id={idSchema.$id}>\n      {title && (\n        <TitleFieldTemplate\n          id={titleId<T>(idSchema)}\n          title={title}\n          required={required}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {description && (\n        <DescriptionFieldTemplate\n          id={descriptionId<T>(idSchema)}\n          description={description}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {properties.map((prop: ObjectFieldTemplatePropertyType) => prop.content)}\n      {canExpand<T, S, F>(schema, uiSchema, formData) && (\n        <AddButton\n          className='object-property-expand'\n          onClick={onAddClick(schema)}\n          disabled={disabled || readonly}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n    </fieldset>\n  );\n}\n","import { FormContextType, TitleFieldProps, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\nconst REQUIRED_FIELD_SYMBOL = '*';\n\n/** The `TitleField` is the template to use to render the title of a field\n *\n * @param props - The `TitleFieldProps` for this component\n */\nexport default function TitleField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: TitleFieldProps<T, S, F>\n) {\n  const { id, title, required } = props;\n  return (\n    <legend id={id}>\n      {title}\n      {required && <span className='required'>{REQUIRED_FIELD_SYMBOL}</span>}\n    </legend>\n  );\n}\n","import { FormContextType, RJSFSchema, StrictRJSFSchema, TranslatableString, UnsupportedFieldProps } from '@rjsf/utils';\nimport Markdown from 'markdown-to-jsx';\n\n/** The `UnsupportedField` component is used to render a field in the schema is one that is not supported by\n * react-jsonschema-form.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction UnsupportedField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: UnsupportedFieldProps<T, S, F>\n) {\n  const { schema, idSchema, reason, registry } = props;\n  const { translateString } = registry;\n  let translateEnum: TranslatableString = TranslatableString.UnsupportedField;\n  const translateParams: string[] = [];\n  if (idSchema && idSchema.$id) {\n    translateEnum = TranslatableString.UnsupportedFieldWithId;\n    translateParams.push(idSchema.$id);\n  }\n  if (reason) {\n    translateEnum =\n      translateEnum === TranslatableString.UnsupportedField\n        ? TranslatableString.UnsupportedFieldWithReason\n        : TranslatableString.UnsupportedFieldWithIdAndReason;\n    translateParams.push(reason);\n  }\n  return (\n    <div className='unsupported-field'>\n      <p>\n        <Markdown>{translateString(translateEnum, translateParams)}</Markdown>\n      </p>\n      {schema && <pre>{JSON.stringify(schema, null, 2)}</pre>}\n    </div>\n  );\n}\n\nexport default UnsupportedField;\n","import {\n  ADDITIONAL_PROPERTY_FLAG,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  WrapIfAdditionalTemplateProps,\n} from '@rjsf/utils';\n\nimport Label from './FieldTemplate/Label';\n\n/** The `WrapIfAdditional` component is used by the `FieldTemplate` to rename, or remove properties that are\n * part of an `additionalProperties` part of a schema.\n *\n * @param props - The `WrapIfAdditionalProps` for this component\n */\nexport default function WrapIfAdditionalTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WrapIfAdditionalTemplateProps<T, S, F>) {\n  const {\n    id,\n    classNames,\n    style,\n    disabled,\n    label,\n    onKeyChange,\n    onDropPropertyClick,\n    readonly,\n    required,\n    schema,\n    children,\n    uiSchema,\n    registry,\n  } = props;\n  const { templates, translateString } = registry;\n  // Button templates are not overridden in the uiSchema\n  const { RemoveButton } = templates.ButtonTemplates;\n  const keyLabel = translateString(TranslatableString.KeyLabel, [label]);\n  const additional = ADDITIONAL_PROPERTY_FLAG in schema;\n\n  if (!additional) {\n    return (\n      <div className={classNames} style={style}>\n        {children}\n      </div>\n    );\n  }\n\n  return (\n    <div className={classNames} style={style}>\n      <div className='row'>\n        <div className='col-xs-5 form-additional'>\n          <div className='form-group'>\n            <Label label={keyLabel} required={required} id={`${id}-key`} />\n            <input\n              className='form-control'\n              type='text'\n              id={`${id}-key`}\n              onBlur={(event) => onKeyChange(event.target.value)}\n              defaultValue={label}\n            />\n          </div>\n        </div>\n        <div className='form-additional form-group col-xs-5'>{children}</div>\n        <div className='col-xs-2'>\n          <RemoveButton\n            className='array-item-remove btn-block'\n            style={{ border: '0' }}\n            disabled={disabled || readonly}\n            onClick={onDropPropertyClick(label)}\n            uiSchema={uiSchema}\n            registry={registry}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { FormContextType, RJSFSchema, StrictRJSFSchema, TemplatesType } from '@rjsf/utils';\n\nimport ArrayFieldDescriptionTemplate from './ArrayFieldDescriptionTemplate';\nimport ArrayFieldItemTemplate from './ArrayFieldItemTemplate';\nimport ArrayFieldTemplate from './ArrayFieldTemplate';\nimport ArrayFieldTitleTemplate from './ArrayFieldTitleTemplate';\nimport BaseInputTemplate from './BaseInputTemplate';\nimport ButtonTemplates from './ButtonTemplates';\nimport DescriptionField from './DescriptionField';\nimport ErrorList from './ErrorList';\nimport FieldTemplate from './FieldTemplate';\nimport FieldErrorTemplate from './FieldErrorTemplate';\nimport FieldHelpTemplate from './FieldHelpTemplate';\nimport ObjectFieldTemplate from './ObjectFieldTemplate';\nimport TitleField from './TitleField';\nimport UnsupportedField from './UnsupportedField';\nimport WrapIfAdditionalTemplate from './WrapIfAdditionalTemplate';\n\nfunction templates<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(): TemplatesType<\n  T,\n  S,\n  F\n> {\n  return {\n    ArrayFieldDescriptionTemplate,\n    ArrayFieldItemTemplate,\n    ArrayFieldTemplate,\n    ArrayFieldTitleTemplate,\n    ButtonTemplates: ButtonTemplates<T, S, F>(),\n    BaseInputTemplate,\n    DescriptionFieldTemplate: DescriptionField,\n    ErrorListTemplate: ErrorList,\n    FieldTemplate,\n    FieldErrorTemplate,\n    FieldHelpTemplate,\n    ObjectFieldTemplate,\n    TitleFieldTemplate: TitleField,\n    UnsupportedFieldTemplate: UnsupportedField,\n    WrapIfAdditionalTemplate,\n  };\n}\n\nexport default templates;\n","import { MouseEvent, useCallback, useEffect, useReducer, useState } from 'react';\nimport {\n  ariaDescribedByIds,\n  parseDateString,\n  toDateString,\n  pad,\n  DateObject,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  WidgetProps,\n} from '@rjsf/utils';\n\nfunction rangeOptions(start: number, stop: number) {\n  const options = [];\n  for (let i = start; i <= stop; i++) {\n    options.push({ value: i, label: pad(i, 2) });\n  }\n  return options;\n}\n\nfunction readyForChange(state: DateObject) {\n  return Object.values(state).every((value) => value !== -1);\n}\n\nfunction dateElementProps(\n  state: DateObject,\n  time: boolean,\n  yearsRange: [number, number] = [1900, new Date().getFullYear() + 2]\n) {\n  const { year, month, day, hour, minute, second } = state;\n  const data = [\n    {\n      type: 'year',\n      range: yearsRange,\n      value: year,\n    },\n    { type: 'month', range: [1, 12], value: month },\n    { type: 'day', range: [1, 31], value: day },\n  ] as { type: string; range: [number, number]; value: number | undefined }[];\n  if (time) {\n    data.push(\n      { type: 'hour', range: [0, 23], value: hour },\n      { type: 'minute', range: [0, 59], value: minute },\n      { type: 'second', range: [0, 59], value: second }\n    );\n  }\n  return data;\n}\n\ntype DateElementProps<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> = Pick<\n  WidgetProps<T, S, F>,\n  'value' | 'name' | 'disabled' | 'readonly' | 'autofocus' | 'registry' | 'onBlur' | 'onFocus'\n> & {\n  rootId: string;\n  select: (property: keyof DateObject, value: any) => void;\n  type: string;\n  range: [number, number];\n};\n\nfunction DateElement<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  type,\n  range,\n  value,\n  select,\n  rootId,\n  name,\n  disabled,\n  readonly,\n  autofocus,\n  registry,\n  onBlur,\n  onFocus,\n}: DateElementProps<T, S, F>) {\n  const id = rootId + '_' + type;\n  const { SelectWidget } = registry.widgets;\n  return (\n    <SelectWidget\n      schema={{ type: 'integer' } as S}\n      id={id}\n      name={name}\n      className='form-control'\n      options={{ enumOptions: rangeOptions(range[0], range[1]) }}\n      placeholder={type}\n      value={value}\n      disabled={disabled}\n      readonly={readonly}\n      autofocus={autofocus}\n      onChange={(value: any) => select(type as keyof DateObject, value)}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      registry={registry}\n      label=''\n      aria-describedby={ariaDescribedByIds<T>(rootId)}\n    />\n  );\n}\n\n/** The `AltDateWidget` is an alternative widget for rendering date properties.\n * @param props - The `WidgetProps` for this component\n */\nfunction AltDateWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  time = false,\n  disabled = false,\n  readonly = false,\n  autofocus = false,\n  options,\n  id,\n  name,\n  registry,\n  onBlur,\n  onFocus,\n  onChange,\n  value,\n}: WidgetProps<T, S, F>) {\n  const { translateString } = registry;\n  const [lastValue, setLastValue] = useState(value);\n  const [state, setState] = useReducer((state: DateObject, action: Partial<DateObject>) => {\n    return { ...state, ...action };\n  }, parseDateString(value, time));\n\n  useEffect(() => {\n    const stateValue = toDateString(state, time);\n    if (readyForChange(state) && stateValue !== value) {\n      // The user changed the date to a new valid data via the comboboxes, so call onChange\n      onChange(stateValue);\n    } else if (lastValue !== value) {\n      // We got a new value in the props\n      setLastValue(value);\n      setState(parseDateString(value, time));\n    }\n  }, [time, value, onChange, state, lastValue]);\n\n  const handleChange = useCallback((property: keyof DateObject, value: string) => {\n    setState({ [property]: value });\n  }, []);\n\n  const handleSetNow = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      if (disabled || readonly) {\n        return;\n      }\n      const nextState = parseDateString(new Date().toJSON(), time);\n      onChange(toDateString(nextState, time));\n    },\n    [disabled, readonly, time]\n  );\n\n  const handleClear = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      if (disabled || readonly) {\n        return;\n      }\n      onChange(undefined);\n    },\n    [disabled, readonly, onChange]\n  );\n\n  return (\n    <ul className='list-inline'>\n      {dateElementProps(state, time, options.yearsRange as [number, number] | undefined).map((elemProps, i) => (\n        <li className='list-inline-item' key={i}>\n          <DateElement\n            rootId={id}\n            name={name}\n            select={handleChange}\n            {...elemProps}\n            disabled={disabled}\n            readonly={readonly}\n            registry={registry}\n            onBlur={onBlur}\n            onFocus={onFocus}\n            autofocus={autofocus && i === 0}\n          />\n        </li>\n      ))}\n      {(options.hideNowButton !== 'undefined' ? !options.hideNowButton : true) && (\n        <li className='list-inline-item'>\n          <a href='#' className='btn btn-info btn-now' onClick={handleSetNow}>\n            {translateString(TranslatableString.NowLabel)}\n          </a>\n        </li>\n      )}\n      {(options.hideClearButton !== 'undefined' ? !options.hideClearButton : true) && (\n        <li className='list-inline-item'>\n          <a href='#' className='btn btn-warning btn-clear' onClick={handleClear}>\n            {translateString(TranslatableString.ClearLabel)}\n          </a>\n        </li>\n      )}\n    </ul>\n  );\n}\n\nexport default AltDateWidget;\n","import { FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `AltDateTimeWidget` is an alternative widget for rendering datetime properties.\n *  It uses the AltDateWidget for rendering, with the `time` prop set to true by default.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction AltDateTimeWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  time = true,\n  ...props\n}: WidgetProps<T, S, F>) {\n  const { AltDateWidget } = props.registry.widgets;\n  return <AltDateWidget time={time} {...props} />;\n}\n\nexport default AltDateTimeWidget;\n","import { ChangeEvent, FocusEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  descriptionId,\n  getTemplate,\n  labelValue,\n  schemaRequiresTrueValue,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from '@rjsf/utils';\n\n/** The `CheckBoxWidget` is a widget for rendering boolean properties.\n *  It is typically used to represent a boolean.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction CheckboxWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  schema,\n  uiSchema,\n  options,\n  id,\n  value,\n  disabled,\n  readonly,\n  label,\n  hideLabel,\n  autofocus = false,\n  onBlur,\n  onFocus,\n  onChange,\n  registry,\n}: WidgetProps<T, S, F>) {\n  const DescriptionFieldTemplate = getTemplate<'DescriptionFieldTemplate', T, S, F>(\n    'DescriptionFieldTemplate',\n    registry,\n    options\n  );\n  // Because an unchecked checkbox will cause html5 validation to fail, only add\n  // the \"required\" attribute if the field value must be \"true\", due to the\n  // \"const\" or \"enum\" keywords\n  const required = schemaRequiresTrueValue<S>(schema);\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => onChange(event.target.checked),\n    [onChange]\n  );\n\n  const handleBlur = useCallback(\n    (event: FocusEvent<HTMLInputElement>) => onBlur(id, event.target.checked),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    (event: FocusEvent<HTMLInputElement>) => onFocus(id, event.target.checked),\n    [onFocus, id]\n  );\n  const description = options.description ?? schema.description;\n\n  return (\n    <div className={`checkbox ${disabled || readonly ? 'disabled' : ''}`}>\n      {!hideLabel && !!description && (\n        <DescriptionFieldTemplate\n          id={descriptionId<T>(id)}\n          description={description}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      <label>\n        <input\n          type='checkbox'\n          id={id}\n          name={id}\n          checked={typeof value === 'undefined' ? false : value}\n          required={required}\n          disabled={disabled || readonly}\n          autoFocus={autofocus}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          onFocus={handleFocus}\n          aria-describedby={ariaDescribedByIds<T>(id)}\n        />\n        {labelValue(<span>{label}</span>, hideLabel)}\n      </label>\n    </div>\n  );\n}\n\nexport default CheckboxWidget;\n","import { ChangeEvent, FocusEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  enumOptionsDeselectValue,\n  enumOptionsIsSelected,\n  enumOptionsSelectValue,\n  enumOptionsValueForIndex,\n  optionId,\n  FormContextType,\n  WidgetProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `CheckboxesWidget` is a widget for rendering checkbox groups.\n *  It is typically used to represent an array of enums.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction CheckboxesWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  id,\n  disabled,\n  options: { inline = false, enumOptions, enumDisabled, emptyValue },\n  value,\n  autofocus = false,\n  readonly,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps<T, S, F>) {\n  const checkboxesValues = Array.isArray(value) ? value : [value];\n\n  const handleBlur = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onBlur(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onFocus(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onFocus, id]\n  );\n  return (\n    <div className='checkboxes' id={id}>\n      {Array.isArray(enumOptions) &&\n        enumOptions.map((option, index) => {\n          const checked = enumOptionsIsSelected<S>(option.value, checkboxesValues);\n          const itemDisabled = Array.isArray(enumDisabled) && enumDisabled.indexOf(option.value) !== -1;\n          const disabledCls = disabled || itemDisabled || readonly ? 'disabled' : '';\n\n          const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n            if (event.target.checked) {\n              onChange(enumOptionsSelectValue<S>(index, checkboxesValues, enumOptions));\n            } else {\n              onChange(enumOptionsDeselectValue<S>(index, checkboxesValues, enumOptions));\n            }\n          };\n\n          const checkbox = (\n            <span>\n              <input\n                type='checkbox'\n                id={optionId(id, index)}\n                name={id}\n                checked={checked}\n                value={String(index)}\n                disabled={disabled || itemDisabled || readonly}\n                autoFocus={autofocus && index === 0}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                onFocus={handleFocus}\n                aria-describedby={ariaDescribedByIds<T>(id)}\n              />\n              <span>{option.label}</span>\n            </span>\n          );\n          return inline ? (\n            <label key={index} className={`checkbox-inline ${disabledCls}`}>\n              {checkbox}\n            </label>\n          ) : (\n            <div key={index} className={`checkbox ${disabledCls}`}>\n              <label>{checkbox}</label>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default CheckboxesWidget;\n","import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `ColorWidget` component uses the `BaseInputTemplate` changing the type to `color` and disables it when it is\n * either disabled or readonly.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function ColorWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { disabled, readonly, options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='color' {...props} disabled={disabled || readonly} />;\n}\n","import { useCallback } from 'react';\nimport { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `DateWidget` component uses the `BaseInputTemplate` changing the type to `date` and transforms\n * the value to undefined when it is falsy during the `onChange` handling.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function DateWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { onChange, options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  const handleChange = useCallback((value: any) => onChange(value || undefined), [onChange]);\n\n  return <BaseInputTemplate type='date' {...props} onChange={handleChange} />;\n}\n","import {\n  getTemplate,\n  localToUTC,\n  utcToLocal,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from '@rjsf/utils';\n\n/** The `DateTimeWidget` component uses the `BaseInputTemplate` changing the type to `datetime-local` and transforms\n * the value to/from utc using the appropriate utility functions.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function DateTimeWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { onChange, value, options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return (\n    <BaseInputTemplate\n      type='datetime-local'\n      {...props}\n      value={utcToLocal(value)}\n      onChange={(value) => onChange(localToUTC(value))}\n    />\n  );\n}\n","import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `EmailWidget` component uses the `BaseInputTemplate` changing the type to `email`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function EmailWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='email' {...props} />;\n}\n","import { ChangeEvent, useCallback, useMemo, useState } from 'react';\nimport {\n  dataURItoBlob,\n  FormContextType,\n  getTemplate,\n  Registry,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  WidgetProps,\n} from '@rjsf/utils';\nimport Markdown from 'markdown-to-jsx';\n\nfunction addNameToDataURL(dataURL: string, name: string) {\n  if (dataURL === null) {\n    return null;\n  }\n  return dataURL.replace(';base64', `;name=${encodeURIComponent(name)};base64`);\n}\n\ntype FileInfoType = {\n  dataURL?: string | null;\n  name: string;\n  size: number;\n  type: string;\n};\n\nfunction processFile(file: File): Promise<FileInfoType> {\n  const { name, size, type } = file;\n  return new Promise((resolve, reject) => {\n    const reader = new window.FileReader();\n    reader.onerror = reject;\n    reader.onload = (event) => {\n      if (typeof event.target?.result === 'string') {\n        resolve({\n          dataURL: addNameToDataURL(event.target.result, name),\n          name,\n          size,\n          type,\n        });\n      } else {\n        resolve({\n          dataURL: null,\n          name,\n          size,\n          type,\n        });\n      }\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\nfunction processFiles(files: FileList) {\n  return Promise.all(Array.from(files).map(processFile));\n}\n\nfunction FileInfoPreview<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  fileInfo,\n  registry,\n}: {\n  fileInfo: FileInfoType;\n  registry: Registry<T, S, F>;\n}) {\n  const { translateString } = registry;\n  const { dataURL, type, name } = fileInfo;\n  if (!dataURL) {\n    return null;\n  }\n\n  if (type.indexOf('image') !== -1) {\n    return <img src={dataURL} style={{ maxWidth: '100%' }} className='file-preview' />;\n  }\n\n  return (\n    <>\n      {' '}\n      <a download={`preview-${name}`} href={dataURL} className='file-download'>\n        {translateString(TranslatableString.PreviewLabel)}\n      </a>\n    </>\n  );\n}\n\nfunction FilesInfo<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  filesInfo,\n  registry,\n  preview,\n}: {\n  filesInfo: FileInfoType[];\n  registry: Registry<T, S, F>;\n  preview?: boolean;\n}) {\n  if (filesInfo.length === 0) {\n    return null;\n  }\n  const { translateString } = registry;\n  return (\n    <ul className='file-info'>\n      {filesInfo.map((fileInfo, key) => {\n        const { name, size, type } = fileInfo;\n        return (\n          <li key={key}>\n            <Markdown>{translateString(TranslatableString.FilesInfo, [name, type, String(size)])}</Markdown>\n            {preview && <FileInfoPreview<T, S, F> fileInfo={fileInfo} registry={registry} />}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction extractFileInfo(dataURLs: string[]) {\n  return dataURLs\n    .filter((dataURL) => dataURL)\n    .map((dataURL) => {\n      const { blob, name } = dataURItoBlob(dataURL);\n      return {\n        dataURL,\n        name: name,\n        size: blob.size,\n        type: blob.type,\n      };\n    });\n}\n\n/**\n *  The `FileWidget` is a widget for rendering file upload fields.\n *  It is typically used with a string property with data-url format.\n */\nfunction FileWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { disabled, readonly, multiple, onChange, value, options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  const extractedFilesInfo = useMemo(\n    () => (Array.isArray(value) ? extractFileInfo(value) : extractFileInfo([value])),\n    [value]\n  );\n  const [filesInfo, setFilesInfo] = useState<FileInfoType[]>(extractedFilesInfo);\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      if (!event.target.files) {\n        return;\n      }\n      processFiles(event.target.files).then((filesInfoEvent) => {\n        setFilesInfo(filesInfoEvent);\n        const newValue = filesInfoEvent.map((fileInfo) => fileInfo.dataURL);\n        if (multiple) {\n          onChange(newValue);\n        } else {\n          onChange(newValue[0]);\n        }\n      });\n    },\n    [multiple, onChange]\n  );\n\n  return (\n    <div>\n      <BaseInputTemplate\n        {...props}\n        disabled={disabled || readonly}\n        type='file'\n        onChangeOverride={handleChange}\n        value=''\n        accept={options.accept ? String(options.accept) : undefined}\n      />\n      <FilesInfo<T, S, F> filesInfo={filesInfo} registry={registry} preview={options.filePreview} />\n    </div>\n  );\n}\n\nexport default FileWidget;\n","import { FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `HiddenWidget` is a widget for rendering a hidden input field.\n *  It is typically used by setting type to \"hidden\".\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction HiddenWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  id,\n  value,\n}: WidgetProps<T, S, F>) {\n  return <input type='hidden' id={id} name={id} value={typeof value === 'undefined' ? '' : value} />;\n}\n\nexport default HiddenWidget;\n","import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `PasswordWidget` component uses the `BaseInputTemplate` changing the type to `password`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function PasswordWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='password' {...props} />;\n}\n","import { FocusEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  enumOptionsIsSelected,\n  enumOptionsValueForIndex,\n  optionId,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from '@rjsf/utils';\n\n/** The `RadioWidget` is a widget for rendering a radio group.\n *  It is typically used with a string property constrained with enum options.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction RadioWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  autofocus = false,\n  onBlur,\n  onFocus,\n  onChange,\n  id,\n}: WidgetProps<T, S, F>) {\n  // Generating a unique field name to identify this set of radio buttons\n  const name = Math.random().toString();\n  const { enumOptions, enumDisabled, inline, emptyValue } = options;\n\n  const handleBlur = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onBlur(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onFocus(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onFocus, id]\n  );\n\n  return (\n    <div className='field-radio-group' id={id}>\n      {Array.isArray(enumOptions) &&\n        enumOptions.map((option, i) => {\n          const checked = enumOptionsIsSelected<S>(option.value, value);\n          const itemDisabled = Array.isArray(enumDisabled) && enumDisabled.indexOf(option.value) !== -1;\n          const disabledCls = disabled || itemDisabled || readonly ? 'disabled' : '';\n\n          const handleChange = () => onChange(option.value);\n\n          const radio = (\n            <span>\n              <input\n                type='radio'\n                id={optionId(id, i)}\n                checked={checked}\n                name={name}\n                required={required}\n                value={String(i)}\n                disabled={disabled || itemDisabled || readonly}\n                autoFocus={autofocus && i === 0}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                onFocus={handleFocus}\n                aria-describedby={ariaDescribedByIds<T>(id)}\n              />\n              <span>{option.label}</span>\n            </span>\n          );\n\n          return inline ? (\n            <label key={i} className={`radio-inline ${disabledCls}`}>\n              {radio}\n            </label>\n          ) : (\n            <div key={i} className={`radio ${disabledCls}`}>\n              <label>{radio}</label>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default RadioWidget;\n","import { FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `RangeWidget` component uses the `BaseInputTemplate` changing the type to `range` and wrapping the result\n * in a div, with the value along side it.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function RangeWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const {\n    value,\n    registry: {\n      templates: { BaseInputTemplate },\n    },\n  } = props;\n  return (\n    <div className='field-range-wrapper'>\n      <BaseInputTemplate type='range' {...props} />\n      <span className='range-view'>{value}</span>\n    </div>\n  );\n}\n","import { ChangeEvent, FocusEvent, SyntheticEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  enumOptionsIndexForValue,\n  enumOptionsValueForIndex,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from '@rjsf/utils';\n\nfunction getValue(event: SyntheticEvent<HTMLSelectElement>, multiple: boolean) {\n  if (multiple) {\n    return Array.from((event.target as HTMLSelectElement).options)\n      .slice()\n      .filter((o) => o.selected)\n      .map((o) => o.value);\n  }\n  return (event.target as HTMLSelectElement).value;\n}\n\n/** The `SelectWidget` is a widget for rendering dropdowns.\n *  It is typically used with string properties constrained with enum options.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction SelectWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  schema,\n  id,\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  multiple = false,\n  autofocus = false,\n  onChange,\n  onBlur,\n  onFocus,\n  placeholder,\n}: WidgetProps<T, S, F>) {\n  const { enumOptions, enumDisabled, emptyValue: optEmptyVal } = options;\n  const emptyValue = multiple ? [] : '';\n\n  const handleFocus = useCallback(\n    (event: FocusEvent<HTMLSelectElement>) => {\n      const newValue = getValue(event, multiple);\n      return onFocus(id, enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyVal));\n    },\n    [onFocus, id, schema, multiple, options]\n  );\n\n  const handleBlur = useCallback(\n    (event: FocusEvent<HTMLSelectElement>) => {\n      const newValue = getValue(event, multiple);\n      return onBlur(id, enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyVal));\n    },\n    [onBlur, id, schema, multiple, options]\n  );\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLSelectElement>) => {\n      const newValue = getValue(event, multiple);\n      return onChange(enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyVal));\n    },\n    [onChange, schema, multiple, options]\n  );\n\n  const selectedIndexes = enumOptionsIndexForValue<S>(value, enumOptions, multiple);\n\n  return (\n    <select\n      id={id}\n      name={id}\n      multiple={multiple}\n      className='form-control'\n      value={typeof selectedIndexes === 'undefined' ? emptyValue : selectedIndexes}\n      required={required}\n      disabled={disabled || readonly}\n      autoFocus={autofocus}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      onChange={handleChange}\n      aria-describedby={ariaDescribedByIds<T>(id)}\n    >\n      {!multiple && schema.default === undefined && <option value=''>{placeholder}</option>}\n      {Array.isArray(enumOptions) &&\n        enumOptions.map(({ value, label }, i) => {\n          const disabled = enumDisabled && enumDisabled.indexOf(value) !== -1;\n          return (\n            <option key={i} value={String(i)} disabled={disabled}>\n              {label}\n            </option>\n          );\n        })}\n    </select>\n  );\n}\n\nexport default SelectWidget;\n","import { ChangeEvent, FocusEvent, useCallback } from 'react';\nimport { ariaDescribedByIds, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `TextareaWidget` is a widget for rendering input fields as textarea.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction TextareaWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  id,\n  options = {},\n  placeholder,\n  value,\n  required,\n  disabled,\n  readonly,\n  autofocus = false,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps<T, S, F>) {\n  const handleChange = useCallback(\n    ({ target: { value } }: ChangeEvent<HTMLTextAreaElement>) => onChange(value === '' ? options.emptyValue : value),\n    [onChange, options.emptyValue]\n  );\n\n  const handleBlur = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLTextAreaElement>) => onBlur(id, value),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLTextAreaElement>) => onFocus(id, value),\n    [id, onFocus]\n  );\n\n  return (\n    <textarea\n      id={id}\n      name={id}\n      className='form-control'\n      value={value ? value : ''}\n      placeholder={placeholder}\n      required={required}\n      disabled={disabled}\n      readOnly={readonly}\n      autoFocus={autofocus}\n      rows={options.rows}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      onChange={handleChange}\n      aria-describedby={ariaDescribedByIds<T>(id)}\n    />\n  );\n}\n\nTextareaWidget.defaultProps = {\n  autofocus: false,\n  options: {},\n};\n\nexport default TextareaWidget;\n","import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `TextWidget` component uses the `BaseInputTemplate`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function TextWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate {...props} />;\n}\n","import { useCallback } from 'react';\nimport { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `TimeWidget` component uses the `BaseInputTemplate` changing the type to `time` and transforms\n * the value to undefined when it is falsy during the `onChange` handling.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function TimeWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { onChange, options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  const handleChange = useCallback((value: any) => onChange(value ? `${value}:00` : undefined), [onChange]);\n\n  return <BaseInputTemplate type='time' {...props} onChange={handleChange} />;\n}\n","import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `URLWidget` component uses the `BaseInputTemplate` changing the type to `url`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function URLWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='url' {...props} />;\n}\n","import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `UpDownWidget` component uses the `BaseInputTemplate` changing the type to `number`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function UpDownWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='number' {...props} />;\n}\n","import { FormContextType, RegistryWidgetsType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\nimport AltDateWidget from './AltDateWidget';\nimport AltDateTimeWidget from './AltDateTimeWidget';\nimport CheckboxWidget from './CheckboxWidget';\nimport CheckboxesWidget from './CheckboxesWidget';\nimport ColorWidget from './ColorWidget';\nimport DateWidget from './DateWidget';\nimport DateTimeWidget from './DateTimeWidget';\nimport EmailWidget from './EmailWidget';\nimport FileWidget from './FileWidget';\nimport HiddenWidget from './HiddenWidget';\nimport PasswordWidget from './PasswordWidget';\nimport RadioWidget from './RadioWidget';\nimport RangeWidget from './RangeWidget';\nimport SelectWidget from './SelectWidget';\nimport TextareaWidget from './TextareaWidget';\nimport TextWidget from './TextWidget';\nimport TimeWidget from './TimeWidget';\nimport URLWidget from './URLWidget';\nimport UpDownWidget from './UpDownWidget';\n\nfunction widgets<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): RegistryWidgetsType<T, S, F> {\n  return {\n    AltDateWidget,\n    AltDateTimeWidget,\n    CheckboxWidget,\n    CheckboxesWidget,\n    ColorWidget,\n    DateWidget,\n    DateTimeWidget,\n    EmailWidget,\n    FileWidget,\n    HiddenWidget,\n    PasswordWidget,\n    RadioWidget,\n    RangeWidget,\n    SelectWidget,\n    TextWidget,\n    TextareaWidget,\n    TimeWidget,\n    UpDownWidget,\n    URLWidget,\n  };\n}\n\nexport default widgets;\n","import { englishStringTranslator, FormContextType, Registry, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\nimport fields from './components/fields';\nimport templates from './components/templates';\nimport widgets from './components/widgets';\n\n/** The default registry consists of all the fields, templates and widgets provided in the core implementation,\n * plus an empty `rootSchema` and `formContext. We omit schemaUtils here because it cannot be defaulted without a\n * rootSchema and validator. It will be added into the computed registry later in the Form.\n */\nexport default function getDefaultRegistry<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): Omit<Registry<T, S, F>, 'schemaUtils'> {\n  return {\n    fields: fields<T, S, F>(),\n    templates: templates<T, S, F>(),\n    widgets: widgets<T, S, F>(),\n    rootSchema: {} as S,\n    formContext: {} as F,\n    translateString: englishStringTranslator,\n  };\n}\n","import { Component, ElementType, FormEvent, ReactNode, Ref, RefObject, createRef } from 'react';\nimport {\n  createSchemaUtils,\n  CustomValidator,\n  deepEquals,\n  ErrorSchema,\n  ErrorTransformer,\n  FormContextType,\n  GenericObjectType,\n  getTemplate,\n  getUiOptions,\n  IdSchema,\n  isObject,\n  mergeObjects,\n  NAME_KEY,\n  PathSchema,\n  StrictRJSFSchema,\n  Registry,\n  RegistryFieldsType,\n  RegistryWidgetsType,\n  RJSFSchema,\n  RJSFValidationError,\n  RJSF_ADDITONAL_PROPERTIES_FLAG,\n  SchemaUtilsType,\n  shouldRender,\n  TemplatesType,\n  UiSchema,\n  UI_GLOBAL_OPTIONS_KEY,\n  ValidationData,\n  ValidatorType,\n} from '@rjsf/utils';\nimport _get from 'lodash/get';\nimport _isEmpty from 'lodash/isEmpty';\nimport _pick from 'lodash/pick';\nimport _toPath from 'lodash/toPath';\n\nimport getDefaultRegistry from '../getDefaultRegistry';\n\n/** The properties that are passed to the `Form` */\nexport interface FormProps<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> {\n  /** The JSON schema object for the form */\n  schema: S;\n  /** An implementation of the `ValidatorType` interface that is needed for form validation to work */\n  validator: ValidatorType<T, S, F>;\n  /** The optional children for the form, if provided, it will replace the default `SubmitButton` */\n  children?: ReactNode;\n  /** The uiSchema for the form */\n  uiSchema?: UiSchema<T, S, F>;\n  /** The data for the form, used to prefill a form with existing data */\n  formData?: T;\n  // Form presentation and behavior modifiers\n  /** You can provide a `formContext` object to the form, which is passed down to all fields and widgets. Useful for\n   * implementing context aware fields and widgets.\n   *\n   * NOTE: Setting `{readonlyAsDisabled: false}` on the formContext will make the antd theme treat readOnly fields as\n   * disabled.\n   */\n  formContext?: F;\n  /** To avoid collisions with existing ids in the DOM, it is possible to change the prefix used for ids;\n   * Default is `root`\n   */\n  idPrefix?: string;\n  /** To avoid using a path separator that is present in field names, it is possible to change the separator used for\n   * ids (Default is `_`)\n   */\n  idSeparator?: string;\n  /** It's possible to disable the whole form by setting the `disabled` prop. The `disabled` prop is then forwarded down\n   * to each field of the form. If you just want to disable some fields, see the `ui:disabled` parameter in `uiSchema`\n   */\n  disabled?: boolean;\n  /** It's possible to make the whole form read-only by setting the `readonly` prop. The `readonly` prop is then\n   * forwarded down to each field of the form. If you just want to make some fields read-only, see the `ui:readonly`\n   * parameter in `uiSchema`\n   */\n  readonly?: boolean;\n  // Form registry\n  /** The dictionary of registered fields in the form */\n  fields?: RegistryFieldsType<T, S, F>;\n  /** The dictionary of registered templates in the form; Partial allows a subset to be provided beyond the defaults */\n  templates?: Partial<Omit<TemplatesType<T, S, F>, 'ButtonTemplates'>> & {\n    ButtonTemplates?: Partial<TemplatesType<T, S, F>['ButtonTemplates']>;\n  };\n  /** The dictionary of registered widgets in the form */\n  widgets?: RegistryWidgetsType<T, S, F>;\n  // Callbacks\n  /** If you plan on being notified every time the form data are updated, you can pass an `onChange` handler, which will\n   * receive the same args as `onSubmit` any time a value is updated in the form. Can also return the `id` of the field\n   * that caused the change\n   */\n  onChange?: (data: IChangeEvent<T, S, F>, id?: string) => void;\n  /** To react when submitted form data are invalid, pass an `onError` handler. It will be passed the list of\n   * encountered errors\n   */\n  onError?: (errors: RJSFValidationError[]) => void;\n  /** You can pass a function as the `onSubmit` prop of your `Form` component to listen to when the form is submitted\n   * and its data are valid. It will be passed a result object having a `formData` attribute, which is the valid form\n   * data you're usually after. The original event will also be passed as a second parameter\n   */\n  onSubmit?: (data: IChangeEvent<T, S, F>, event: FormEvent<any>) => void;\n  /** Sometimes you may want to trigger events or modify external state when a field has been touched, so you can pass\n   * an `onBlur` handler, which will receive the id of the input that was blurred and the field value\n   */\n  onBlur?: (id: string, data: any) => void;\n  /** Sometimes you may want to trigger events or modify external state when a field has been focused, so you can pass\n   * an `onFocus` handler, which will receive the id of the input that is focused and the field value\n   */\n  onFocus?: (id: string, data: any) => void;\n  // <form /> HTML attributes\n  /** The value of this prop will be passed to the `accept-charset` HTML attribute on the form */\n  acceptcharset?: string;\n  /** The value of this prop will be passed to the `action` HTML attribute on the form\n   *\n   * NOTE: this just renders the `action` attribute in the HTML markup. There is no real network request being sent to\n   * this `action` on submit. Instead, react-jsonschema-form catches the submit event with `event.preventDefault()`\n   * and then calls the `onSubmit` function, where you could send a request programmatically with `fetch` or similar.\n   */\n  action?: string;\n  /** The value of this prop will be passed to the `autocomplete` HTML attribute on the form */\n  autoComplete?: string;\n  /** The value of this prop will be passed to the `class` HTML attribute on the form */\n  className?: string;\n  /** The value of this prop will be passed to the `enctype` HTML attribute on the form */\n  enctype?: string;\n  /** The value of this prop will be passed to the `id` HTML attribute on the form */\n  id?: string;\n  /** The value of this prop will be passed to the `name` HTML attribute on the form */\n  name?: string;\n  /** The value of this prop will be passed to the `method` HTML attribute on the form */\n  method?: string;\n  /** It's possible to change the default `form` tag name to a different HTML tag, which can be helpful if you are\n   * nesting forms. However, native browser form behaviour, such as submitting when the `Enter` key is pressed, may no\n   * longer work\n   */\n  tagName?: ElementType;\n  /** The value of this prop will be passed to the `target` HTML attribute on the form */\n  target?: string;\n  // Errors and validation\n  /** Formerly the `validate` prop; Takes a function that specifies custom validation rules for the form */\n  customValidate?: CustomValidator<T, S, F>;\n  /** This prop allows passing in custom errors that are augmented with the existing JSON Schema errors on the form; it\n   * can be used to implement asynchronous validation\n   */\n  extraErrors?: ErrorSchema<T>;\n  /** If set to true, turns off HTML5 validation on the form; Set to `false` by default */\n  noHtml5Validate?: boolean;\n  /** If set to true, turns off all validation. Set to `false` by default\n   *\n   * @deprecated - In a future release, this switch may be replaced by making `validator` prop optional\n   */\n  noValidate?: boolean;\n  /** If set to true, the form will perform validation and show any validation errors whenever the form data is changed,\n   * rather than just on submit\n   */\n  liveValidate?: boolean;\n  /** If `omitExtraData` and `liveOmit` are both set to true, then extra form data values that are not in any form field\n   * will be removed whenever `onChange` is called. Set to `false` by default\n   */\n  liveOmit?: boolean;\n  /** If set to true, then extra form data values that are not in any form field will be removed whenever `onSubmit` is\n   * called. Set to `false` by default.\n   */\n  omitExtraData?: boolean;\n  /** When this prop is set to `top` or 'bottom', a list of errors (or the custom error list defined in the `ErrorList`) will also\n   * show. When set to false, only inline input validation errors will be shown. Set to `top` by default\n   */\n  showErrorList?: false | 'top' | 'bottom';\n  /** A function can be passed to this prop in order to make modifications to the default errors resulting from JSON\n   * Schema validation\n   */\n  transformErrors?: ErrorTransformer<T, S, F>;\n  /** If set to true, then the first field with an error will receive the focus when the form is submitted with errors\n   */\n  focusOnFirstError?: boolean;\n  /** Optional string translation function, if provided, allows users to change the translation of the RJSF internal\n   * strings. Some strings contain replaceable parameter values as indicated by `%1`, `%2`, etc. The number after the\n   * `%` indicates the order of the parameter. The ordering of parameters is important because some languages may choose\n   * to put the second parameter before the first in its translation.\n   */\n  translateString?: Registry['translateString'];\n  // Private\n  /**\n   * _internalFormWrapper is currently used by the semantic-ui theme to provide a custom wrapper around `<Form />`\n   * that supports the proper rendering of those themes. To use this prop, one must pass a component that takes two\n   * props: `children` and `as`. That component, at minimum, should render the `children` inside of a <form /> tag\n   * unless `as` is provided, in which case, use the `as` prop in place of `<form />`.\n   * i.e.:\n   * ```\n   * export default function InternalForm({ children, as }) {\n   *   const FormTag = as || 'form';\n   *   return <FormTag>{children}</FormTag>;\n   * }\n   * ```\n   *\n   * Use at your own risk as this prop is private and may change at any time without notice.\n   */\n  _internalFormWrapper?: ElementType;\n  /** Support receiving a React ref to the Form\n   */\n  ref?: Ref<Form<T, S, F>>;\n}\n\n/** The data that is contained within the state for the `Form` */\nexport interface FormState<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> {\n  /** The JSON schema object for the form */\n  schema: S;\n  /** The uiSchema for the form */\n  uiSchema: UiSchema<T, S, F>;\n  /** The `IdSchema` for the form, computed from the `schema`, the `rootFieldId`, the `formData` and the `idPrefix` and\n   * `idSeparator` props.\n   */\n  idSchema: IdSchema<T>;\n  /** The schemaUtils implementation used by the `Form`, created from the `validator` and the `schema` */\n  schemaUtils: SchemaUtilsType<T, S, F>;\n  /** The current data for the form, computed from the `formData` prop and the changes made by the user */\n  formData?: T;\n  /** Flag indicating whether the form is in edit mode, true when `formData` is passed to the form, otherwise false */\n  edit: boolean;\n  /** The current list of errors for the form, includes `extraErrors` */\n  errors: RJSFValidationError[];\n  /** The current errors, in `ErrorSchema` format, for the form, includes `extraErrors` */\n  errorSchema: ErrorSchema<T>;\n  /** The current list of errors for the form directly from schema validation, does NOT include `extraErrors` */\n  schemaValidationErrors: RJSFValidationError[];\n  /** The current errors, in `ErrorSchema` format, for the form directly from schema validation, does NOT include\n   * `extraErrors`\n   */\n  schemaValidationErrorSchema: ErrorSchema<T>;\n}\n\n/** The event data passed when changes have been made to the form, includes everything from the `FormState` except\n * the schema validation errors. An additional `status` is added when returned from `onSubmit`\n */\nexport interface IChangeEvent<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>\n  extends Omit<FormState<T, S, F>, 'schemaValidationErrors' | 'schemaValidationErrorSchema'> {\n  /** The status of the form when submitted */\n  status?: 'submitted';\n}\n\n/** The `Form` component renders the outer form and all the fields defined in the `schema` */\nexport default class Form<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> extends Component<FormProps<T, S, F>, FormState<T, S, F>> {\n  /** The ref used to hold the `form` element, this needs to be `any` because `tagName` or `_internalFormWrapper` can\n   * provide any possible type here\n   */\n  formElement: RefObject<any>;\n\n  /** Constructs the `Form` from the `props`. Will setup the initial state from the props. It will also call the\n   * `onChange` handler if the initially provided `formData` is modified to add missing default values as part of the\n   * state construction.\n   *\n   * @param props - The initial props for the `Form`\n   */\n  constructor(props: FormProps<T, S, F>) {\n    super(props);\n\n    if (!props.validator) {\n      throw new Error('A validator is required for Form functionality to work');\n    }\n\n    this.state = this.getStateFromProps(props, props.formData);\n    if (this.props.onChange && !deepEquals(this.state.formData, this.props.formData)) {\n      this.props.onChange(this.state);\n    }\n    this.formElement = createRef();\n  }\n\n  /** React lifecycle method that gets called before new props are provided, updates the state based on new props. It\n   * will also call the`onChange` handler if the `formData` is modified to add missing default values as part of the\n   * state construction.\n   *\n   * @param nextProps - The new set of props about to be applied to the `Form`\n   */\n  UNSAFE_componentWillReceiveProps(nextProps: FormProps<T, S, F>) {\n    const nextState = this.getStateFromProps(nextProps, nextProps.formData);\n    if (\n      !deepEquals(nextState.formData, nextProps.formData) &&\n      !deepEquals(nextState.formData, this.state.formData) &&\n      nextProps.onChange\n    ) {\n      nextProps.onChange(nextState);\n    }\n    this.setState(nextState);\n  }\n\n  /** Extracts the updated state from the given `props` and `inputFormData`. As part of this process, the\n   * `inputFormData` is first processed to add any missing required defaults. After that, the data is run through the\n   * validation process IF required by the `props`.\n   *\n   * @param props - The props passed to the `Form`\n   * @param inputFormData - The new or current data for the `Form`\n   * @returns - The new state for the `Form`\n   */\n  getStateFromProps(props: FormProps<T, S, F>, inputFormData?: T): FormState<T, S, F> {\n    const state: FormState<T, S, F> = this.state || {};\n    const schema = 'schema' in props ? props.schema : this.props.schema;\n    const uiSchema: UiSchema<T, S, F> = ('uiSchema' in props ? props.uiSchema! : this.props.uiSchema!) || {};\n    const edit = typeof inputFormData !== 'undefined';\n    const liveValidate = 'liveValidate' in props ? props.liveValidate : this.props.liveValidate;\n    const mustValidate = edit && !props.noValidate && liveValidate;\n    const rootSchema = schema;\n    let schemaUtils: SchemaUtilsType<T, S, F> = state.schemaUtils;\n    if (!schemaUtils || schemaUtils.doesSchemaUtilsDiffer(props.validator, rootSchema)) {\n      schemaUtils = createSchemaUtils<T, S, F>(props.validator, rootSchema);\n    }\n    const formData: T = schemaUtils.getDefaultFormState(schema, inputFormData) as T;\n    const retrievedSchema = schemaUtils.retrieveSchema(schema, formData);\n\n    const getCurrentErrors = (): ValidationData<T> => {\n      if (props.noValidate) {\n        return { errors: [], errorSchema: {} };\n      } else if (!props.liveValidate) {\n        return {\n          errors: state.schemaValidationErrors || [],\n          errorSchema: state.schemaValidationErrorSchema || {},\n        };\n      }\n      return {\n        errors: state.errors || [],\n        errorSchema: state.errorSchema || {},\n      };\n    };\n\n    let errors: RJSFValidationError[];\n    let errorSchema: ErrorSchema<T> | undefined;\n    let schemaValidationErrors: RJSFValidationError[] = state.schemaValidationErrors;\n    let schemaValidationErrorSchema: ErrorSchema<T> = state.schemaValidationErrorSchema;\n    if (mustValidate) {\n      const schemaValidation = this.validate(formData, schema, schemaUtils);\n      errors = schemaValidation.errors;\n      errorSchema = schemaValidation.errorSchema;\n      schemaValidationErrors = errors;\n      schemaValidationErrorSchema = errorSchema;\n    } else {\n      const currentErrors = getCurrentErrors();\n      errors = currentErrors.errors;\n      errorSchema = currentErrors.errorSchema;\n    }\n    if (props.extraErrors) {\n      const merged = schemaUtils.mergeValidationData({ errorSchema, errors }, props.extraErrors);\n      errorSchema = merged.errorSchema;\n      errors = merged.errors;\n    }\n    const idSchema = schemaUtils.toIdSchema(\n      retrievedSchema,\n      uiSchema['ui:rootFieldId'],\n      formData,\n      props.idPrefix,\n      props.idSeparator\n    );\n    const nextState: FormState<T, S, F> = {\n      schemaUtils,\n      schema,\n      uiSchema,\n      idSchema,\n      formData,\n      edit,\n      errors,\n      errorSchema,\n      schemaValidationErrors,\n      schemaValidationErrorSchema,\n    };\n    return nextState;\n  }\n\n  /** React lifecycle method that is used to determine whether component should be updated.\n   *\n   * @param nextProps - The next version of the props\n   * @param nextState - The next version of the state\n   * @returns - True if the component should be updated, false otherwise\n   */\n  shouldComponentUpdate(nextProps: FormProps<T, S, F>, nextState: FormState<T, S, F>): boolean {\n    return shouldRender(this, nextProps, nextState);\n  }\n\n  /** Validates the `formData` against the `schema` using the `altSchemaUtils` (if provided otherwise it uses the\n   * `schemaUtils` in the state), returning the results.\n   *\n   * @param formData - The new form data to validate\n   * @param schema - The schema used to validate against\n   * @param altSchemaUtils - The alternate schemaUtils to use for validation\n   */\n  validate(\n    formData: T | undefined,\n    schema = this.props.schema,\n    altSchemaUtils?: SchemaUtilsType<T, S, F>\n  ): ValidationData<T> {\n    const schemaUtils = altSchemaUtils ? altSchemaUtils : this.state.schemaUtils;\n    const { customValidate, transformErrors, uiSchema } = this.props;\n    const resolvedSchema = schemaUtils.retrieveSchema(schema, formData);\n    return schemaUtils\n      .getValidator()\n      .validateFormData(formData, resolvedSchema, customValidate, transformErrors, uiSchema);\n  }\n\n  /** Renders any errors contained in the `state` in using the `ErrorList`, if not disabled by `showErrorList`. */\n  renderErrors(registry: Registry<T, S, F>) {\n    const { errors, errorSchema, schema, uiSchema } = this.state;\n    const { formContext } = this.props;\n    const options = getUiOptions<T, S, F>(uiSchema);\n    const ErrorListTemplate = getTemplate<'ErrorListTemplate', T, S, F>('ErrorListTemplate', registry, options);\n\n    if (errors && errors.length) {\n      return (\n        <ErrorListTemplate\n          errors={errors}\n          errorSchema={errorSchema || {}}\n          schema={schema}\n          uiSchema={uiSchema}\n          formContext={formContext}\n          registry={registry}\n        />\n      );\n    }\n    return null;\n  }\n\n  /** Returns the `formData` with only the elements specified in the `fields` list\n   *\n   * @param formData - The data for the `Form`\n   * @param fields - The fields to keep while filtering\n   */\n  getUsedFormData = (formData: T | undefined, fields: string[][]): T | undefined => {\n    // For the case of a single input form\n    if (fields.length === 0 && typeof formData !== 'object') {\n      return formData;\n    }\n\n    // _pick has incorrect type definition, it works with string[][], because lodash/hasIn supports it\n    const data: GenericObjectType = _pick(formData, fields as unknown as string[]);\n    if (Array.isArray(formData)) {\n      return Object.keys(data).map((key: string) => data[key]) as unknown as T;\n    }\n\n    return data as T;\n  };\n\n  /** Returns the list of field names from inspecting the `pathSchema` as well as using the `formData`\n   *\n   * @param pathSchema - The `PathSchema` object for the form\n   * @param [formData] - The form data to use while checking for empty objects/arrays\n   */\n  getFieldNames = (pathSchema: PathSchema<T>, formData?: T): string[][] => {\n    const getAllPaths = (_obj: GenericObjectType, acc: string[][] = [], paths: string[][] = [[]]) => {\n      Object.keys(_obj).forEach((key: string) => {\n        if (typeof _obj[key] === 'object') {\n          const newPaths = paths.map((path) => [...path, key]);\n          // If an object is marked with additionalProperties, all its keys are valid\n          if (_obj[key][RJSF_ADDITONAL_PROPERTIES_FLAG] && _obj[key][NAME_KEY] !== '') {\n            acc.push(_obj[key][NAME_KEY]);\n          } else {\n            getAllPaths(_obj[key], acc, newPaths);\n          }\n        } else if (key === NAME_KEY && _obj[key] !== '') {\n          paths.forEach((path) => {\n            const formValue = _get(formData, path);\n            // adds path to fieldNames if it points to a value\n            // or an empty object/array\n            if (typeof formValue !== 'object' || _isEmpty(formValue)) {\n              acc.push(path);\n            }\n          });\n        }\n      });\n      return acc;\n    };\n\n    return getAllPaths(pathSchema);\n  };\n\n  /** Function to handle changes made to a field in the `Form`. This handler receives an entirely new copy of the\n   * `formData` along with a new `ErrorSchema`. It will first update the `formData` with any missing default fields and\n   * then, if `omitExtraData` and `liveOmit` are turned on, the `formData` will be filterer to remove any extra data not\n   * in a form field. Then, the resulting formData will be validated if required. The state will be updated with the new\n   * updated (potentially filtered) `formData`, any errors that resulted from validation. Finally the `onChange`\n   * callback will be called if specified with the updated state.\n   *\n   * @param formData - The new form data from a change to a field\n   * @param newErrorSchema - The new `ErrorSchema` based on the field change\n   * @param id - The id of the field that caused the change\n   */\n  onChange = (formData: T | undefined, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n    const { extraErrors, omitExtraData, liveOmit, noValidate, liveValidate, onChange } = this.props;\n    const { schemaUtils, schema } = this.state;\n    if (isObject(formData) || Array.isArray(formData)) {\n      const newState = this.getStateFromProps(this.props, formData);\n      formData = newState.formData;\n    }\n\n    const mustValidate = !noValidate && liveValidate;\n    let state: Partial<FormState<T, S, F>> = { formData, schema };\n    let newFormData = formData;\n\n    if (omitExtraData === true && liveOmit === true) {\n      const retrievedSchema = schemaUtils.retrieveSchema(schema, formData);\n      const pathSchema = schemaUtils.toPathSchema(retrievedSchema, '', formData);\n\n      const fieldNames = this.getFieldNames(pathSchema, formData);\n\n      newFormData = this.getUsedFormData(formData, fieldNames);\n      state = {\n        formData: newFormData,\n      };\n    }\n\n    if (mustValidate) {\n      const schemaValidation = this.validate(newFormData);\n      let errors = schemaValidation.errors;\n      let errorSchema = schemaValidation.errorSchema;\n      const schemaValidationErrors = errors;\n      const schemaValidationErrorSchema = errorSchema;\n      if (extraErrors) {\n        const merged = schemaUtils.mergeValidationData(schemaValidation, extraErrors);\n        errorSchema = merged.errorSchema;\n        errors = merged.errors;\n      }\n      state = {\n        formData: newFormData,\n        errors,\n        errorSchema,\n        schemaValidationErrors,\n        schemaValidationErrorSchema,\n      };\n    } else if (!noValidate && newErrorSchema) {\n      const errorSchema = extraErrors\n        ? (mergeObjects(newErrorSchema, extraErrors, 'preventDuplicates') as ErrorSchema<T>)\n        : newErrorSchema;\n      state = {\n        formData: newFormData,\n        errorSchema: errorSchema,\n        errors: schemaUtils.getValidator().toErrorList(errorSchema),\n      };\n    }\n    this.setState(state as FormState<T, S, F>, () => onChange && onChange({ ...this.state, ...state }, id));\n  };\n\n  /**\n   * Callback function to handle reset form data.\n   * - Reset all fields with default values.\n   * - Reset validations and errors\n   *\n   */\n  reset = () => {\n    const { onChange } = this.props;\n    const newState = this.getStateFromProps(this.props, undefined);\n    const newFormData = newState.formData;\n    const state = {\n      formData: newFormData,\n      errorSchema: {},\n      errors: [] as unknown,\n      schemaValidationErrors: [] as unknown,\n      schemaValidationErrorSchema: {},\n    } as FormState<T, S, F>;\n\n    this.setState(state, () => onChange && onChange({ ...this.state, ...state }));\n  };\n\n  /** Callback function to handle when a field on the form is blurred. Calls the `onBlur` callback for the `Form` if it\n   * was provided.\n   *\n   * @param id - The unique `id` of the field that was blurred\n   * @param data - The data associated with the field that was blurred\n   */\n  onBlur = (id: string, data: any) => {\n    const { onBlur } = this.props;\n    if (onBlur) {\n      onBlur(id, data);\n    }\n  };\n\n  /** Callback function to handle when a field on the form is focused. Calls the `onFocus` callback for the `Form` if it\n   * was provided.\n   *\n   * @param id - The unique `id` of the field that was focused\n   * @param data - The data associated with the field that was focused\n   */\n  onFocus = (id: string, data: any) => {\n    const { onFocus } = this.props;\n    if (onFocus) {\n      onFocus(id, data);\n    }\n  };\n\n  /** Callback function to handle when the form is submitted. First, it prevents the default event behavior. Nothing\n   * happens if the target and currentTarget of the event are not the same. It will omit any extra data in the\n   * `formData` in the state if `omitExtraData` is true. It will validate the resulting `formData`, reporting errors\n   * via the `onError()` callback unless validation is disabled. Finally it will add in any `extraErrors` and then call\n   * back the `onSubmit` callback if it was provided.\n   *\n   * @param event - The submit HTML form event\n   */\n  onSubmit = (event: FormEvent<any>) => {\n    event.preventDefault();\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    event.persist();\n    const { omitExtraData, extraErrors, noValidate, onSubmit } = this.props;\n    let { formData: newFormData } = this.state;\n    const { schema, schemaUtils } = this.state;\n\n    if (omitExtraData === true) {\n      const retrievedSchema = schemaUtils.retrieveSchema(schema, newFormData);\n      const pathSchema = schemaUtils.toPathSchema(retrievedSchema, '', newFormData);\n\n      const fieldNames = this.getFieldNames(pathSchema, newFormData);\n\n      newFormData = this.getUsedFormData(newFormData, fieldNames);\n    }\n\n    if (noValidate || this.validateForm()) {\n      // There are no errors generated through schema validation.\n      // Check for user provided errors and update state accordingly.\n      const errorSchema = extraErrors || {};\n      const errors = extraErrors ? schemaUtils.getValidator().toErrorList(extraErrors) : [];\n      this.setState(\n        {\n          formData: newFormData,\n          errors,\n          errorSchema,\n          schemaValidationErrors: [],\n          schemaValidationErrorSchema: {},\n        },\n        () => {\n          if (onSubmit) {\n            onSubmit({ ...this.state, formData: newFormData, status: 'submitted' }, event);\n          }\n        }\n      );\n    }\n  };\n\n  /** Returns the registry for the form */\n  getRegistry(): Registry<T, S, F> {\n    const { translateString: customTranslateString, uiSchema = {} } = this.props;\n    const { schemaUtils } = this.state;\n    const { fields, templates, widgets, formContext, translateString } = getDefaultRegistry<T, S, F>();\n    return {\n      fields: { ...fields, ...this.props.fields },\n      templates: {\n        ...templates,\n        ...this.props.templates,\n        ButtonTemplates: {\n          ...templates.ButtonTemplates,\n          ...this.props.templates?.ButtonTemplates,\n        },\n      },\n      widgets: { ...widgets, ...this.props.widgets },\n      rootSchema: this.props.schema,\n      formContext: this.props.formContext || formContext,\n      schemaUtils,\n      translateString: customTranslateString || translateString,\n      globalUiOptions: uiSchema[UI_GLOBAL_OPTIONS_KEY],\n    };\n  }\n\n  /** Provides a function that can be used to programmatically submit the `Form` */\n  submit() {\n    if (this.formElement.current) {\n      this.formElement.current.dispatchEvent(\n        new CustomEvent('submit', {\n          cancelable: true,\n        })\n      );\n      this.formElement.current.requestSubmit();\n    }\n  }\n\n  /** Attempts to focus on the field associated with the `error`. Uses the `property` field to compute path of the error\n   * field, then, using the `idPrefix` and `idSeparator` converts that path into an id. Then the input element with that\n   * id is attempted to be found using the `formElement` ref. If it is located, then it is focused.\n   *\n   * @param error - The error on which to focus\n   */\n  focusOnError(error: RJSFValidationError) {\n    const { idPrefix = 'root', idSeparator = '_' } = this.props;\n    const { property } = error;\n    const path = _toPath(property);\n    if (path[0] === '') {\n      // Most of the time the `.foo` property results in the first element being empty, so replace it with the idPrefix\n      path[0] = idPrefix;\n    } else {\n      // Otherwise insert the idPrefix into the first location using unshift\n      path.unshift(idPrefix);\n    }\n\n    const elementId = path.join(idSeparator);\n    let field = this.formElement.current.elements[elementId];\n    if (!field) {\n      // if not an exact match, try finding an input starting with the element id (like radio buttons or checkboxes)\n      field = this.formElement.current.querySelector(`input[id^=${elementId}`);\n    }\n    if (field) {\n      field.focus();\n    }\n  }\n\n  /** Programmatically validate the form. If `onError` is provided, then it will be called with the list of errors the\n   * same way as would happen on form submission.\n   *\n   * @returns - True if the form is valid, false otherwise.\n   */\n  validateForm() {\n    const { extraErrors, focusOnFirstError, onError } = this.props;\n    const { formData } = this.state;\n    const { schemaUtils } = this.state;\n    const schemaValidation = this.validate(formData);\n    let errors = schemaValidation.errors;\n    let errorSchema = schemaValidation.errorSchema;\n    const schemaValidationErrors = errors;\n    const schemaValidationErrorSchema = errorSchema;\n    if (errors.length > 0) {\n      if (extraErrors) {\n        const merged = schemaUtils.mergeValidationData(schemaValidation, extraErrors);\n        errorSchema = merged.errorSchema;\n        errors = merged.errors;\n      }\n      if (focusOnFirstError) {\n        this.focusOnError(schemaValidation.errors[0]);\n      }\n      this.setState(\n        {\n          errors,\n          errorSchema,\n          schemaValidationErrors,\n          schemaValidationErrorSchema,\n        },\n        () => {\n          if (onError) {\n            onError(errors);\n          } else {\n            console.error('Form validation failed', errors);\n          }\n        }\n      );\n      return false;\n    }\n    return true;\n  }\n\n  /** Renders the `Form` fields inside the <form> | `tagName` or `_internalFormWrapper`, rendering any errors if\n   * needed along with the submit button or any children of the form.\n   */\n  render() {\n    const {\n      children,\n      id,\n      idPrefix,\n      idSeparator,\n      className = '',\n      tagName,\n      name,\n      method,\n      target,\n      action,\n      autoComplete,\n      enctype,\n      acceptcharset,\n      noHtml5Validate = false,\n      disabled = false,\n      readonly = false,\n      formContext,\n      showErrorList = 'top',\n      _internalFormWrapper,\n    } = this.props;\n\n    const { schema, uiSchema, formData, errorSchema, idSchema } = this.state;\n    const registry = this.getRegistry();\n    const { SchemaField: _SchemaField } = registry.fields;\n    const { SubmitButton } = registry.templates.ButtonTemplates;\n    // The `semantic-ui` and `material-ui` themes have `_internalFormWrapper`s that take an `as` prop that is the\n    // PropTypes.elementType to use for the inner tag, so we'll need to pass `tagName` along if it is provided.\n    // NOTE, the `as` prop is native to `semantic-ui` and is emulated in the `material-ui` theme\n    const as = _internalFormWrapper ? tagName : undefined;\n    const FormTag = _internalFormWrapper || tagName || 'form';\n\n    return (\n      <FormTag\n        className={className ? className : 'rjsf'}\n        id={id}\n        name={name}\n        method={method}\n        target={target}\n        action={action}\n        autoComplete={autoComplete}\n        encType={enctype}\n        acceptCharset={acceptcharset}\n        noValidate={noHtml5Validate}\n        onSubmit={this.onSubmit}\n        as={as}\n        ref={this.formElement}\n      >\n        {showErrorList === 'top' && this.renderErrors(registry)}\n        <_SchemaField\n          name=''\n          schema={schema}\n          uiSchema={uiSchema}\n          errorSchema={errorSchema}\n          idSchema={idSchema}\n          idPrefix={idPrefix}\n          idSeparator={idSeparator}\n          formContext={formContext}\n          formData={formData}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          onFocus={this.onFocus}\n          registry={registry}\n          disabled={disabled}\n          readonly={readonly}\n        />\n        {children ? children : <SubmitButton uiSchema={uiSchema} registry={registry} />}\n        {showErrorList === 'bottom' && this.renderErrors(registry)}\n      </FormTag>\n    );\n  }\n}\n","import { ComponentType, ForwardedRef, forwardRef } from 'react';\nimport Form, { FormProps } from './components/Form';\nimport { FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The properties for the `withTheme` function, essentially a subset of properties from the `FormProps` that can be\n * overridden while creating a theme\n */\nexport type ThemeProps<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> = Pick<\n  FormProps<T, S, F>,\n  'fields' | 'templates' | 'widgets' | '_internalFormWrapper'\n>;\n\n/** A Higher-Order component that creates a wrapper around a `Form` with the overrides from the `WithThemeProps` */\nexport default function withTheme<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  themeProps: ThemeProps<T, S, F>\n): ComponentType<FormProps<T, S, F>> {\n  return forwardRef(\n    ({ fields, widgets, templates, ...directProps }: FormProps<T, S, F>, ref: ForwardedRef<Form<T, S, F>>) => {\n      fields = { ...themeProps?.fields, ...fields };\n      widgets = { ...themeProps?.widgets, ...widgets };\n      templates = {\n        ...themeProps?.templates,\n        ...templates,\n        ButtonTemplates: {\n          ...themeProps?.templates?.ButtonTemplates,\n          ...templates?.ButtonTemplates,\n        },\n      };\n\n      return (\n        <Form<T, S, F>\n          {...themeProps}\n          {...directProps}\n          fields={fields}\n          widgets={widgets}\n          templates={templates}\n          ref={ref}\n        />\n      );\n    }\n  );\n}\n"],"names":["generateRowId","nanoid","generateKeyedFormData","formData","Array","isArray","map","item","key","keyedToPlainFormData","keyedFormData","keyedItem","ArrayField","_Component","_inheritsLoose","props","_this","call","_getNewFormDataRow","_this$props","schema","registry","schemaUtils","itemSchema","items","isFixedItems","allowAdditionalItems","additionalItems","getDefaultFormState","onAddClick","event","_handleAddClick","onAddIndexClick","index","onCopyIndexClick","preventDefault","onChange","state","newKeyedFormDataRow","cloneDeep","newKeyedFormData","concat","undefined","splice","push","setState","updatedKeyedFormData","onDropIndexClick","_this$props2","errorSchema","newErrorSchema","idx","i","parseInt","set","filter","_","onReorderClick","newIndex","currentTarget","blur","_this$props3","reOrderArray","_newKeyedFormData","slice","onChangeForIndex","value","id","_extends2","_this$props4","arrayData","newFormData","jsonValue","_extends","onSelectChange","_this$props5","idSchema","$id","_props$formData","getDerivedStateFromProps","nextProps","prevState","nextFormData","previousKeyedFormData","length","previousKeyedFormDatum","_proto","prototype","isItemRequired","type","includes","canAddItem","formItems","_this$props6","uiSchema","_getUiOptions","getUiOptions","globalUiOptions","addable","maxItems","render","_this$props7","translateString","ITEMS_KEY","uiOptions","UnsupportedFieldTemplate","getTemplate","_jsx","reason","TranslatableString","MissingItems","isMultiSelect","renderMultiSelect","isCustomWidget","renderCustomWidget","renderFixedArray","isFilesArray","renderFiles","renderNormalArray","_this2","_this$props8","_this$props8$uiSchema","name","_this$props8$disabled","disabled","_this$props8$readonly","readonly","_this$props8$autofocu","autofocus","_this$props8$required","required","onBlur","onFocus","idPrefix","_this$props8$idSepara","idSeparator","rawErrors","title","formContext","_schemaItems","isObject","itemsSchema","retrieveSchema","canAdd","arrayProps","itemCast","itemErrorSchema","itemIdPrefix","itemIdSchema","toIdSchema","renderArrayFieldItem","canMoveUp","canMoveDown","itemData","itemUiSchema","totalItems","className","Template","_ref","_this$props9","_this$props9$disabled","_this$props9$readonly","_this$props9$autofocu","_this$props9$required","hideError","placeholder","_this$props9$formData","widgets","_getUiOptions2","widget","uiTitle","options","_objectWithoutPropertiesLoose","_excluded","Widget","getWidget","label","displayLabel","getDisplayLabel","multiple","hideLabel","_ref2","_this$props10","_this$props10$formDat","_this$props10$disable","_this$props10$readonl","_this$props10$autofoc","_this$props10$require","enumOptions","optionsList","_getUiOptions3","_getUiOptions3$widget","_excluded2","_ref3","_this$props11","_this$props11$disable","_this$props11$readonl","_this$props11$autofoc","_this$props11$require","_this$props11$formDat","_getUiOptions4","_getUiOptions4$widget","_excluded3","_this3","_this$props12","_this$props12$uiSchem","_this$props12$formDat","_this$props12$idSepar","_this$props12$disable","_this$props12$readonl","_this$props12$autofoc","_this$props12$require","_this$props$formData","itemSchemas","additionalSchema","additional","canRemove","_props$canRemove","_this$props13","_registry$fields","fields","ArraySchemaField","SchemaField","ItemSchemaField","_getUiOptions5","_getUiOptions5$ordera","orderable","_getUiOptions5$remova","removable","_getUiOptions5$copyab","copyable","has","moveUp","moveDown","copy","remove","toolbar","Object","keys","some","children","hasCopy","hasToolbar","hasMoveUp","hasMoveDown","hasRemove","_createClass","get","_this$props14","ArrayItemTitle","Component","BooleanField","_getUiOptions$widget","_getUiOptions$label","yes","YesLabel","no","NoLabel","oneOf","option","o","_schema$enum","schemaWithEnumNames","enums","enumNames","every","v","AnyOfField","onOptionChange","_this$state","selectedOption","retrievedOptions","intOption","newOption","oldOption","sanitizeDataForNewSchema","getFieldId","opt","getMatchingOption","componentDidUpdate","prevProps","newState","deepEquals","_newState","matchingOption","getClosestMatchingOption","baseType","_this$props5$disabled","_this$props5$errorSch","_SchemaField","_this$state2","autocomplete","_getUiOptions$title","ERRORS_KEY","fieldErrorSchema","omit","optionSchema","assign","translateEnum","TitleOptionPrefix","OptionPrefix","translateParams","String","_jsxs","isEmpty","trailingCharMatcherWithPrefix","trailingCharMatcher","NumberField","initialValue","_useState","useState","lastValue","setLastValue","StringField","handleChange","useCallback","charAt","processed","match","asNumber","replace","re","RegExp","ObjectField","_len","arguments","args","_key","apply","wasPropertyKeyModified","additionalProperties","onPropertyChange","addedByAdditionalProperties","_extends3","onDropPropertyClick","copiedFormData","unset","getAvailableKey","preferredKey","_getUiOptions$duplica","duplicateKeySuffixSeparator","newKey","onKeyChange","oldValue","_newKeys","_extends4","newKeys","keyValues","renamedObj","handleAddClick","apSchema","REF_KEY","$ref","ANY_OF_KEY","ONE_OF_KEY","getDefaultValue","isRequired","indexOf","NewStringDefault","_uiOptions$title","_uiOptions$descriptio","rawSchema","_this$props6$uiSchema","_this$props6$required","_this$props6$disabled","_this$props6$readonly","_schema$properties","properties","schemaProperties","description","orderedProperties","orderProperties","order","err","style","color","Markdown","InvalidObjectField","message","JSON","stringify","templateProps","PROPERTIES_KEY","ADDITIONAL_PROPERTY_FLAG","fieldUiSchema","hidden","fieldIdSchema","content","COMPONENT_TYPES","array","integer","number","object","string","getFieldComponent","field","schemaType","getSchemaType","componentName","anyOf","UnknownFieldType","SchemaFieldRender","_schema","_idSchema","_props$wasPropertyKey","FieldTemplate","DescriptionFieldTemplate","FieldHelpTemplate","FieldErrorTemplate","fieldId","ID_KEY","mergeObjects","handleFieldComponentChange","theId","FieldComponent","Boolean","readOnly","uiSchemaHideError","__errors","UI_OPTIONS_KEY","help","classNames","console","warn","helpComponent","hasErrors","errorsComponent","errors","fieldProps","descriptionId","rawDescription","rawHelp","join","trim","_AnyOfField","_OneOfField","OneOfField","isReplacingAnyOrOneOf","_Fragment","isSelect","shouldComponentUpdate","_props$disabled","_props$readonly","_props$autofocus","format","defaultWidget","hasWidget","_getUiOptions$placeho","NullField","useEffect","MultiSchemaField","ArrayFieldDescriptionTemplate","_options$label","ArrayFieldItemTemplate","_registry$templates$B","templates","ButtonTemplates","CopyButton","MoveDownButton","MoveUpButton","RemoveButton","btnStyle","flex","paddingLeft","paddingRight","fontWeight","display","justifyContent","onClick","ArrayFieldTemplate","ArrayFieldTitleTemplate","AddButton","itemProps","TitleFieldTemplate","titleId","BaseInputTemplate","onChangeOverride","rest","log","Error","inputProps","getInputProps","inputValue","_onChange","target","emptyValue","_onBlur","_onFocus","autoFocus","list","examples","examplesId","ariaDescribedByIds","example","SubmitButton","_getSubmitButtonOptio","getSubmitButtonOptions","submitText","norender","_getSubmitButtonOptio2","submitButtonProps","IconButton","_props$iconType","iconType","icon","otherProps","buttonTemplates","DescriptionField","ErrorList","ErrorsLabel","error","stack","REQUIRED_FIELD_SYMBOL","Label","htmlFor","WrapIfAdditionalTemplate","_props$errors","errorId","elem","helpId","ObjectFieldTemplate","prop","canExpand","TitleField","UnsupportedField","UnsupportedFieldWithId","UnsupportedFieldWithReason","UnsupportedFieldWithIdAndReason","keyLabel","KeyLabel","defaultValue","border","ErrorListTemplate","rangeOptions","start","stop","pad","readyForChange","values","dateElementProps","time","yearsRange","Date","getFullYear","year","month","day","hour","minute","second","data","range","DateElement","select","rootId","SelectWidget","AltDateWidget","_ref2$time","_ref2$disabled","_ref2$readonly","_ref2$autofocus","_useReducer","useReducer","action","parseDateString","stateValue","toDateString","property","_setState","handleSetNow","nextState","toJSON","handleClear","elemProps","hideNowButton","href","NowLabel","hideClearButton","ClearLabel","AltDateTimeWidget","_ref$time","CheckboxWidget","_options$description","_ref$autofocus","schemaRequiresTrueValue","checked","handleBlur","handleFocus","labelValue","CheckboxesWidget","_ref$options","_ref$options$inline","inline","enumDisabled","checkboxesValues","enumOptionsValueForIndex","enumOptionsIsSelected","itemDisabled","disabledCls","enumOptionsSelectValue","enumOptionsDeselectValue","checkbox","optionId","ColorWidget","DateWidget","DateTimeWidget","utcToLocal","localToUTC","EmailWidget","addNameToDataURL","dataURL","encodeURIComponent","processFile","file","size","Promise","resolve","reject","reader","window","FileReader","onerror","onload","_event$target","result","readAsDataURL","processFiles","files","all","from","FileInfoPreview","fileInfo","src","maxWidth","download","PreviewLabel","FilesInfo","filesInfo","preview","extractFileInfo","dataURLs","_dataURItoBlob","dataURItoBlob","blob","FileWidget","extractedFilesInfo","useMemo","setFilesInfo","then","filesInfoEvent","newValue","accept","filePreview","HiddenWidget","PasswordWidget","RadioWidget","Math","random","toString","radio","RangeWidget","getValue","selected","_ref$multiple","optEmptyVal","selectedIndexes","enumOptionsIndexForValue","TextareaWidget","_ref4","rows","defaultProps","TextWidget","TimeWidget","URLWidget","UpDownWidget","getDefaultRegistry","rootSchema","englishStringTranslator","Form","formElement","getUsedFormData","_pick","getFieldNames","pathSchema","getAllPaths","_obj","acc","paths","forEach","newPaths","path","RJSF_ADDITONAL_PROPERTIES_FLAG","NAME_KEY","formValue","_get","_isEmpty","extraErrors","omitExtraData","liveOmit","noValidate","liveValidate","getStateFromProps","mustValidate","retrievedSchema","toPathSchema","fieldNames","schemaValidation","validate","schemaValidationErrors","schemaValidationErrorSchema","merged","mergeValidationData","getValidator","toErrorList","reset","onSubmit","persist","validateForm","status","validator","createRef","UNSAFE_componentWillReceiveProps","inputFormData","edit","doesSchemaUtilsDiffer","createSchemaUtils","getCurrentErrors","currentErrors","shouldRender","altSchemaUtils","customValidate","transformErrors","resolvedSchema","validateFormData","renderErrors","_this$state3","getRegistry","_this$props$templates","customTranslateString","_this$props4$uiSchema","_getDefaultRegistry","UI_GLOBAL_OPTIONS_KEY","submit","current","dispatchEvent","CustomEvent","cancelable","requestSubmit","focusOnError","_this$props5$idPrefix","_this$props5$idSepara","_toPath","unshift","elementId","elements","querySelector","focus","focusOnFirstError","onError","_this$props7$classNam","tagName","method","autoComplete","enctype","acceptcharset","_this$props7$noHtml5V","noHtml5Validate","_this$props7$disabled","_this$props7$readonly","_this$props7$showErro","showErrorList","_internalFormWrapper","_this$state4","as","FormTag","encType","acceptCharset","ref","withTheme","themeProps","forwardRef","_themeProps$templates","_templates","directProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAqCA;EACA,SAASA,aAAaA,GAAA;EACpB,EAAA,OAAOC,aAAM,EAAE,CAAA;EACjB,CAAA;EAEA;;;;EAIG;EACH,SAASC,qBAAqBA,CAAIC,QAAa,EAAA;EAC7C,EAAA,OAAO,CAACC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,GAC3B,EAAE,GACFA,QAAQ,CAACG,GAAG,CAAC,UAACC,IAAI,EAAI;MACpB,OAAO;QACLC,GAAG,EAAER,aAAa,EAAE;EACpBO,MAAAA,IAAI,EAAJA,IAAAA;OACD,CAAA;EACH,GAAC,CAAC,CAAA;EACR,CAAA;EAEA;;;;EAIG;EACH,SAASE,oBAAoBA,CAAIC,aAA4D,EAAA;EAC3F,EAAA,IAAIN,KAAK,CAACC,OAAO,CAACK,aAAa,CAAC,EAAE;EAChC,IAAA,OAAOA,aAAa,CAACJ,GAAG,CAAC,UAACK,SAAS,EAAA;QAAA,OAAKA,SAAS,CAACJ,IAAI,CAAA;OAAC,CAAA,CAAA;EACxD,GAAA;EACD,EAAA,OAAO,EAAE,CAAA;EACX,CAAA;EAEA;;EAEG;EAFH,IAGMK,UAA8F,0BAAAC,UAAA,EAAA;IAAAC,cAAA,CAAAF,UAAA,EAAAC,UAAA,CAAA,CAAA;EAIlG;;;EAGG;IACH,SAAAD,UAAAA,CAAYG,KAA4B,EAAA;EAAA,IAAA,IAAAC,KAAA,CAAA;EACtCA,IAAAA,KAAA,GAAAH,UAAA,CAAAI,IAAA,CAAA,IAAA,EAAMF,KAAK,CAAC,IAAA,IAAA,CAAA;MAACC,KAAA,CA+FfE,kBAAkB,GAAG,YAAQ;EAC3B,MAAA,IAAAC,WAAA,GAA6BH,KAAA,CAAKD,KAAK;UAA/BK,MAAM,GAAAD,WAAA,CAANC,MAAM;UAAEC,QAAQ,GAAAF,WAAA,CAARE,QAAQ,CAAA;EACxB,MAAA,IAAQC,WAAW,GAAKD,QAAQ,CAAxBC,WAAW,CAAA;EACnB,MAAA,IAAIC,UAAU,GAAGH,MAAM,CAACI,KAAU,CAAA;QAClC,IAAIC,kBAAY,CAACL,MAAM,CAAC,IAAIM,0BAAoB,CAACN,MAAM,CAAC,EAAE;UACxDG,UAAU,GAAGH,MAAM,CAACO,eAAoB,CAAA;EACzC,OAAA;EACD;EACA,MAAA,OAAOL,WAAW,CAACM,mBAAmB,CAACL,UAAU,CAAiB,CAAA;OACnE,CAAA;EAAAP,IAAAA,KAAA,CAyCDa,UAAU,GAAG,UAACC,KAAiB,EAAI;EACjCd,MAAAA,KAAA,CAAKe,eAAe,CAACD,KAAK,CAAC,CAAA;OAC5B,CAAA;EAAAd,IAAAA,KAAA,CAQDgB,eAAe,GAAG,UAACC,KAAa,EAAI;QAClC,OAAO,UAACH,KAAiB,EAAI;EAC3Bd,QAAAA,KAAA,CAAKe,eAAe,CAACD,KAAK,EAAEG,KAAK,CAAC,CAAA;SACnC,CAAA;OACF,CAAA;EAAAjB,IAAAA,KAAA,CAQDkB,gBAAgB,GAAG,UAACD,KAAa,EAAI;QACnC,OAAO,UAACH,KAAiB,EAAI;EAC3B,QAAA,IAAIA,KAAK,EAAE;YACTA,KAAK,CAACK,cAAc,EAAE,CAAA;EACvB,SAAA;EAED,QAAA,IAAQC,QAAQ,GAAKpB,KAAA,CAAKD,KAAK,CAAvBqB,QAAQ,CAAA;EAChB,QAAA,IAAQ1B,aAAa,GAAKM,KAAA,CAAKqB,KAAK,CAA5B3B,aAAa,CAAA;EACrB,QAAA,IAAM4B,mBAAmB,GAAyB;YAChD9B,GAAG,EAAER,aAAa,EAAE;YACpBO,IAAI,EAAEgC,6BAAS,CAAC7B,aAAa,CAACuB,KAAK,CAAC,CAAC1B,IAAI,CAAA;WAC1C,CAAA;EACD,QAAA,IAAMiC,gBAAgB,GAAA,EAAA,CAAAC,MAAA,CAAO/B,aAAa,CAAC,CAAA;UAC3C,IAAIuB,KAAK,KAAKS,SAAS,EAAE;YACvBF,gBAAgB,CAACG,MAAM,CAACV,KAAK,GAAG,CAAC,EAAE,CAAC,EAAEK,mBAAmB,CAAC,CAAA;EAC3D,SAAA,MAAM;EACLE,UAAAA,gBAAgB,CAACI,IAAI,CAACN,mBAAmB,CAAC,CAAA;EAC3C,SAAA;UACDtB,KAAA,CAAK6B,QAAQ,CACX;EACEnC,UAAAA,aAAa,EAAE8B,gBAAgB;EAC/BM,UAAAA,oBAAoB,EAAE,IAAA;WACvB,EACD,YAAA;EAAA,UAAA,OAAMV,QAAQ,CAAC3B,oBAAoB,CAAC+B,gBAAgB,CAAC,CAAC,CAAA;WACvD,CAAA,CAAA;SACF,CAAA;OACF,CAAA;EAAAxB,IAAAA,KAAA,CAQD+B,gBAAgB,GAAG,UAACd,KAAa,EAAI;QACnC,OAAO,UAACH,KAAiB,EAAI;EAC3B,QAAA,IAAIA,KAAK,EAAE;YACTA,KAAK,CAACK,cAAc,EAAE,CAAA;EACvB,SAAA;EACD,QAAA,IAAAa,YAAA,GAAkChC,KAAA,CAAKD,KAAK;YAApCqB,QAAQ,GAAAY,YAAA,CAARZ,QAAQ;YAAEa,WAAW,GAAAD,YAAA,CAAXC,WAAW,CAAA;EAC7B,QAAA,IAAQvC,aAAa,GAAKM,KAAA,CAAKqB,KAAK,CAA5B3B,aAAa,CAAA;EACrB;EACA,QAAA,IAAIwC,cAA8B,CAAA;EAClC,QAAA,IAAID,WAAW,EAAE;YACfC,cAAc,GAAG,EAAE,CAAA;EACnB,UAAA,KAAK,IAAMC,GAAG,IAAIF,WAAW,EAAE;EAC7B,YAAA,IAAMG,CAAC,GAAGC,QAAQ,CAACF,GAAG,CAAC,CAAA;cACvB,IAAIC,CAAC,GAAGnB,KAAK,EAAE;gBACbqB,uBAAG,CAACJ,cAAc,EAAE,CAACE,CAAC,CAAC,EAAEH,WAAW,CAACE,GAAG,CAAC,CAAC,CAAA;EAC3C,aAAA,MAAM,IAAIC,CAAC,GAAGnB,KAAK,EAAE;EACpBqB,cAAAA,uBAAG,CAACJ,cAAc,EAAE,CAACE,CAAC,GAAG,CAAC,CAAC,EAAEH,WAAW,CAACE,GAAG,CAAC,CAAC,CAAA;EAC/C,aAAA;EACF,WAAA;EACF,SAAA;UACD,IAAMX,gBAAgB,GAAG9B,aAAa,CAAC6C,MAAM,CAAC,UAACC,CAAC,EAAEJ,CAAC,EAAA;YAAA,OAAKA,CAAC,KAAKnB,KAAK,CAAA;WAAC,CAAA,CAAA;UACpEjB,KAAA,CAAK6B,QAAQ,CACX;EACEnC,UAAAA,aAAa,EAAE8B,gBAAgB;EAC/BM,UAAAA,oBAAoB,EAAE,IAAA;EACvB,SAAA,EACD,YAAA;YAAA,OAAMV,QAAQ,CAAC3B,oBAAoB,CAAC+B,gBAAgB,CAAC,EAAEU,cAAkC,CAAC,CAAA;WAC3F,CAAA,CAAA;SACF,CAAA;OACF,CAAA;EAAAlC,IAAAA,KAAA,CASDyC,cAAc,GAAG,UAACxB,KAAa,EAAEyB,QAAgB,EAAI;QACnD,OAAO,UAAC5B,KAAoC,EAAI;EAC9C,QAAA,IAAIA,KAAK,EAAE;YACTA,KAAK,CAACK,cAAc,EAAE,CAAA;EACtBL,UAAAA,KAAK,CAAC6B,aAAa,CAACC,IAAI,EAAE,CAAA;EAC3B,SAAA;EACD,QAAA,IAAAC,YAAA,GAAkC7C,KAAA,CAAKD,KAAK;YAApCqB,QAAQ,GAAAyB,YAAA,CAARzB,QAAQ;YAAEa,WAAW,GAAAY,YAAA,CAAXZ,WAAW,CAAA;EAC7B,QAAA,IAAIC,cAA8B,CAAA;EAClC,QAAA,IAAID,WAAW,EAAE;YACfC,cAAc,GAAG,EAAE,CAAA;EACnB,UAAA,KAAK,IAAMC,GAAG,IAAIF,WAAW,EAAE;EAC7B,YAAA,IAAMG,CAAC,GAAGC,QAAQ,CAACF,GAAG,CAAC,CAAA;cACvB,IAAIC,CAAC,IAAInB,KAAK,EAAE;gBACdqB,uBAAG,CAACJ,cAAc,EAAE,CAACQ,QAAQ,CAAC,EAAET,WAAW,CAAChB,KAAK,CAAC,CAAC,CAAA;EACpD,aAAA,MAAM,IAAImB,CAAC,IAAIM,QAAQ,EAAE;gBACxBJ,uBAAG,CAACJ,cAAc,EAAE,CAACjB,KAAK,CAAC,EAAEgB,WAAW,CAACS,QAAQ,CAAC,CAAC,CAAA;EACpD,aAAA,MAAM;gBACLJ,uBAAG,CAACJ,cAAc,EAAE,CAACC,GAAG,CAAC,EAAEF,WAAW,CAACG,CAAC,CAAC,CAAC,CAAA;EAC3C,aAAA;EACF,WAAA;EACF,SAAA;EAED,QAAA,IAAQ1C,aAAa,GAAKM,KAAA,CAAKqB,KAAK,CAA5B3B,aAAa,CAAA;UACrB,SAASoD,YAAYA,GAAA;EACnB;EACA,UAAA,IAAMC,iBAAiB,GAAGrD,aAAa,CAACsD,KAAK,EAAE,CAAA;EAE/C;EACAD,UAAAA,iBAAiB,CAACpB,MAAM,CAACV,KAAK,EAAE,CAAC,CAAC,CAAA;YAClC8B,iBAAiB,CAACpB,MAAM,CAACe,QAAQ,EAAE,CAAC,EAAEhD,aAAa,CAACuB,KAAK,CAAC,CAAC,CAAA;EAE3D,UAAA,OAAO8B,iBAAiB,CAAA;EAC1B,SAAA;UACA,IAAMvB,gBAAgB,GAAGsB,YAAY,EAAE,CAAA;UACvC9C,KAAA,CAAK6B,QAAQ,CACX;EACEnC,UAAAA,aAAa,EAAE8B,gBAAAA;EAChB,SAAA,EACD,YAAA;YAAA,OAAMJ,QAAQ,CAAC3B,oBAAoB,CAAC+B,gBAAgB,CAAC,EAAEU,cAAkC,CAAC,CAAA;WAC3F,CAAA,CAAA;SACF,CAAA;OACF,CAAA;EAAAlC,IAAAA,KAAA,CAODiD,gBAAgB,GAAG,UAAChC,KAAa,EAAI;EACnC,MAAA,OAAO,UAACiC,KAAU,EAAEhB,cAA+B,EAAEiB,EAAW,EAAI;EAAA,QAAA,IAAAC,SAAA,CAAA;EAClE,QAAA,IAAAC,YAAA,GAA4CrD,KAAA,CAAKD,KAAK;YAA9CZ,QAAQ,GAAAkE,YAAA,CAARlE,QAAQ;YAAEiC,QAAQ,GAAAiC,YAAA,CAARjC,QAAQ;YAAEa,WAAW,GAAAoB,YAAA,CAAXpB,WAAW,CAAA;UACvC,IAAMqB,SAAS,GAAGlE,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,GAAGA,QAAQ,GAAG,EAAE,CAAA;UACzD,IAAMoE,WAAW,GAAGD,SAAS,CAAChE,GAAG,CAAC,UAACC,IAAO,EAAE6C,CAAS,EAAI;EACvD;EACA;YACA,IAAMoB,SAAS,GAAG,OAAON,KAAK,KAAK,WAAW,GAAG,IAAI,GAAGA,KAAK,CAAA;EAC7D,UAAA,OAAOjC,KAAK,KAAKmB,CAAC,GAAGoB,SAAS,GAAGjE,IAAI,CAAA;EACvC,SAAC,CAAC,CAAA;UACF6B,QAAQ,CACNmC,WAAW,EACXtB,WAAW,IACTA,WAAW,IAAAwB,QAAA,CAAA,EAAA,EACNxB,WAAW,GAAAmB,SAAA,GAAAA,EAAAA,EAAAA,SAAA,CACbnC,KAAK,CAAGiB,GAAAA,cAAc,EAAAkB,SAAA,EACxB,EACHD,EAAE,CACH,CAAA;SACF,CAAA;OACF,CAAA;EAAAnD,IAAAA,KAAA,CAGD0D,cAAc,GAAG,UAACR,KAAU,EAAI;EAC9B,MAAA,IAAAS,YAAA,GAA+B3D,KAAA,CAAKD,KAAK;UAAjCqB,QAAQ,GAAAuC,YAAA,CAARvC,QAAQ;UAAEwC,QAAQ,GAAAD,YAAA,CAARC,QAAQ,CAAA;QAC1BxC,QAAQ,CAAC8B,KAAK,EAAExB,SAAS,EAAEkC,QAAQ,IAAIA,QAAQ,CAACC,GAAG,CAAC,CAAA;OACrD,CAAA;EAxTC,IAAA,IAAAC,eAAA,GAA0B/D,KAAK,CAAvBZ,QAAQ;EAARA,MAAAA,SAAQ,GAAA2E,eAAA,KAAG,KAAA,CAAA,GAAA,EAAE,GAAAA,eAAA,CAAA;EACrB,IAAA,IAAMpE,cAAa,GAAGR,qBAAqB,CAAIC,SAAQ,CAAC,CAAA;MACxDa,KAAA,CAAKqB,KAAK,GAAG;EACX3B,MAAAA,aAAa,EAAbA,cAAa;EACboC,MAAAA,oBAAoB,EAAE,KAAA;OACvB,CAAA;EAAC,IAAA,OAAA9B,KAAA,CAAA;EACJ,GAAA;EAEA;;;;;EAKG;IALHJ,UAAA,CAMOmE,wBAAwB,GAA/B,SAAAA,yBACEC,SAA0C,EAC1CC,SAAuC,EAAA;EAEvC;MACA,IAAIA,SAAS,CAACnC,oBAAoB,EAAE;QAClC,OAAO;EACLA,QAAAA,oBAAoB,EAAE,KAAA;SACvB,CAAA;EACF,KAAA;EACD,IAAA,IAAMoC,YAAY,GAAG9E,KAAK,CAACC,OAAO,CAAC2E,SAAS,CAAC7E,QAAQ,CAAC,GAAG6E,SAAS,CAAC7E,QAAQ,GAAG,EAAE,CAAA;EAChF,IAAA,IAAMgF,qBAAqB,GAAGF,SAAS,CAACvE,aAAa,IAAI,EAAE,CAAA;EAC3D,IAAA,IAAM8B,gBAAgB,GACpB0C,YAAY,CAACE,MAAM,KAAKD,qBAAqB,CAACC,MAAM,GAChDD,qBAAqB,CAAC7E,GAAG,CAAC,UAAC+E,sBAAsB,EAAEpD,KAAK,EAAI;QAC1D,OAAO;UACLzB,GAAG,EAAE6E,sBAAsB,CAAC7E,GAAG;UAC/BD,IAAI,EAAE2E,YAAY,CAACjD,KAAK,CAAA;SACzB,CAAA;EACH,KAAC,CAAC,GACF/B,qBAAqB,CAAIgF,YAAY,CAAC,CAAA;MAC5C,OAAO;EACLxE,MAAAA,aAAa,EAAE8B,gBAAAA;OAChB,CAAA;EACH,GAAA;EAEA;;EAEG,MAFH;EAAA,EAAA,IAAA8C,MAAA,GAAA1E,UAAA,CAAA2E,SAAA,CAAA;EAaA;;;;;EAKG;EALHD,EAAAA,MAAA,CAMAE,cAAc,GAAd,SAAAA,cAAAA,CAAejE,UAAa,EAAA;MAC1B,IAAInB,KAAK,CAACC,OAAO,CAACkB,UAAU,CAACkE,IAAI,CAAC,EAAE;EAClC;EACA;QACA,OAAO,CAAClE,UAAU,CAACkE,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,CAAA;EACzC,KAAA;EACD;EACA,IAAA,OAAOnE,UAAU,CAACkE,IAAI,KAAK,MAAM,CAAA;EACnC,GAAA;EAEA;;;;;;EAMG,MANH;EAAAH,EAAAA,MAAA,CAOAK,UAAU,GAAV,SAAAA,UAAAA,CAAWC,SAAgB,EAAA;EACzB,IAAA,IAAAC,YAAA,GAAuC,IAAI,CAAC9E,KAAK;QAAzCK,MAAM,GAAAyE,YAAA,CAANzE,MAAM;QAAE0E,QAAQ,GAAAD,YAAA,CAARC,QAAQ;QAAEzE,QAAQ,GAAAwE,YAAA,CAARxE,QAAQ,CAAA;MAClC,IAAA0E,aAAA,GAAkBC,kBAAY,CAAYF,QAAQ,EAAEzE,QAAQ,CAAC4E,eAAe,CAAC;QAAvEC,OAAO,GAAAH,aAAA,CAAPG,OAAO,CAAA;MACb,IAAIA,OAAO,KAAK,KAAK,EAAE;EACrB;EACA;EACA,MAAA,IAAI9E,MAAM,CAAC+E,QAAQ,KAAKzD,SAAS,EAAE;EACjCwD,QAAAA,OAAO,GAAGN,SAAS,CAACR,MAAM,GAAGhE,MAAM,CAAC+E,QAAQ,CAAA;EAC7C,OAAA,MAAM;EACLD,QAAAA,OAAO,GAAG,IAAI,CAAA;EACf,OAAA;EACF,KAAA;EACD,IAAA,OAAOA,OAAO,CAAA;EAChB,GAAA;EAEA;;EAEG,MAFH;EAcA;;;;;;EAMG;IANHZ,MAAA,CAOAvD,eAAe,GAAf,SAAAA,gBAAgBD,KAAiB,EAAEG,KAAc,EAAA;EAC/C,IAAA,IAAIH,KAAK,EAAE;QACTA,KAAK,CAACK,cAAc,EAAE,CAAA;EACvB,KAAA;EAED,IAAA,IAAQC,QAAQ,GAAK,IAAI,CAACrB,KAAK,CAAvBqB,QAAQ,CAAA;EAChB,IAAA,IAAQ1B,aAAa,GAAK,IAAI,CAAC2B,KAAK,CAA5B3B,aAAa,CAAA;EACrB,IAAA,IAAM4B,mBAAmB,GAAyB;QAChD9B,GAAG,EAAER,aAAa,EAAE;QACpBO,IAAI,EAAE,IAAI,CAACW,kBAAkB,EAAA;OAC9B,CAAA;EACD,IAAA,IAAMsB,gBAAgB,GAAA,EAAA,CAAAC,MAAA,CAAO/B,aAAa,CAAC,CAAA;MAC3C,IAAIuB,KAAK,KAAKS,SAAS,EAAE;QACvBF,gBAAgB,CAACG,MAAM,CAACV,KAAK,EAAE,CAAC,EAAEK,mBAAmB,CAAC,CAAA;EACvD,KAAA,MAAM;EACLE,MAAAA,gBAAgB,CAACI,IAAI,CAACN,mBAAmB,CAAC,CAAA;EAC3C,KAAA;MACD,IAAI,CAACO,QAAQ,CACX;EACEnC,MAAAA,aAAa,EAAE8B,gBAAgB;EAC/BM,MAAAA,oBAAoB,EAAE,IAAA;OACvB,EACD,YAAA;EAAA,MAAA,OAAMV,QAAQ,CAAC3B,oBAAoB,CAAC+B,gBAAgB,CAAC,CAAC,CAAA;OACvD,CAAA,CAAA;EACH,GAAA;EAEA;;;;;EAKG,MALH;EAgLA;EACG;EADH8C,EAAAA,MAAA,CAEAc,MAAM,GAAN,SAAAA,SAAM;EACJ,IAAA,IAAAC,YAAA,GAAiD,IAAI,CAACtF,KAAK;QAAnDK,MAAM,GAAAiF,YAAA,CAANjF,MAAM;QAAE0E,QAAQ,GAAAO,YAAA,CAARP,QAAQ;QAAElB,QAAQ,GAAAyB,YAAA,CAARzB,QAAQ;QAAEvD,QAAQ,GAAAgF,YAAA,CAARhF,QAAQ,CAAA;EAC5C,IAAA,IAAQC,WAAW,GAAsBD,QAAQ,CAAzCC,WAAW;QAAEgF,eAAe,GAAKjF,QAAQ,CAA5BiF,eAAe,CAAA;EACpC,IAAA,IAAI,EAAEC,eAAS,IAAInF,MAAM,CAAC,EAAE;EAC1B,MAAA,IAAMoF,SAAS,GAAGR,kBAAY,CAAYF,QAAQ,CAAC,CAAA;QACnD,IAAMW,wBAAwB,GAAGC,iBAAW,CAC1C,0BAA0B,EAC1BrF,QAAQ,EACRmF,SAAS,CACV,CAAA;QAED,OACEG,cAAC,CAAAF,wBAAwB,EACvB;EAAArF,QAAAA,MAAM,EAAEA,MAAM;EACdwD,QAAAA,QAAQ,EAAEA,QAAQ;EAClBgC,QAAAA,MAAM,EAAEN,eAAe,CAACO,wBAAkB,CAACC,YAAY,CAAC;EACxDzF,QAAAA,QAAQ,EAAEA,QAAAA;EACV,OAAA,CAAA,CAAA;EAEL,KAAA;EACD,IAAA,IAAIC,WAAW,CAACyF,aAAa,CAAC3F,MAAM,CAAC,EAAE;EACrC;QACA,OAAO,IAAI,CAAC4F,iBAAiB,EAAE,CAAA;EAChC,KAAA;EACD,IAAA,IAAIC,oBAAc,CAAYnB,QAAQ,CAAC,EAAE;QACvC,OAAO,IAAI,CAACoB,kBAAkB,EAAE,CAAA;EACjC,KAAA;EACD,IAAA,IAAIzF,kBAAY,CAACL,MAAM,CAAC,EAAE;QACxB,OAAO,IAAI,CAAC+F,gBAAgB,EAAE,CAAA;EAC/B,KAAA;MACD,IAAI7F,WAAW,CAAC8F,YAAY,CAAChG,MAAM,EAAE0E,QAAQ,CAAC,EAAE;QAC9C,OAAO,IAAI,CAACuB,WAAW,EAAE,CAAA;EAC1B,KAAA;MACD,OAAO,IAAI,CAACC,iBAAiB,EAAE,CAAA;EACjC,GAAA;EAEA;EACG,MADH;EAAAhC,EAAAA,MAAA,CAEAgC,iBAAiB,GAAjB,SAAAA,oBAAiB;EAAA,IAAA,IAAAC,MAAA,GAAA,IAAA,CAAA;EACf,IAAA,IAAAC,YAAA,GAgBI,IAAI,CAACzG,KAAK;QAfZK,MAAM,GAAAoG,YAAA,CAANpG,MAAM;QAAAqG,qBAAA,GAAAD,YAAA,CACN1B,QAAQ;EAARA,MAAAA,QAAQ,GAAA2B,qBAAA,KAAA,KAAA,CAAA,GAAG,EAAE,GAAAA,qBAAA;QACbxE,WAAW,GAAAuE,YAAA,CAAXvE,WAAW;QACX2B,QAAQ,GAAA4C,YAAA,CAAR5C,QAAQ;QACR8C,IAAI,GAAAF,YAAA,CAAJE,IAAI;QAAAC,qBAAA,GAAAH,YAAA,CACJI,QAAQ;EAARA,MAAAA,QAAQ,GAAAD,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAE,qBAAA,GAAAL,YAAA,CAChBM,QAAQ;EAARA,MAAAA,QAAQ,GAAAD,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAE,qBAAA,GAAAP,YAAA,CAChBQ,SAAS;EAATA,MAAAA,SAAS,GAAAD,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAE,qBAAA,GAAAT,YAAA,CACjBU,QAAQ;EAARA,MAAAA,QAAQ,GAAAD,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAChB5G,QAAQ,GAAAmG,YAAA,CAARnG,QAAQ;QACR8G,MAAM,GAAAX,YAAA,CAANW,MAAM;QACNC,OAAO,GAAAZ,YAAA,CAAPY,OAAO;QACPC,QAAQ,GAAAb,YAAA,CAARa,QAAQ;QAAAC,qBAAA,GAAAd,YAAA,CACRe,WAAW;EAAXA,MAAAA,WAAW,GAAAD,qBAAA,KAAG,KAAA,CAAA,GAAA,GAAG,GAAAA,qBAAA;QACjBE,SAAS,GAAAhB,YAAA,CAATgB,SAAS,CAAA;EAEX,IAAA,IAAQ9H,aAAa,GAAK,IAAI,CAAC2B,KAAK,CAA5B3B,aAAa,CAAA;EACrB,IAAA,IAAM+H,KAAK,GAAGrH,MAAM,CAACqH,KAAK,KAAK/F,SAAS,GAAGgF,IAAI,GAAGtG,MAAM,CAACqH,KAAK,CAAA;EAC9D,IAAA,IAAQnH,WAAW,GAAkBD,QAAQ,CAArCC,WAAW;QAAEoH,WAAW,GAAKrH,QAAQ,CAAxBqH,WAAW,CAAA;EAChC,IAAA,IAAMlC,SAAS,GAAGR,kBAAY,CAAYF,QAAQ,CAAC,CAAA;EACnD,IAAA,IAAM6C,YAAY,GAAMC,4BAAQ,CAACxH,MAAM,CAACI,KAAK,CAAC,GAAIJ,MAAM,CAACI,KAAW,GAAI,EAAQ,CAAA;EAChF,IAAA,IAAMqH,WAAW,GAAMvH,WAAW,CAACwH,cAAc,CAACH,YAAY,CAAC,CAAA;MAC/D,IAAMxI,QAAQ,GAAGM,oBAAoB,CAAC,IAAI,CAAC4B,KAAK,CAAC3B,aAAa,CAAC,CAAA;EAC/D,IAAA,IAAMqI,MAAM,GAAG,IAAI,CAACpD,UAAU,CAACxF,QAAQ,CAAC,CAAA;EACxC,IAAA,IAAM6I,UAAU,GAAuC;EACrDD,MAAAA,MAAM,EAANA,MAAM;QACNvH,KAAK,EAAEd,aAAa,CAACJ,GAAG,CAAC,UAACK,SAAS,EAAEsB,KAAK,EAAI;EAC5C,QAAA,IAAQzB,GAAG,GAAWG,SAAS,CAAvBH,GAAG;YAAED,IAAI,GAAKI,SAAS,CAAlBJ,IAAI,CAAA;EACjB;UACA,IAAM0I,QAAQ,GAAG1I,IAAsB,CAAA;UACvC,IAAMgB,UAAU,GAAGD,WAAW,CAACwH,cAAc,CAACH,YAAY,EAAEM,QAAQ,CAAC,CAAA;UACrE,IAAMC,eAAe,GAAGjG,WAAW,GAAIA,WAAW,CAAChB,KAAK,CAAsB,GAAGS,SAAS,CAAA;UAC1F,IAAMyG,YAAY,GAAGvE,QAAQ,CAACC,GAAG,GAAG0D,WAAW,GAAGtG,KAAK,CAAA;EACvD,QAAA,IAAMmH,YAAY,GAAG9H,WAAW,CAAC+H,UAAU,CAAC9H,UAAU,EAAE4H,YAAY,EAAEF,QAAQ,EAAEZ,QAAQ,EAAEE,WAAW,CAAC,CAAA;UACtG,OAAOhB,MAAI,CAAC+B,oBAAoB,CAAC;EAC/B9I,UAAAA,GAAG,EAAHA,GAAG;EACHyB,UAAAA,KAAK,EAALA,KAAK;EACLyF,UAAAA,IAAI,EAAEA,IAAI,IAAOA,IAAI,SAAIzF,KAAO;EAChC8G,UAAAA,MAAM,EAANA,MAAM;YACNQ,SAAS,EAAEtH,KAAK,GAAG,CAAC;EACpBuH,UAAAA,WAAW,EAAEvH,KAAK,GAAG9B,QAAQ,CAACiF,MAAM,GAAG,CAAC;EACxC7D,UAAAA,UAAU,EAAVA,UAAU;EACV6H,UAAAA,YAAY,EAAZA,YAAY;EACZF,UAAAA,eAAe,EAAfA,eAAe;EACfO,UAAAA,QAAQ,EAAER,QAAQ;YAClBS,YAAY,EAAE5D,QAAQ,CAACtE,KAAK;EAC5BwG,UAAAA,SAAS,EAAEA,SAAS,IAAI/F,KAAK,KAAK,CAAC;EACnCkG,UAAAA,MAAM,EAANA,MAAM;EACNC,UAAAA,OAAO,EAAPA,OAAO;EACPI,UAAAA,SAAS,EAATA,SAAS;YACTmB,UAAU,EAAEjJ,aAAa,CAAC0E,MAAAA;EAC3B,SAAA,CAAC,CAAA;EACJ,OAAC,CAAC;QACFwE,SAAS,EAAA,mCAAA,GAAsCf,WAAW,CAACpD,IAAM;EACjEmC,MAAAA,QAAQ,EAARA,QAAQ;EACRhD,MAAAA,QAAQ,EAARA,QAAQ;EACRkB,MAAAA,QAAQ,EAARA,QAAQ;QACRjE,UAAU,EAAE,IAAI,CAACA,UAAU;EAC3BiG,MAAAA,QAAQ,EAARA,QAAQ;EACRI,MAAAA,QAAQ,EAARA,QAAQ;EACR9G,MAAAA,MAAM,EAANA,MAAM;EACNqH,MAAAA,KAAK,EAALA,KAAK;EACLC,MAAAA,WAAW,EAAXA,WAAW;EACXvI,MAAAA,QAAQ,EAARA,QAAQ;EACRqI,MAAAA,SAAS,EAATA,SAAS;EACTnH,MAAAA,QAAQ,EAARA,QAAAA;OACD,CAAA;MAED,IAAMwI,QAAQ,GAAGnD,iBAAW,CAAkC,oBAAoB,EAAErF,QAAQ,EAAEmF,SAAS,CAAC,CAAA;EACxG,IAAA,OAAOG,cAAC,CAAAkD,QAAQ,EAAApF,QAAA,CAAA,EAAA,EAAKuE,UAAU,CAAI,CAAA,CAAA;EACrC,GAAA;EAEA;EACG,MADH;EAAA1D,EAAAA,MAAA,CAEA4B,kBAAkB,GAAlB,SAAAA,qBAAkB;EAAA,IAAA,IAAA4C,IAAA,CAAA;EAChB,IAAA,IAAAC,YAAA,GAgBI,IAAI,CAAChJ,KAAK;QAfZK,MAAM,GAAA2I,YAAA,CAAN3I,MAAM;QACNwD,QAAQ,GAAAmF,YAAA,CAARnF,QAAQ;QACRkB,QAAQ,GAAAiE,YAAA,CAARjE,QAAQ;QAAAkE,qBAAA,GAAAD,YAAA,CACRnC,QAAQ;EAARA,MAAAA,QAAQ,GAAAoC,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAC,qBAAA,GAAAF,YAAA,CAChBjC,QAAQ;EAARA,MAAAA,QAAQ,GAAAmC,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAC,qBAAA,GAAAH,YAAA,CAChB/B,SAAS;EAATA,MAAAA,SAAS,GAAAkC,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAC,qBAAA,GAAAJ,YAAA,CACjB7B,QAAQ;EAARA,MAAAA,QAAQ,GAAAiC,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAChBC,SAAS,GAAAL,YAAA,CAATK,SAAS;QACTC,WAAW,GAAAN,YAAA,CAAXM,WAAW;QACXlC,MAAM,GAAA4B,YAAA,CAAN5B,MAAM;QACNC,OAAO,GAAA2B,YAAA,CAAP3B,OAAO;QAAAkC,qBAAA,GAAAP,YAAA,CACP5J,QAAQ;EAAEqB,MAAAA,KAAK,GAAA8I,qBAAA,KAAG,KAAA,CAAA,GAAA,EAAE,GAAAA,qBAAA;QACpBjJ,QAAQ,GAAA0I,YAAA,CAAR1I,QAAQ;QACRmH,SAAS,GAAAuB,YAAA,CAATvB,SAAS;QACTd,IAAI,GAAAqC,YAAA,CAAJrC,IAAI,CAAA;EAEN,IAAA,IAAQ6C,OAAO,GAAgDlJ,QAAQ,CAA/DkJ,OAAO;QAAE7B,WAAW,GAAmCrH,QAAQ,CAAtDqH,WAAW;QAAEzC,eAAe,GAAkB5E,QAAQ,CAAzC4E,eAAe;QAAE3E,WAAW,GAAKD,QAAQ,CAAxBC,WAAW,CAAA;EAC1D,IAAA,IAAAkJ,cAAA,GAA+CxE,kBAAY,CAAYF,QAAQ,EAAEG,eAAe,CAAC;QAAzFwE,MAAM,GAAAD,cAAA,CAANC,MAAM;QAASC,OAAO,GAAAF,cAAA,CAAd/B,KAAK;EAAckC,MAAAA,OAAO,GAAAC,6BAAA,CAAAJ,cAAA,EAAAK,WAAA,CAAA,CAAA;MAC1C,IAAMC,MAAM,GAAGC,eAAS,CAAY3J,MAAM,EAAEqJ,MAAM,EAAEF,OAAO,CAAC,CAAA;EAC5D,IAAA,IAAMS,KAAK,GAAA,CAAAlB,IAAA,GAAGY,OAAO,IAAPA,IAAAA,GAAAA,OAAO,GAAItJ,MAAM,CAACqH,KAAK,KAAAqB,IAAAA,GAAAA,IAAA,GAAIpC,IAAI,CAAA;MAC7C,IAAMuD,YAAY,GAAG3J,WAAW,CAAC4J,eAAe,CAAC9J,MAAM,EAAE0E,QAAQ,EAAEG,eAAe,CAAC,CAAA;MACnF,OACEU,eAACmE,MAAM,EAAA;QACL3G,EAAE,EAAES,QAAQ,CAACC,GAAG;EAChB6C,MAAAA,IAAI,EAAEA,IAAI;EACVyD,MAAAA,QAAQ,EAAA,IAAA;QACR/I,QAAQ,EAAE,IAAI,CAACsC,cAAc;EAC7ByD,MAAAA,MAAM,EAAEA,MAAM;EACdC,MAAAA,OAAO,EAAEA,OAAO;EAChBuC,MAAAA,OAAO,EAAEA,OAAO;EAChBvJ,MAAAA,MAAM,EAAEA,MAAM;EACd0E,MAAAA,QAAQ,EAAEA,QAAQ;EAClBzE,MAAAA,QAAQ,EAAEA,QAAQ;EAClB6C,MAAAA,KAAK,EAAE1C,KAAK;EACZoG,MAAAA,QAAQ,EAAEA,QAAQ;EAClBE,MAAAA,QAAQ,EAAEA,QAAQ;EAClBsC,MAAAA,SAAS,EAAEA,SAAS;EACpBlC,MAAAA,QAAQ,EAAEA,QAAQ;EAClB8C,MAAAA,KAAK,EAAEA,KAAK;QACZI,SAAS,EAAE,CAACH,YAAY;EACxBZ,MAAAA,WAAW,EAAEA,WAAW;EACxB3B,MAAAA,WAAW,EAAEA,WAAW;EACxBV,MAAAA,SAAS,EAAEA,SAAS;EACpBQ,MAAAA,SAAS,EAAEA,SAAAA;EAAS,KAAA,CACpB,CAAA;EAEN,GAAA;EAEA;EACG,MADH;EAAAlD,EAAAA,MAAA,CAEA0B,iBAAiB,GAAjB,SAAAA,oBAAiB;EAAA,IAAA,IAAAqE,KAAA,CAAA;EACf,IAAA,IAAAC,aAAA,GAeI,IAAI,CAACvK,KAAK;QAdZK,MAAM,GAAAkK,aAAA,CAANlK,MAAM;QACNwD,QAAQ,GAAA0G,aAAA,CAAR1G,QAAQ;QACRkB,QAAQ,GAAAwF,aAAA,CAARxF,QAAQ;QAAAyF,qBAAA,GAAAD,aAAA,CACRnL,QAAQ;EAAEqB,MAAAA,KAAK,GAAA+J,qBAAA,KAAG,KAAA,CAAA,GAAA,EAAE,GAAAA,qBAAA;QAAAC,qBAAA,GAAAF,aAAA,CACpB1D,QAAQ;EAARA,MAAAA,QAAQ,GAAA4D,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAC,qBAAA,GAAAH,aAAA,CAChBxD,QAAQ;EAARA,MAAAA,QAAQ,GAAA2D,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAC,qBAAA,GAAAJ,aAAA,CAChBtD,SAAS;EAATA,MAAAA,SAAS,GAAA0D,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAC,qBAAA,GAAAL,aAAA,CACjBpD,QAAQ;EAARA,MAAAA,QAAQ,GAAAyD,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAChBtB,WAAW,GAAAiB,aAAA,CAAXjB,WAAW;QACXlC,MAAM,GAAAmD,aAAA,CAANnD,MAAM;QACNC,OAAO,GAAAkD,aAAA,CAAPlD,OAAO;QACP/G,QAAQ,GAAAiK,aAAA,CAARjK,QAAQ;QACRmH,SAAS,GAAA8C,aAAA,CAAT9C,SAAS;QACTd,IAAI,GAAA4D,aAAA,CAAJ5D,IAAI,CAAA;EAEN,IAAA,IAAQ6C,OAAO,GAAgDlJ,QAAQ,CAA/DkJ,OAAO;QAAEjJ,WAAW,GAAmCD,QAAQ,CAAtDC,WAAW;QAAEoH,WAAW,GAAsBrH,QAAQ,CAAzCqH,WAAW;QAAEzC,eAAe,GAAK5E,QAAQ,CAA5B4E,eAAe,CAAA;MAC1D,IAAM4C,WAAW,GAAGvH,WAAW,CAACwH,cAAc,CAAC1H,MAAM,CAACI,KAAU,EAAEA,KAAK,CAAC,CAAA;EACxE,IAAA,IAAMoK,WAAW,GAAGC,iBAAW,CAAChD,WAAW,CAAC,CAAA;EAC5C,IAAA,IAAAiD,cAAA,GAA0D9F,kBAAY,CAAYF,QAAQ,EAAEG,eAAe,CAAC;QAAA8F,qBAAA,GAAAD,cAAA,CAApGrB,MAAM;EAANA,MAAAA,MAAM,GAAAsB,qBAAA,KAAG,KAAA,CAAA,GAAA,QAAQ,GAAAA,qBAAA;QAASrB,OAAO,GAAAoB,cAAA,CAAdrD,KAAK;EAAckC,MAAAA,OAAO,GAAAC,6BAAA,CAAAkB,cAAA,EAAAE,UAAA,CAAA,CAAA;MACrD,IAAMlB,MAAM,GAAGC,eAAS,CAAY3J,MAAM,EAAEqJ,MAAM,EAAEF,OAAO,CAAC,CAAA;EAC5D,IAAA,IAAMS,KAAK,GAAA,CAAAK,KAAA,GAAGX,OAAO,IAAPA,IAAAA,GAAAA,OAAO,GAAItJ,MAAM,CAACqH,KAAK,KAAA4C,IAAAA,GAAAA,KAAA,GAAI3D,IAAI,CAAA;MAC7C,IAAMuD,YAAY,GAAG3J,WAAW,CAAC4J,eAAe,CAAC9J,MAAM,EAAE0E,QAAQ,EAAEG,eAAe,CAAC,CAAA;MACnF,OACEU,eAACmE,MAAM,EAAA;QACL3G,EAAE,EAAES,QAAQ,CAACC,GAAG;EAChB6C,MAAAA,IAAI,EAAEA,IAAI;EACVyD,MAAAA,QAAQ,EAAA,IAAA;QACR/I,QAAQ,EAAE,IAAI,CAACsC,cAAc;EAC7ByD,MAAAA,MAAM,EAAEA,MAAM;EACdC,MAAAA,OAAO,EAAEA,OAAO;QAChBuC,OAAO,EAAAlG,QAAA,CAAA,EAAA,EAAOkG,OAAO,EAAA;EAAEiB,QAAAA,WAAW,EAAXA,WAAAA;SAAa,CAAA;EACpCxK,MAAAA,MAAM,EAAEA,MAAM;EACd0E,MAAAA,QAAQ,EAAEA,QAAQ;EAClBzE,MAAAA,QAAQ,EAAEA,QAAQ;EAClB6C,MAAAA,KAAK,EAAE1C,KAAK;EACZoG,MAAAA,QAAQ,EAAEA,QAAQ;EAClBE,MAAAA,QAAQ,EAAEA,QAAQ;EAClBI,MAAAA,QAAQ,EAAEA,QAAQ;EAClB8C,MAAAA,KAAK,EAAEA,KAAK;QACZI,SAAS,EAAE,CAACH,YAAY;EACxBZ,MAAAA,WAAW,EAAEA,WAAW;EACxB3B,MAAAA,WAAW,EAAEA,WAAW;EACxBV,MAAAA,SAAS,EAAEA,SAAS;EACpBQ,MAAAA,SAAS,EAAEA,SAAAA;EACX,KAAA,CAAA,CAAA;EAEN,GAAA;EAEA;EACG,MADH;EAAAlD,EAAAA,MAAA,CAEA+B,WAAW,GAAX,SAAAA,cAAW;EAAA,IAAA,IAAA4E,KAAA,CAAA;EACT,IAAA,IAAAC,aAAA,GAcI,IAAI,CAACnL,KAAK;QAbZK,MAAM,GAAA8K,aAAA,CAAN9K,MAAM;QACN0E,QAAQ,GAAAoG,aAAA,CAARpG,QAAQ;QACRlB,QAAQ,GAAAsH,aAAA,CAARtH,QAAQ;QACR8C,IAAI,GAAAwE,aAAA,CAAJxE,IAAI;QAAAyE,qBAAA,GAAAD,aAAA,CACJtE,QAAQ;EAARA,MAAAA,QAAQ,GAAAuE,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAC,qBAAA,GAAAF,aAAA,CAChBpE,QAAQ;EAARA,MAAAA,QAAQ,GAAAsE,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAC,qBAAA,GAAAH,aAAA,CAChBlE,SAAS;EAATA,MAAAA,SAAS,GAAAqE,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAC,qBAAA,GAAAJ,aAAA,CACjBhE,QAAQ;EAARA,MAAAA,QAAQ,GAAAoE,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAChBnE,MAAM,GAAA+D,aAAA,CAAN/D,MAAM;QACNC,OAAO,GAAA8D,aAAA,CAAP9D,OAAO;QACP/G,QAAQ,GAAA6K,aAAA,CAAR7K,QAAQ;QAAAkL,qBAAA,GAAAL,aAAA,CACR/L,QAAQ;EAAEqB,MAAAA,KAAK,GAAA+K,qBAAA,KAAG,KAAA,CAAA,GAAA,EAAE,GAAAA,qBAAA;QACpB/D,SAAS,GAAA0D,aAAA,CAAT1D,SAAS,CAAA;EAEX,IAAA,IAAQ+B,OAAO,GAAgDlJ,QAAQ,CAA/DkJ,OAAO;QAAE7B,WAAW,GAAmCrH,QAAQ,CAAtDqH,WAAW;QAAEzC,eAAe,GAAkB5E,QAAQ,CAAzC4E,eAAe;QAAE3E,WAAW,GAAKD,QAAQ,CAAxBC,WAAW,CAAA;EAC1D,IAAA,IAAAkL,cAAA,GAAyDxG,kBAAY,CAAYF,QAAQ,EAAEG,eAAe,CAAC;QAAAwG,qBAAA,GAAAD,cAAA,CAAnG/B,MAAM;EAANA,MAAAA,MAAM,GAAAgC,qBAAA,KAAG,KAAA,CAAA,GAAA,OAAO,GAAAA,qBAAA;QAAS/B,OAAO,GAAA8B,cAAA,CAAd/D,KAAK;EAAckC,MAAAA,OAAO,GAAAC,6BAAA,CAAA4B,cAAA,EAAAE,UAAA,CAAA,CAAA;MACpD,IAAM5B,MAAM,GAAGC,eAAS,CAAY3J,MAAM,EAAEqJ,MAAM,EAAEF,OAAO,CAAC,CAAA;EAC5D,IAAA,IAAMS,KAAK,GAAA,CAAAiB,KAAA,GAAGvB,OAAO,IAAPA,IAAAA,GAAAA,OAAO,GAAItJ,MAAM,CAACqH,KAAK,KAAAwD,IAAAA,GAAAA,KAAA,GAAIvE,IAAI,CAAA;MAC7C,IAAMuD,YAAY,GAAG3J,WAAW,CAAC4J,eAAe,CAAC9J,MAAM,EAAE0E,QAAQ,EAAEG,eAAe,CAAC,CAAA;MACnF,OACEU,cAAC,CAAAmE,MAAM;EACLH,MAAAA,OAAO,EAAEA,OAAO;QAChBxG,EAAE,EAAES,QAAQ,CAACC,GAAG;EAChB6C,MAAAA,IAAI,EAAEA,IAAI;EACVyD,MAAAA,QAAQ,EAAA,IAAA;QACR/I,QAAQ,EAAE,IAAI,CAACsC,cAAc;EAC7ByD,MAAAA,MAAM,EAAEA,MAAM;EACdC,MAAAA,OAAO,EAAEA,OAAO;EAChBhH,MAAAA,MAAM,EAAEA,MAAM;EACd0E,MAAAA,QAAQ,EAAEA,QAAQ;EAClB5B,MAAAA,KAAK,EAAE1C,KAAK;EACZoG,MAAAA,QAAQ,EAAEA,QAAQ;EAClBE,MAAAA,QAAQ,EAAEA,QAAQ;EAClBI,MAAAA,QAAQ,EAAEA,QAAQ;EAClB7G,MAAAA,QAAQ,EAAEA,QAAQ;EAClBqH,MAAAA,WAAW,EAAEA,WAAW;EACxBV,MAAAA,SAAS,EAAEA,SAAS;EACpBQ,MAAAA,SAAS,EAAEA,SAAS;EACpBwC,MAAAA,KAAK,EAAEA,KAAK;EACZI,MAAAA,SAAS,EAAE,CAACH,YAAAA;EAAY,KAAA,CACxB,CAAA;EAEN,GAAA;EAEA;EACG,MADH;EAAA3F,EAAAA,MAAA,CAEA6B,gBAAgB,GAAhB,SAAAA,mBAAgB;EAAA,IAAA,IAAAwF,MAAA,GAAA,IAAA,CAAA;EACd,IAAA,IAAAC,aAAA,GAiBI,IAAI,CAAC7L,KAAK;QAhBZK,MAAM,GAAAwL,aAAA,CAANxL,MAAM;QAAAyL,qBAAA,GAAAD,aAAA,CACN9G,QAAQ;EAARA,MAAAA,QAAQ,GAAA+G,qBAAA,KAAA,KAAA,CAAA,GAAG,EAAE,GAAAA,qBAAA;QAAAC,qBAAA,GAAAF,aAAA,CACbzM,QAAQ;EAARA,MAAAA,QAAQ,GAAA2M,qBAAA,KAAG,KAAA,CAAA,GAAA,EAAE,GAAAA,qBAAA;QACb7J,WAAW,GAAA2J,aAAA,CAAX3J,WAAW;QACXoF,QAAQ,GAAAuE,aAAA,CAARvE,QAAQ;QAAA0E,qBAAA,GAAAH,aAAA,CACRrE,WAAW;EAAXA,MAAAA,WAAW,GAAAwE,qBAAA,KAAG,KAAA,CAAA,GAAA,GAAG,GAAAA,qBAAA;QACjBnI,QAAQ,GAAAgI,aAAA,CAARhI,QAAQ;QACR8C,IAAI,GAAAkF,aAAA,CAAJlF,IAAI;QAAAsF,qBAAA,GAAAJ,aAAA,CACJhF,QAAQ;EAARA,MAAAA,QAAQ,GAAAoF,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAC,qBAAA,GAAAL,aAAA,CAChB9E,QAAQ;EAARA,MAAAA,QAAQ,GAAAmF,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAC,qBAAA,GAAAN,aAAA,CAChB5E,SAAS;EAATA,MAAAA,SAAS,GAAAkF,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAC,qBAAA,GAAAP,aAAA,CACjB1E,QAAQ;EAARA,MAAAA,QAAQ,GAAAiF,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAChB9L,QAAQ,GAAAuL,aAAA,CAARvL,QAAQ;QACR8G,MAAM,GAAAyE,aAAA,CAANzE,MAAM;QACNC,OAAO,GAAAwE,aAAA,CAAPxE,OAAO;QACPI,SAAS,GAAAoE,aAAA,CAATpE,SAAS,CAAA;EAEX,IAAA,IAAQ9H,aAAa,GAAK,IAAI,CAAC2B,KAAK,CAA5B3B,aAAa,CAAA;EACrB,IAAA,IAAA0M,oBAAA,GAA+B,IAAI,CAACrM,KAAK,CAAnCZ,QAAQ;EAAEqB,MAAAA,KAAK,GAAA4L,oBAAA,KAAG,KAAA,CAAA,GAAA,EAAE,GAAAA,oBAAA,CAAA;EAC1B,IAAA,IAAM3E,KAAK,GAAGrH,MAAM,CAACqH,KAAK,IAAIf,IAAI,CAAA;EAClC,IAAA,IAAMlB,SAAS,GAAGR,kBAAY,CAAYF,QAAQ,CAAC,CAAA;EACnD,IAAA,IAAQxE,WAAW,GAAkBD,QAAQ,CAArCC,WAAW;QAAEoH,WAAW,GAAKrH,QAAQ,CAAxBqH,WAAW,CAAA;EAChC,IAAA,IAAMC,YAAY,GAAQC,4BAAQ,CAACxH,MAAM,CAACI,KAAK,CAAC,GAAIJ,MAAM,CAACI,KAAa,GAAI,EAAU,CAAA;MACtF,IAAM6L,WAAW,GAAG1E,YAAY,CAACrI,GAAG,CAAC,UAACC,IAAO,EAAE0B,KAAa,EAAA;QAAA,OAC1DX,WAAW,CAACwH,cAAc,CAACvI,IAAI,EAAEJ,QAAQ,CAAC8B,KAAK,CAAmB,CAAC,CAAA;OACpE,CAAA,CAAA;MACD,IAAMqL,gBAAgB,GAAG1E,4BAAQ,CAACxH,MAAM,CAACO,eAAe,CAAC,GACrDL,WAAW,CAACwH,cAAc,CAAC1H,MAAM,CAACO,eAAoB,EAAExB,QAAQ,CAAC,GACjE,IAAI,CAAA;MAER,IAAI,CAACqB,KAAK,IAAIA,KAAK,CAAC4D,MAAM,GAAGiI,WAAW,CAACjI,MAAM,EAAE;EAC/C;QACA5D,KAAK,GAAGA,KAAK,IAAI,EAAE,CAAA;EACnBA,MAAAA,KAAK,GAAGA,KAAK,CAACiB,MAAM,CAAC,IAAIrC,KAAK,CAACiN,WAAW,CAACjI,MAAM,GAAG5D,KAAK,CAAC4D,MAAM,CAAC,CAAC,CAAA;EACnE,KAAA;EAED;MACA,IAAM2D,MAAM,GAAG,IAAI,CAACpD,UAAU,CAACnE,KAAK,CAAC,IAAI,CAAC,CAAC8L,gBAAgB,CAAA;EAC3D,IAAA,IAAMtE,UAAU,GAAuC;EACrDD,MAAAA,MAAM,EAANA,MAAM;EACNa,MAAAA,SAAS,EAAE,2CAA2C;EACtDhC,MAAAA,QAAQ,EAARA,QAAQ;EACRhD,MAAAA,QAAQ,EAARA,QAAQ;EACRzE,MAAAA,QAAQ,EAARA,QAAQ;QACRqB,KAAK,EAAEd,aAAa,CAACJ,GAAG,CAAC,UAACK,SAAS,EAAEsB,KAAK,EAAI;EAC5C,QAAA,IAAQzB,GAAG,GAAWG,SAAS,CAAvBH,GAAG;YAAED,IAAI,GAAKI,SAAS,CAAlBJ,IAAI,CAAA;EACjB;UACA,IAAM0I,QAAQ,GAAG1I,IAAsB,CAAA;EACvC,QAAA,IAAMgN,UAAU,GAAGtL,KAAK,IAAIoL,WAAW,CAACjI,MAAM,CAAA;UAC9C,IAAM7D,UAAU,GACdgM,UAAU,IAAI3E,4BAAQ,CAACxH,MAAM,CAACO,eAAe,CAAC,GAC1CL,WAAW,CAACwH,cAAc,CAAC1H,MAAM,CAACO,eAAoB,EAAEsH,QAAQ,CAAC,GACjEoE,WAAW,CAACpL,KAAK,CAAC,CAAA;UACxB,IAAMkH,YAAY,GAAGvE,QAAQ,CAACC,GAAG,GAAG0D,WAAW,GAAGtG,KAAK,CAAA;EACvD,QAAA,IAAMmH,YAAY,GAAG9H,WAAW,CAAC+H,UAAU,CAAC9H,UAAU,EAAE4H,YAAY,EAAEF,QAAQ,EAAEZ,QAAQ,EAAEE,WAAW,CAAC,CAAA;EACtG,QAAA,IAAMmB,YAAY,GAAG6D,UAAU,GAC3BzH,QAAQ,CAACnE,eAAe,IAAI,EAAE,GAC9BvB,KAAK,CAACC,OAAO,CAACyF,QAAQ,CAACtE,KAAK,CAAC,GAC7BsE,QAAQ,CAACtE,KAAK,CAACS,KAAK,CAAC,GACrB6D,QAAQ,CAACtE,KAAK,IAAI,EAAE,CAAA;UACxB,IAAM0H,eAAe,GAAGjG,WAAW,GAAIA,WAAW,CAAChB,KAAK,CAAsB,GAAGS,SAAS,CAAA;UAE1F,OAAOiK,MAAI,CAACrD,oBAAoB,CAAC;EAC/B9I,UAAAA,GAAG,EAAHA,GAAG;EACHyB,UAAAA,KAAK,EAALA,KAAK;EACLyF,UAAAA,IAAI,EAAEA,IAAI,IAAOA,IAAI,SAAIzF,KAAO;EAChC8G,UAAAA,MAAM,EAANA,MAAM;EACNyE,UAAAA,SAAS,EAAED,UAAU;EACrBhE,UAAAA,SAAS,EAAEtH,KAAK,IAAIoL,WAAW,CAACjI,MAAM,GAAG,CAAC;YAC1CoE,WAAW,EAAE+D,UAAU,IAAItL,KAAK,GAAGT,KAAK,CAAC4D,MAAM,GAAG,CAAC;EACnD7D,UAAAA,UAAU,EAAVA,UAAU;EACVkI,UAAAA,QAAQ,EAAER,QAAQ;EAClBS,UAAAA,YAAY,EAAZA,YAAY;EACZN,UAAAA,YAAY,EAAZA,YAAY;EACZF,UAAAA,eAAe,EAAfA,eAAe;EACflB,UAAAA,SAAS,EAAEA,SAAS,IAAI/F,KAAK,KAAK,CAAC;EACnCkG,UAAAA,MAAM,EAANA,MAAM;EACNC,UAAAA,OAAO,EAAPA,OAAO;EACPI,UAAAA,SAAS,EAATA,SAAS;YACTmB,UAAU,EAAEjJ,aAAa,CAAC0E,MAAAA;EAC3B,SAAA,CAAC,CAAA;EACJ,OAAC,CAAC;QACFvD,UAAU,EAAE,IAAI,CAACA,UAAU;EAC3BiG,MAAAA,QAAQ,EAARA,QAAQ;EACRI,MAAAA,QAAQ,EAARA,QAAQ;EACR7G,MAAAA,QAAQ,EAARA,QAAQ;EACRD,MAAAA,MAAM,EAANA,MAAM;EACN0E,MAAAA,QAAQ,EAARA,QAAQ;EACR2C,MAAAA,KAAK,EAALA,KAAK;EACLC,MAAAA,WAAW,EAAXA,WAAW;EACXF,MAAAA,SAAS,EAATA,SAAAA;OACD,CAAA;MAED,IAAMqB,QAAQ,GAAGnD,iBAAW,CAAkC,oBAAoB,EAAErF,QAAQ,EAAEmF,SAAS,CAAC,CAAA;EACxG,IAAA,OAAOG,cAAC,CAAAkD,QAAQ,EAAApF,QAAA,CAAA,EAAA,EAAKuE,UAAU,CAAI,CAAA,CAAA;EACrC,GAAA;EAEA;;;;EAIG,MAJH;EAAA1D,EAAAA,MAAA,CAKAgE,oBAAoB,GAApB,SAAAA,oBAAAA,CAAqBvI,KAkBpB,EAAA;EACC,IAAA,IACEP,GAAG,GAiBDO,KAAK,CAjBPP,GAAG;QACHyB,KAAK,GAgBHlB,KAAK,CAhBPkB,KAAK;QACLyF,IAAI,GAeF3G,KAAK,CAfP2G,IAAI;QACJqB,MAAM,GAcJhI,KAAK,CAdPgI,MAAM;QAAA0E,gBAAA,GAcJ1M,KAAK,CAbPyM,SAAS;EAATA,MAAAA,SAAS,GAAAC,gBAAA,KAAG,KAAA,CAAA,GAAA,IAAI,GAAAA,gBAAA;QAChBlE,SAAS,GAYPxI,KAAK,CAZPwI,SAAS;QACTC,WAAW,GAWTzI,KAAK,CAXPyI,WAAW;QACXjI,UAAU,GAURR,KAAK,CAVPQ,UAAU;QACVkI,QAAQ,GASN1I,KAAK,CATP0I,QAAQ;QACRC,YAAY,GAQV3I,KAAK,CARP2I,YAAY;QACZN,YAAY,GAOVrI,KAAK,CAPPqI,YAAY;QACZF,eAAe,GAMbnI,KAAK,CANPmI,eAAe;QACflB,SAAS,GAKPjH,KAAK,CALPiH,SAAS;QACTG,MAAM,GAIJpH,KAAK,CAJPoH,MAAM;QACNC,OAAO,GAGLrH,KAAK,CAHPqH,OAAO;QACPI,SAAS,GAEPzH,KAAK,CAFPyH,SAAS;QACTmB,UAAU,GACR5I,KAAK,CADP4I,UAAU,CAAA;EAEZ,IAAA,IAAA+D,aAAA,GAAkG,IAAI,CAAC3M,KAAK;QAApG6G,QAAQ,GAAA8F,aAAA,CAAR9F,QAAQ;QAAEwC,SAAS,GAAAsD,aAAA,CAATtD,SAAS;QAAE/B,QAAQ,GAAAqF,aAAA,CAARrF,QAAQ;QAAEE,WAAW,GAAAmF,aAAA,CAAXnF,WAAW;QAAET,QAAQ,GAAA4F,aAAA,CAAR5F,QAAQ;QAAEhC,QAAQ,GAAA4H,aAAA,CAAR5H,QAAQ;QAAEzE,QAAQ,GAAAqM,aAAA,CAARrM,QAAQ;QAAEqH,WAAW,GAAAgF,aAAA,CAAXhF,WAAW,CAAA;EAC7F,IAAA,IAAAiF,gBAAA,GAGItM,QAAQ,CAFVuM,MAAM;QAAIC,gBAAgB,GAAAF,gBAAA,CAAhBE,gBAAgB;QAAEC,WAAW,GAAAH,gBAAA,CAAXG,WAAW;QACvC7H,eAAe,GACb5E,QAAQ,CADV4E,eAAe,CAAA;EAEjB,IAAA,IAAM8H,eAAe,GAAGF,gBAAgB,IAAIC,WAAW,CAAA;EACvD,IAAA,IAAAE,cAAA,GAAiEhI,kBAAY,CAAYF,QAAQ,EAAEG,eAAe,CAAC;QAAAgI,qBAAA,GAAAD,cAAA,CAA3GE,SAAS;EAATA,MAAAA,SAAS,GAAAD,qBAAA,KAAG,KAAA,CAAA,GAAA,IAAI,GAAAA,qBAAA;QAAAE,qBAAA,GAAAH,cAAA,CAAEI,SAAS;EAATA,MAAAA,SAAS,GAAAD,qBAAA,KAAG,KAAA,CAAA,GAAA,IAAI,GAAAA,qBAAA;QAAAE,qBAAA,GAAAL,cAAA,CAAEM,QAAQ;EAARA,MAAAA,QAAQ,GAAAD,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA,CAAA;EAC5D,IAAA,IAAME,GAAG,GAA+B;QACtCC,MAAM,EAAEN,SAAS,IAAI3E,SAAS;QAC9BkF,QAAQ,EAAEP,SAAS,IAAI1E,WAAW;QAClCkF,IAAI,EAAEJ,QAAQ,IAAIvF,MAAM;QACxB4F,MAAM,EAAEP,SAAS,IAAIZ,SAAS;EAC9BoB,MAAAA,OAAO,EAAE,KAAA;OACV,CAAA;EACDL,IAAAA,GAAG,CAACK,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACP,GAAG,CAAC,CAACQ,IAAI,CAAC,UAACvO,GAAqB,EAAA;QAAA,OAAK+N,GAAG,CAAC/N,GAAG,CAAC,CAAA;OAAC,CAAA,CAAA;MAExE,OAAO;EACLwO,MAAAA,QAAQ,EACNrI,cAAC,CAAAoH,eAAe;EACdrG,QAAAA,IAAI,EAAEA,IAAI;EACVzF,QAAAA,KAAK,EAAEA,KAAK;EACZb,QAAAA,MAAM,EAAEG,UAAU;EAClBuE,QAAAA,QAAQ,EAAE4D,YAAY;EACtBvJ,QAAAA,QAAQ,EAAEsJ,QAAQ;EAClBf,QAAAA,WAAW,EAAEA,WAAW;EACxBzF,QAAAA,WAAW,EAAEiG,eAAe;EAC5Bb,QAAAA,QAAQ,EAAEA,QAAQ;EAClBE,QAAAA,WAAW,EAAEA,WAAW;EACxB3D,QAAAA,QAAQ,EAAEwE,YAAY;EACtBlB,QAAAA,QAAQ,EAAE,IAAI,CAAC1C,cAAc,CAACjE,UAAU,CAAC;EACzCa,QAAAA,QAAQ,EAAE,IAAI,CAAC6B,gBAAgB,CAAChC,KAAK,CAAC;EACtCkG,QAAAA,MAAM,EAAEA,MAAM;EACdC,QAAAA,OAAO,EAAEA,OAAO;EAChB/G,QAAAA,QAAQ,EAAEA,QAAQ;EAClBuG,QAAAA,QAAQ,EAAEA,QAAQ;EAClBE,QAAAA,QAAQ,EAAEA,QAAQ;EAClBsC,QAAAA,SAAS,EAAEA,SAAS;EACpBpC,QAAAA,SAAS,EAAEA,SAAS;EACpBQ,QAAAA,SAAS,EAAEA,SAAAA;EAAS,OAAA,CAEvB;EACDoB,MAAAA,SAAS,EAAE,YAAY;EACvBhC,MAAAA,QAAQ,EAARA,QAAQ;EACRmB,MAAAA,MAAM,EAANA,MAAM;QACNkG,OAAO,EAAEV,GAAG,CAACG,IAAI;QACjBQ,UAAU,EAAEX,GAAG,CAACK,OAAO;QACvBO,SAAS,EAAEZ,GAAG,CAACC,MAAM;QACrBY,WAAW,EAAEb,GAAG,CAACE,QAAQ;QACzBY,SAAS,EAAEd,GAAG,CAACI,MAAM;EACrB1M,MAAAA,KAAK,EAALA,KAAK;EACL0H,MAAAA,UAAU,EAAVA,UAAU;EACVnJ,MAAAA,GAAG,EAAHA,GAAG;QACHwB,eAAe,EAAE,IAAI,CAACA,eAAe;QACrCE,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;QACvCa,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;QACvCU,cAAc,EAAE,IAAI,CAACA,cAAc;EACnCqE,MAAAA,QAAQ,EAARA,QAAQ;EACRzG,MAAAA,QAAQ,EAARA,QAAQ;EACRD,MAAAA,MAAM,EAAEG,UAAU;EAClBuE,MAAAA,QAAQ,EAAE4D,YAAAA;OACX,CAAA;KACF,CAAA;EAAA4F,EAAAA,YAAA,CAAA1O,UAAA,EAAA,CAAA;MAAAJ,GAAA,EAAA,WAAA;MAAA+O,GAAA,EAtuBD,SAAAA,GAAAA,GAAa;EACX,MAAA,IAAAC,aAAA,GAA6B,IAAI,CAACzO,KAAK;UAA/BK,MAAM,GAAAoO,aAAA,CAANpO,MAAM;UAAEC,QAAQ,GAAAmO,aAAA,CAARnO,QAAQ,CAAA;EACxB,MAAA,IAAQiF,eAAe,GAAKjF,QAAQ,CAA5BiF,eAAe,CAAA;QACvB,OAAOiJ,uBAAG,CACRnO,MAAM,EACN,CAACmF,eAAS,EAAE,OAAO,CAAC,EACpBgJ,uBAAG,CAACnO,MAAM,EAAE,CAACmF,eAAS,EAAE,aAAa,CAAC,EAAED,eAAe,CAACO,wBAAkB,CAAC4I,cAAc,CAAC,CAAC,CAC5F,CAAA;EACH,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAA7O,UAAA,CAAA;EAAA,CAAA,CA7DyG8O,eAG3G,CAAA;;;EC/DD;;;;EAIG;EACH,SAASC,YAAYA,CACnB5O,KAA0B,EAAA;EAAA,EAAA,IAAA+I,IAAA,CAAA;EAE1B,EAAA,IACE1I,MAAM,GAcJL,KAAK,CAdPK,MAAM;MACNsG,IAAI,GAaF3G,KAAK,CAbP2G,IAAI;MACJ5B,QAAQ,GAYN/E,KAAK,CAZP+E,QAAQ;MACRlB,QAAQ,GAWN7D,KAAK,CAXP6D,QAAQ;MACRzE,QAAQ,GAUNY,KAAK,CAVPZ,QAAQ;MACRkB,QAAQ,GASNN,KAAK,CATPM,QAAQ;MACR6G,QAAQ,GAQNnH,KAAK,CARPmH,QAAQ;MACRN,QAAQ,GAON7G,KAAK,CAPP6G,QAAQ;MACRE,QAAQ,GAMN/G,KAAK,CANP+G,QAAQ;MACRE,SAAS,GAKPjH,KAAK,CALPiH,SAAS;MACT5F,QAAQ,GAINrB,KAAK,CAJPqB,QAAQ;MACRgG,OAAO,GAGLrH,KAAK,CAHPqH,OAAO;MACPD,MAAM,GAEJpH,KAAK,CAFPoH,MAAM;MACNK,SAAS,GACPzH,KAAK,CADPyH,SAAS,CAAA;EAEX,EAAA,IAAQC,KAAK,GAAKrH,MAAM,CAAhBqH,KAAK,CAAA;EACb,EAAA,IAAQ8B,OAAO,GAAoDlJ,QAAQ,CAAnEkJ,OAAO;MAAE7B,WAAW,GAAuCrH,QAAQ,CAA1DqH,WAAW;MAAEpC,eAAe,GAAsBjF,QAAQ,CAA7CiF,eAAe;MAAEL,eAAe,GAAK5E,QAAQ,CAA5B4E,eAAe,CAAA;EAC9D,EAAA,IAAAF,aAAA,GAMIC,kBAAY,CAAUF,QAAQ,EAAEG,eAAe,CAAC;MAAA2J,oBAAA,GAAA7J,aAAA,CALlD0E,MAAM;EAANA,IAAAA,MAAM,GAAAmF,oBAAA,KAAG,KAAA,CAAA,GAAA,UAAU,GAAAA,oBAAA;MACZlF,OAAO,GAAA3E,aAAA,CAAd0C,KAAK;MAAAoH,mBAAA,GAAA9J,aAAA,CAELiF,KAAK;EAAEC,IAAAA,YAAY,GAAA4E,mBAAA,KAAG,KAAA,CAAA,GAAA,IAAI,GAAAA,mBAAA;EACvBlF,IAAAA,OAAO,GAAAC,6BAAA,CAAA7E,aAAA,EAAA8E,WAAA,CAAA,CAAA;IAEZ,IAAMC,MAAM,GAAGC,eAAS,CAAC3J,MAAM,EAAEqJ,MAAM,EAAEF,OAAO,CAAC,CAAA;EACjD,EAAA,IAAMuF,GAAG,GAAGxJ,eAAe,CAACO,wBAAkB,CAACkJ,QAAQ,CAAC,CAAA;EACxD,EAAA,IAAMC,EAAE,GAAG1J,eAAe,CAACO,wBAAkB,CAACoJ,OAAO,CAAC,CAAA;EACtD,EAAA,IAAIrE,WAA6C,CAAA;EACjD,EAAA,IAAMZ,KAAK,GAAA,CAAAlB,IAAA,GAAGY,OAAO,IAAA,IAAA,GAAPA,OAAO,GAAIjC,KAAK,KAAA,IAAA,GAAAqB,IAAA,GAAIpC,IAAI,CAAA;IACtC,IAAItH,KAAK,CAACC,OAAO,CAACe,MAAM,CAAC8O,KAAK,CAAC,EAAE;MAC/BtE,WAAW,GAAGC,iBAAW,CAAI;QAC3BqE,KAAK,EAAE9O,MAAM,CAAC8O,KAAK,CAChB5P,GAAG,CAAC,UAAC6P,MAAM,EAAI;EACd,QAAA,IAAIvH,4BAAQ,CAACuH,MAAM,CAAC,EAAE;YACpB,OAAA1L,QAAA,KACK0L,MAAM,EAAA;EACT1H,YAAAA,KAAK,EAAE0H,MAAM,CAAC1H,KAAK,KAAK0H,MAAM,CAAM,OAAA,CAAA,KAAK,IAAI,GAAGL,GAAG,GAAGE,EAAE,CAAA;EAAC,WAAA,CAAA,CAAA;EAE5D,SAAA;EACD,QAAA,OAAOtN,SAAS,CAAA;EAClB,OAAC,CAAC,CACDa,MAAM,CAAC,UAAC6M,CAAM,EAAA;EAAA,QAAA,OAAKA,CAAC,CAAA;EAAA,OAAA,CAAQ;EAChB,KAAA,CAAC,CAAA;EACnB,GAAA,MAAM;EAAA,IAAA,IAAAC,YAAA,CAAA;EACL;MACA,IAAMC,mBAAmB,GAAGlP,MAAsC,CAAA;EAClE,IAAA,IAAMmP,KAAK,GAAA,CAAAF,YAAA,GAAGjP,MAAM,CAAA,MAAA,CAAK,KAAAiP,IAAAA,GAAAA,YAAA,GAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;EAC1C,IAAA,IAAI,CAACC,mBAAmB,CAACE,SAAS,IAAID,KAAK,CAACnL,MAAM,KAAK,CAAC,IAAImL,KAAK,CAACE,KAAK,CAAC,UAACC,CAAM,EAAA;QAAA,OAAK,OAAOA,CAAC,KAAK,SAAS,CAAA;EAAA,KAAA,CAAC,EAAE;EAC3G9E,MAAAA,WAAW,GAAG,CACZ;EACE1H,QAAAA,KAAK,EAAEqM,KAAK,CAAC,CAAC,CAAC;EACfvF,QAAAA,KAAK,EAAEuF,KAAK,CAAC,CAAC,CAAC,GAAGT,GAAG,GAAGE,EAAAA;EACzB,OAAA,EACD;EACE9L,QAAAA,KAAK,EAAEqM,KAAK,CAAC,CAAC,CAAC;EACfvF,QAAAA,KAAK,EAAEuF,KAAK,CAAC,CAAC,CAAC,GAAGT,GAAG,GAAGE,EAAAA;EACzB,OAAA,CACF,CAAA;EACF,KAAA,MAAM;QACLpE,WAAW,GAAGC,iBAAW,CAAI;EAC3B,QAAA,MAAA,EAAM0E,KAAK;EACX;UACAC,SAAS,EAAEF,mBAAmB,CAACE,SAAAA;EAChB,OAAA,CAAC,CAAA;EACnB,KAAA;EACF,GAAA;IAED,OACE7J,cAAC,CAAAmE,MAAM;MACLH,OAAO,EAAAlG,QAAA,CAAA,EAAA,EAAOkG,OAAO,EAAA;EAAEiB,MAAAA,WAAW,EAAXA,WAAAA;OAAa,CAAA;EACpCxK,IAAAA,MAAM,EAAEA,MAAM;EACd0E,IAAAA,QAAQ,EAAEA,QAAQ;MAClB3B,EAAE,EAAES,QAAQ,CAACC,GAAG;EAChB6C,IAAAA,IAAI,EAAEA,IAAI;EACVtF,IAAAA,QAAQ,EAAEA,QAAQ;EAClBgG,IAAAA,OAAO,EAAEA,OAAO;EAChBD,IAAAA,MAAM,EAAEA,MAAM;EACd6C,IAAAA,KAAK,EAAEA,KAAK;MACZI,SAAS,EAAE,CAACH,YAAY;EACxB/G,IAAAA,KAAK,EAAE/D,QAAQ;EACf+H,IAAAA,QAAQ,EAAEA,QAAQ;EAClBN,IAAAA,QAAQ,EAAEA,QAAQ;EAClBE,IAAAA,QAAQ,EAAEA,QAAQ;EAClBzG,IAAAA,QAAQ,EAAEA,QAAQ;EAClBqH,IAAAA,WAAW,EAAEA,WAAW;EACxBV,IAAAA,SAAS,EAAEA,SAAS;EACpBQ,IAAAA,SAAS,EAAEA,SAAAA;EAAS,GAAA,CACpB,CAAA;EAEN;;;ECvFA;;;;EAIG;EAJH,IAKMmI,UAA8F,0BAAA9P,UAAA,EAAA;IAAAC,cAAA,CAAA6P,UAAA,EAAA9P,UAAA,CAAA,CAAA;EAIlG;;;EAGG;IACH,SAAA8P,UAAAA,CAAY5P,KAA0B,EAAA;EAAA,IAAA,IAAAC,KAAA,CAAA;EACpCA,IAAAA,KAAA,GAAAH,UAAA,CAAAI,IAAA,CAAA,IAAA,EAAMF,KAAK,CAAC,IAAA,IAAA,CAAA;EAACC,IAAAA,KAAA,CAuEf4P,cAAc,GAAG,UAACT,MAAe,EAAI;EACnC,MAAA,IAAAU,WAAA,GAA6C7P,KAAA,CAAKqB,KAAK;UAA/CyO,cAAc,GAAAD,WAAA,CAAdC,cAAc;UAAEC,gBAAgB,GAAAF,WAAA,CAAhBE,gBAAgB,CAAA;EACxC,MAAA,IAAA5P,WAAA,GAAyCH,KAAA,CAAKD,KAAK;UAA3CZ,QAAQ,GAAAgB,WAAA,CAARhB,QAAQ;UAAEiC,QAAQ,GAAAjB,WAAA,CAARiB,QAAQ;UAAEf,QAAQ,GAAAF,WAAA,CAARE,QAAQ,CAAA;EACpC,MAAA,IAAQC,WAAW,GAAKD,QAAQ,CAAxBC,WAAW,CAAA;EACnB,MAAA,IAAM0P,SAAS,GAAGb,MAAM,KAAKzN,SAAS,GAAGW,QAAQ,CAAC8M,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA;QAClE,IAAIa,SAAS,KAAKF,cAAc,EAAE;EAChC,QAAA,OAAA;EACD,OAAA;QACD,IAAMG,SAAS,GAAGD,SAAS,IAAI,CAAC,GAAGD,gBAAgB,CAACC,SAAS,CAAC,GAAGtO,SAAS,CAAA;QAC1E,IAAMwO,SAAS,GAAGJ,cAAc,IAAI,CAAC,GAAGC,gBAAgB,CAACD,cAAc,CAAC,GAAGpO,SAAS,CAAA;QAEpF,IAAI6B,WAAW,GAAGjD,WAAW,CAAC6P,wBAAwB,CAACF,SAAS,EAAEC,SAAS,EAAE/Q,QAAQ,CAAC,CAAA;QACtF,IAAIoE,WAAW,IAAI0M,SAAS,EAAE;EAC5B;EACA;UACA1M,WAAW,GAAGjD,WAAW,CAACM,mBAAmB,CAACqP,SAAS,EAAE1M,WAAW,EAAE,uBAAuB,CAAM,CAAA;EACpG,OAAA;QACDnC,QAAQ,CAACmC,WAAW,EAAE7B,SAAS,EAAE1B,KAAA,CAAKoQ,UAAU,EAAE,CAAC,CAAA;QAEnDpQ,KAAA,CAAK6B,QAAQ,CAAC;EAAEiO,QAAAA,cAAc,EAAEE,SAAAA;EAAW,OAAA,CAAC,CAAA;OAC7C,CAAA;EAzFC,IAAA,IAAAhO,YAAA,GAIIhC,KAAA,CAAKD,KAAK;QAHZZ,SAAQ,GAAA6C,YAAA,CAAR7C,QAAQ;QACRwK,OAAO,GAAA3H,YAAA,CAAP2H,OAAO;EACKrJ,MAAAA,YAAW,GAAA0B,YAAA,CAAvB3B,QAAQ,CAAIC,WAAW,CAAA;EAEzB;EACA,IAAA,IAAMyP,iBAAgB,GAAGpG,OAAO,CAACrK,GAAG,CAAC,UAAC+Q,GAAM,EAAA;EAAA,MAAA,OAAK/P,YAAW,CAACwH,cAAc,CAACuI,GAAG,EAAElR,SAAQ,CAAC,CAAA;OAAC,CAAA,CAAA;MAE3Fa,KAAA,CAAKqB,KAAK,GAAG;EACX0O,MAAAA,gBAAgB,EAAhBA,iBAAgB;QAChBD,cAAc,EAAE9P,KAAA,CAAKsQ,iBAAiB,CAAC,CAAC,EAAEnR,SAAQ,EAAE4Q,iBAAgB,CAAA;OACrE,CAAA;EAAC,IAAA,OAAA/P,KAAA,CAAA;EACJ,GAAA;EAEA;;;;;EAKG;EALH,EAAA,IAAAsE,MAAA,GAAAqL,UAAA,CAAApL,SAAA,CAAA;IAAAD,MAAA,CAMAiM,kBAAkB,GAAlB,SAAAA,mBAAmBC,SAAwC,EAAEvM,SAAoC,EAAA;EAC/F,IAAA,IAAApB,YAAA,GAAwC,IAAI,CAAC9C,KAAK;QAA1CZ,QAAQ,GAAA0D,YAAA,CAAR1D,QAAQ;QAAEwK,OAAO,GAAA9G,YAAA,CAAP8G,OAAO;QAAE/F,QAAQ,GAAAf,YAAA,CAARe,QAAQ,CAAA;EACnC,IAAA,IAAQkM,cAAc,GAAK,IAAI,CAACzO,KAAK,CAA7ByO,cAAc,CAAA;EACtB,IAAA,IAAIW,QAAQ,GAAG,IAAI,CAACpP,KAAK,CAAA;MACzB,IAAI,CAACqP,gBAAU,CAACF,SAAS,CAAC7G,OAAO,EAAEA,OAAO,CAAC,EAAE;QAC3C,IACcrJ,WAAW,GACrB,IAAI,CAACP,KAAK,CADZM,QAAQ,CAAIC,WAAW,CAAA;EAEzB;EACA,MAAA,IAAMyP,gBAAgB,GAAGpG,OAAO,CAACrK,GAAG,CAAC,UAAC+Q,GAAM,EAAA;EAAA,QAAA,OAAK/P,WAAW,CAACwH,cAAc,CAACuI,GAAG,EAAElR,QAAQ,CAAC,CAAA;SAAC,CAAA,CAAA;EAC3FsR,MAAAA,QAAQ,GAAG;EAAEX,QAAAA,cAAc,EAAdA,cAAc;EAAEC,QAAAA,gBAAgB,EAAhBA,gBAAAA;SAAkB,CAAA;EAChD,KAAA;EACD,IAAA,IAAI,CAACW,gBAAU,CAACvR,QAAQ,EAAEqR,SAAS,CAACrR,QAAQ,CAAC,IAAIyE,QAAQ,CAACC,GAAG,KAAK2M,SAAS,CAAC5M,QAAQ,CAACC,GAAG,EAAE;QACxF,IAAA8M,SAAA,GAA6BF,QAAQ;UAA7BV,kBAAgB,GAAAY,SAAA,CAAhBZ,gBAAgB,CAAA;QACxB,IAAMa,cAAc,GAAG,IAAI,CAACN,iBAAiB,CAACR,cAAc,EAAE3Q,QAAQ,EAAE4Q,kBAAgB,CAAC,CAAA;EAEzF,MAAA,IAAI9L,SAAS,IAAI2M,cAAc,KAAKd,cAAc,EAAE;EAClDW,QAAAA,QAAQ,GAAG;EAAEX,UAAAA,cAAc,EAAEc,cAAc;EAAEb,UAAAA,gBAAgB,EAAhBA,kBAAAA;WAAkB,CAAA;EAChE,OAAA;EACF,KAAA;EACD,IAAA,IAAIU,QAAQ,KAAK,IAAI,CAACpP,KAAK,EAAE;EAC3B,MAAA,IAAI,CAACQ,QAAQ,CAAC4O,QAAQ,CAAC,CAAA;EACxB,KAAA;EACH,GAAA;EAEA;;;;;EAKG,MALH;IAAAnM,MAAA,CAMAgM,iBAAiB,GAAjB,SAAAA,iBAAAA,CAAkBR,cAAsB,EAAE3Q,QAAuB,EAAEwK,OAAY,EAAA;MAC7E,IAAQrJ,WAAW,GAAK,IAAI,CAACP,KAAK,CAACM,QAAQ,CAAnCC,WAAW,CAAA;MAEnB,IAAM6O,MAAM,GAAG7O,WAAW,CAACuQ,wBAAwB,CAAC1R,QAAQ,EAAEwK,OAAO,EAAEmG,cAAc,CAAC,CAAA;MACtF,IAAIX,MAAM,GAAG,CAAC,EAAE;EACd,MAAA,OAAOA,MAAM,CAAA;EACd,KAAA;EACD;EACA;MACA,OAAOW,cAAc,IAAI,CAAC,CAAA;EAC5B,GAAA;EAEA;;;;;EAKG,MALH;EAAAxL,EAAAA,MAAA,CA4BA8L,UAAU,GAAV,SAAAA,aAAU;EACR,IAAA,IAAA/M,YAAA,GAA6B,IAAI,CAACtD,KAAK;QAA/B6D,QAAQ,GAAAP,YAAA,CAARO,QAAQ;QAAExD,MAAM,GAAAiD,YAAA,CAANjD,MAAM,CAAA;MACxB,OAAUwD,EAAAA,GAAAA,QAAQ,CAACC,GAAG,IAAGzD,MAAM,CAAC8O,KAAK,GAAG,gBAAgB,GAAG,gBAAgB,CAAA,CAAA;EAC7E,GAAA;EAEA;EACG,MADH;EAAA5K,EAAAA,MAAA,CAEAc,MAAM,GAAN,SAAAA,SAAM;EACJ,IAAA,IAAAzB,YAAA,GAWI,IAAI,CAAC5D,KAAK;QAVZ2G,IAAI,GAAA/C,YAAA,CAAJ+C,IAAI;QACJoK,QAAQ,GAAAnN,YAAA,CAARmN,QAAQ;QAAAC,qBAAA,GAAApN,YAAA,CACRiD,QAAQ;EAARA,MAAAA,QAAQ,GAAAmK,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAC,qBAAA,GAAArN,YAAA,CAChB1B,WAAW;EAAXA,MAAAA,WAAW,GAAA+O,qBAAA,KAAA,KAAA,CAAA,GAAG,EAAE,GAAAA,qBAAA;QAChBtJ,WAAW,GAAA/D,YAAA,CAAX+D,WAAW;QACXP,MAAM,GAAAxD,YAAA,CAANwD,MAAM;QACNC,OAAO,GAAAzD,YAAA,CAAPyD,OAAO;QACP/G,QAAQ,GAAAsD,YAAA,CAARtD,QAAQ;QACRD,MAAM,GAAAuD,YAAA,CAANvD,MAAM;QACN0E,QAAQ,GAAAnB,YAAA,CAARmB,QAAQ,CAAA;EAGV,IAAA,IAAQyE,OAAO,GAA4DlJ,QAAQ,CAA3EkJ,OAAO;QAAEqD,MAAM,GAAoDvM,QAAQ,CAAlEuM,MAAM;QAAEtH,eAAe,GAAmCjF,QAAQ,CAA1DiF,eAAe;QAAEL,eAAe,GAAkB5E,QAAQ,CAAzC4E,eAAe;QAAE3E,WAAW,GAAKD,QAAQ,CAAxBC,WAAW,CAAA;EACtE,IAAA,IAAqB2Q,YAAY,GAAKrE,MAAM,CAApCE,WAAW,CAAA;EACnB,IAAA,IAAAoE,YAAA,GAA6C,IAAI,CAAC7P,KAAK;QAA/CyO,cAAc,GAAAoB,YAAA,CAAdpB,cAAc;QAAEC,gBAAgB,GAAAmB,YAAA,CAAhBnB,gBAAgB,CAAA;EACxC,IAAA,IAAAhL,aAAA,GAOIC,kBAAY,CAAUF,QAAQ,EAAEG,eAAe,CAAC;QAAA2J,oBAAA,GAAA7J,aAAA,CANlD0E,MAAM;EAANA,MAAAA,MAAM,GAAAmF,oBAAA,KAAG,KAAA,CAAA,GAAA,QAAQ,GAAAA,oBAAA;QACjBvF,WAAW,GAAAtE,aAAA,CAAXsE,WAAW;QACXrC,SAAS,GAAAjC,aAAA,CAATiC,SAAS;QACTmK,YAAY,GAAApM,aAAA,CAAZoM,YAAY;QAAAC,mBAAA,GAAArM,aAAA,CACZ0C,KAAK;EAALA,MAAAA,KAAK,GAAA2J,mBAAA,KAAA,KAAA,CAAA,GAAGhR,MAAM,CAACqH,KAAK,GAAA2J,mBAAA;EACjB5L,MAAAA,SAAS,GAAAoE,6BAAA,CAAA7E,aAAA,EAAA8E,WAAA,CAAA,CAAA;MAEd,IAAMC,MAAM,GAAGC,eAAS,CAAU;EAAEtF,MAAAA,IAAI,EAAE,QAAA;EAAQ,KAAE,EAAEgF,MAAM,EAAEF,OAAO,CAAC,CAAA;MACtE,IAAM/B,SAAS,GAAG+G,uBAAG,CAACtM,WAAW,EAAEoP,gBAAU,EAAE,EAAE,CAAC,CAAA;MAClD,IAAMC,gBAAgB,GAAGC,wBAAI,CAACtP,WAAW,EAAE,CAACoP,gBAAU,CAAC,CAAC,CAAA;MACxD,IAAMpH,YAAY,GAAG3J,WAAW,CAAC4J,eAAe,CAAC9J,MAAM,EAAE0E,QAAQ,EAAEG,eAAe,CAAC,CAAA;EAEnF,IAAA,IAAMkK,MAAM,GAAGW,cAAc,IAAI,CAAC,GAAGC,gBAAgB,CAACD,cAAc,CAAC,IAAI,IAAI,GAAG,IAAI,CAAA;EACpF,IAAA,IAAI0B,YAAe,CAAA;EAEnB,IAAA,IAAIrC,MAAM,EAAE;EACV;EACA;EACAqC,MAAAA,YAAY,GAAGrC,MAAM,CAAC1K,IAAI,GAAG0K,MAAM,GAAGtB,MAAM,CAAC4D,MAAM,CAAC,EAAE,EAAEtC,MAAM,EAAE;EAAE1K,QAAAA,IAAI,EAAEqM,QAAAA;EAAU,OAAA,CAAC,CAAA;EACpF,KAAA;MAED,IAAMY,aAAa,GAAuBjK,KAAK,GAC3C5B,wBAAkB,CAAC8L,iBAAiB,GACpC9L,wBAAkB,CAAC+L,YAAY,CAAA;MACnC,IAAMC,eAAe,GAAGpK,KAAK,GAAG,CAACA,KAAK,CAAC,GAAG,EAAE,CAAA;MAC5C,IAAMmD,WAAW,GAAGmF,gBAAgB,CAACzQ,GAAG,CAAC,UAAC+Q,GAAuB,EAAEpP,KAAa,EAAA;QAAA,OAAM;UACpF+I,KAAK,EAAEqG,GAAG,CAAC5I,KAAK,IAAInC,eAAe,CAACoM,aAAa,EAAEG,eAAe,CAACpQ,MAAM,CAACqQ,MAAM,CAAC7Q,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;EAC7FiC,QAAAA,KAAK,EAAEjC,KAAAA;SACR,CAAA;EAAA,KAAC,CAAC,CAAA;MAEH,OACE8Q,eAAK,CAAA,KAAA,EAAA;EAAAnJ,MAAAA,SAAS,EAAC,gCAAgC;mBAC7CjD,cAAK,CAAA,KAAA,EAAA;EAAAiD,QAAAA,SAAS,EAAC,YAAY;oBACzBjD,cAAC,CAAAmE,MAAM,EACL;EAAA3G,UAAAA,EAAE,EAAE,IAAI,CAACiN,UAAU,EAAE;YACrB1J,IAAI,EAAA,EAAA,GAAKA,IAAI,IAAGtG,MAAM,CAAC8O,KAAK,GAAG,gBAAgB,GAAG,gBAAgB,CAAE;EACpE9O,UAAAA,MAAM,EAAE;EAAEqE,YAAAA,IAAI,EAAE,QAAQ;cAAE,SAAS,EAAA,CAAA;aAAQ;YAC3CrD,QAAQ,EAAE,IAAI,CAACwO,cAAc;EAC7BzI,UAAAA,MAAM,EAAEA,MAAM;EACdC,UAAAA,OAAO,EAAEA,OAAO;EAChBR,UAAAA,QAAQ,EAAEA,QAAQ,IAAIoL,2BAAO,CAACpH,WAAW,CAAC;EAC1CT,UAAAA,QAAQ,EAAE,KAAK;EACf3C,UAAAA,SAAS,EAAEA,SAAS;EACpBvF,UAAAA,WAAW,EAAEqP,gBAAgB;EAC7BpO,UAAAA,KAAK,EAAE4M,cAAc,IAAI,CAAC,GAAGA,cAAc,GAAGpO,SAAS;EACvDiI,UAAAA,OAAO,EAAAlG,QAAA,CAAA;EAAImH,YAAAA,WAAW,EAAXA,WAAAA;EAAW,WAAA,EAAKpF,SAAS,CAAE;EACtCnF,UAAAA,QAAQ,EAAEA,QAAQ;EAClBqH,UAAAA,WAAW,EAAEA,WAAW;EACxB2B,UAAAA,WAAW,EAAEA,WAAW;EACxB8H,UAAAA,YAAY,EAAEA,YAAY;EAC1BnK,UAAAA,SAAS,EAAEA,SAAS;EACpBgD,UAAAA,KAAK,EAAEvC,KAAK,IAALA,IAAAA,GAAAA,KAAK,GAAIf,IAAI;EACpB0D,UAAAA,SAAS,EAAE,CAACH,YAAAA;WAAY,CAAA;EAEtB,OAAA,CAAA,EACLkF,MAAM,KAAK,IAAI,IAAIxJ,cAAA,CAACsL,YAAY,EAAAxN,QAAA,CAAK,EAAA,EAAA,IAAI,CAAC1D,KAAK,EAAA;EAAEK,QAAAA,MAAM,EAAEoR,YAAAA;SAAiB,CAAA,CAAA,CAAA;EAAA,KAAA,CACvE,CAAA;KAET,CAAA;EAAA,EAAA,OAAA7B,UAAA,CAAA;EAAA,CAAA,CAzLyGjB,eAG3G,CAAA;;EC7BD;EACA;EACA;EACA;EACA,IAAMuD,6BAA6B,GAAG,eAAe,CAAA;EAErD;EACA;EACA;EACA;EACA,IAAMC,mBAAmB,GAAG,SAAS,CAAA;EAErC;;;;;;;;;;;;;;;;EAgBG;EACH,SAASC,WAAWA,CAClBpS,KAA0B,EAAA;EAE1B,EAAA,IAAQM,QAAQ,GAA8CN,KAAK,CAA3DM,QAAQ;MAAEe,QAAQ,GAAoCrB,KAAK,CAAjDqB,QAAQ;MAAEjC,QAAQ,GAA0BY,KAAK,CAAvCZ,QAAQ;MAASiT,YAAY,GAAKrS,KAAK,CAA7BmD,KAAK,CAAA;EAC3C,EAAA,IAAAmP,SAAA,GAAkCC,cAAQ,CAACF,YAAY,CAAC;EAAjDG,IAAAA,SAAS,GAAAF,SAAA,CAAA,CAAA,CAAA;EAAEG,IAAAA,YAAY,GAAAH,SAAA,CAAA,CAAA,CAAA,CAAA;EAC9B,EAAA,IAAQI,WAAW,GAAKpS,QAAQ,CAACuM,MAAM,CAA/B6F,WAAW,CAAA;IAEnB,IAAIvP,KAAK,GAAG/D,QAAQ,CAAA;EAEpB;;;EAGG;EACH,EAAA,IAAMuT,YAAY,GAAGC,iBAAW,CAC9B,UAACzP,KAAmC,EAAI;EACtC;MACAsP,YAAY,CAACtP,KAAK,CAAC,CAAA;EAEnB;EACA;MACA,IAAI,CAAA,EAAA,GAAGA,KAAK,EAAG0P,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;EAChC1P,MAAAA,KAAK,SAAOA,KAAO,CAAA;EACpB,KAAA;EAED;EACA;EACA;EACA,IAAA,IAAM2P,SAAS,GACb,OAAO3P,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAAC4P,KAAK,CAACb,6BAA6B,CAAC,GACnEc,cAAQ,CAAC7P,KAAK,CAAC8P,OAAO,CAACd,mBAAmB,EAAE,EAAE,CAAC,CAAC,GAChDa,cAAQ,CAAC7P,KAAK,CAAC,CAAA;MAErB9B,QAAQ,CAACyR,SAAyB,CAAC,CAAA;EACrC,GAAC,EACD,CAACzR,QAAQ,CAAC,CACX,CAAA;IAED,IAAI,OAAOmR,SAAS,KAAK,QAAQ,IAAI,OAAOrP,KAAK,KAAK,QAAQ,EAAE;EAC9D;EACA;EACA;EACA,IAAA,IAAM+P,EAAE,GAAG,IAAIC,MAAM,CAAC,MAAGhQ,KAAK,EAAG8P,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,SAAS,CAAC,CAAA;EAEjE;EACA;EACA,IAAA,IAAIT,SAAS,CAACO,KAAK,CAACG,EAAE,CAAC,EAAE;EACvB/P,MAAAA,KAAK,GAAGqP,SAAyB,CAAA;EAClC,KAAA;EACF,GAAA;EAED,EAAA,OAAO5M,cAAC,CAAA8M,WAAW,EAAAhP,QAAA,KAAK1D,KAAK,EAAA;EAAEZ,IAAAA,QAAQ,EAAE+D,KAAK;EAAE9B,IAAAA,QAAQ,EAAEsR,YAAAA;KAAgB,CAAA,CAAA,CAAA;EAC5E;;ECjDA;;;;EAIG;EAJH,IAKMS,WAA+F,0BAAAtT,UAAA,EAAA;IAAAC,cAAA,CAAAqT,WAAA,EAAAtT,UAAA,CAAA,CAAA;EAAA,EAAA,SAAAsT,WAAA,GAAA;EAAA,IAAA,IAAAnT,KAAA,CAAA;EAAA,IAAA,KAAA,IAAAoT,IAAA,GAAAC,SAAA,CAAAjP,MAAA,EAAAkP,IAAA,GAAAlU,IAAAA,KAAA,CAAAgU,IAAA,GAAAG,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA,EAAA,EAAA;EAAAD,MAAAA,IAAA,CAAAC,IAAA,CAAAF,GAAAA,SAAA,CAAAE,IAAA,CAAA,CAAA;EAAA,KAAA;MAAAvT,KAAA,GAAAH,UAAA,CAAAI,IAAA,CAAAuT,KAAA,CAAA3T,UAAA,EAAA,CAAA,IAAA,CAAA,CAAA4B,MAAA,CAAA6R,IAAA,CAAA,CAAA,IAAA,IAAA,CAAA;MAAAtT,KAAA,CAKnGqB,KAAK,GAAG;EACNoS,MAAAA,sBAAsB,EAAE,KAAK;EAC7BC,MAAAA,oBAAoB,EAAE,EAAE;OACzB,CAAA;EAAA1T,IAAAA,KAAA,CAoBD2T,gBAAgB,GAAG,UAACjN,IAAY,EAAEkN,2BAA2B,EAAY;EAAA,MAAA,IAAvCA,2BAA2B,KAAA,KAAA,CAAA,EAAA;EAA3BA,QAAAA,2BAA2B,GAAG,KAAK,CAAA;EAAA,OAAA;EACnE,MAAA,OAAO,UAAC1Q,KAAoB,EAAEhB,cAA+B,EAAEiB,EAAW,EAAI;UAAA,IAAAC,SAAA,EAAAyQ,SAAA,CAAA;EAC5E,QAAA,IAAA1T,WAAA,GAA4CH,KAAA,CAAKD,KAAK;YAA9CZ,QAAQ,GAAAgB,WAAA,CAARhB,QAAQ;YAAEiC,QAAQ,GAAAjB,WAAA,CAARiB,QAAQ;YAAEa,WAAW,GAAA9B,WAAA,CAAX8B,WAAW,CAAA;EACvC,QAAA,IAAIiB,KAAK,KAAKxB,SAAS,IAAIkS,2BAA2B,EAAE;EACtD;EACA;EACA;EACA;EACA;EACA;EACA;EACA1Q,UAAAA,KAAK,GAAG,EAAkB,CAAA;EAC3B,SAAA;EACD,QAAA,IAAMK,WAAW,GAAAE,QAAA,CAAA,EAAA,EAAQtE,QAAQ,GAAAiE,SAAA,GAAAA,EAAAA,EAAAA,SAAA,CAAGsD,IAAI,CAAA,GAAGxD,KAAK,EAAAE,SAAA,EAAkB,CAAA;UAClEhC,QAAQ,CACNmC,WAAW,EACXtB,WAAW,IACTA,WAAW,IAAAwB,QAAA,CAAA,EAAA,EACNxB,WAAW,GAAA4R,SAAA,GAAAA,EAAAA,EAAAA,SAAA,CACbnN,IAAI,CAAGxE,GAAAA,cAAc,EAAA2R,SAAA,EACvB,EACH1Q,EAAE,CACH,CAAA;SACF,CAAA;OACF,CAAA;EAAAnD,IAAAA,KAAA,CAQD8T,mBAAmB,GAAG,UAACtU,GAAW,EAAI;QACpC,OAAO,UAACsB,KAAgB,EAAI;UAC1BA,KAAK,CAACK,cAAc,EAAE,CAAA;EACtB,QAAA,IAAAa,YAAA,GAA+BhC,KAAA,CAAKD,KAAK;YAAjCqB,QAAQ,GAAAY,YAAA,CAARZ,QAAQ;YAAEjC,QAAQ,GAAA6C,YAAA,CAAR7C,QAAQ,CAAA;EAC1B,QAAA,IAAM4U,cAAc,GAAAtQ,QAAA,CAAA,EAAA,EAAQtE,QAAQ,CAAO,CAAA;EAC3C6U,QAAAA,yBAAK,CAACD,cAAc,EAAEvU,GAAG,CAAC,CAAA;UAC1B4B,QAAQ,CAAC2S,cAAc,CAAC,CAAA;SACzB,CAAA;OACF,CAAA;EAAA/T,IAAAA,KAAA,CASDiU,eAAe,GAAG,UAACC,YAAoB,EAAE/U,QAAY,EAAI;EACvD,MAAA,IAAA0D,YAAA,GAA+B7C,KAAA,CAAKD,KAAK;UAAjC+E,QAAQ,GAAAjC,YAAA,CAARiC,QAAQ;UAAEzE,QAAQ,GAAAwC,YAAA,CAARxC,QAAQ,CAAA;QAC1B,IAAA0E,aAAA,GAA8CC,kBAAY,CAAUF,QAAQ,EAAEzE,QAAQ,CAAC4E,eAAe,CAAC;UAAAkP,qBAAA,GAAApP,aAAA,CAA/FqP,2BAA2B;EAA3BA,QAAAA,2BAA2B,GAAAD,qBAAA,KAAG,KAAA,CAAA,GAAA,GAAG,GAAAA,qBAAA,CAAA;QAEzC,IAAIlT,KAAK,GAAG,CAAC,CAAA;QACb,IAAIoT,MAAM,GAAGH,YAAY,CAAA;EACzB,MAAA,OAAO3G,uBAAG,CAACpO,QAAQ,EAAEkV,MAAM,CAAC,EAAE;EAC5BA,QAAAA,MAAM,QAAMH,YAAY,GAAGE,2BAA2B,GAAG,EAAEnT,KAAO,CAAA;EACnE,OAAA;EACD,MAAA,OAAOoT,MAAM,CAAA;OACd,CAAA;EAAArU,IAAAA,KAAA,CAQDsU,WAAW,GAAG,UAACC,QAAa,EAAI;EAC9B,MAAA,OAAO,UAACrR,KAAU,EAAEhB,cAA8B,EAAI;UAAA,IAAAsS,QAAA,EAAAC,SAAA,CAAA;UACpD,IAAIF,QAAQ,KAAKrR,KAAK,EAAE;EACtB,UAAA,OAAA;EACD,SAAA;EACD,QAAA,IAAAG,YAAA,GAA4CrD,KAAA,CAAKD,KAAK;YAA9CZ,QAAQ,GAAAkE,YAAA,CAARlE,QAAQ;YAAEiC,QAAQ,GAAAiC,YAAA,CAARjC,QAAQ;YAAEa,WAAW,GAAAoB,YAAA,CAAXpB,WAAW,CAAA;UAEvCiB,KAAK,GAAGlD,KAAA,CAAKiU,eAAe,CAAC/Q,KAAK,EAAE/D,QAAQ,CAAC,CAAA;EAC7C,QAAA,IAAMoE,WAAW,GAAAE,QAAA,CAAA,EAAA,EACXtE,QAA8B,CACnC,CAAA;UACD,IAAMuV,OAAO,IAAAF,QAAA,GAAAA,EAAAA,EAAAA,QAAA,CAAyBD,QAAQ,CAAGrR,GAAAA,KAAK,EAAAsR,QAAA,CAAE,CAAA;EACxD,QAAA,IAAMG,SAAS,GAAG9G,MAAM,CAACC,IAAI,CAACvK,WAAW,CAAC,CAACjE,GAAG,CAAC,UAACE,GAAG,EAAI;EAAA,UAAA,IAAAsJ,IAAA,CAAA;EACrD,UAAA,IAAMuL,MAAM,GAAGK,OAAO,CAAClV,GAAG,CAAC,IAAIA,GAAG,CAAA;YAClC,OAAAsJ,IAAA,GAAAA,EAAAA,EAAAA,IAAA,CAAUuL,MAAM,CAAG9Q,GAAAA,WAAW,CAAC/D,GAAG,CAAC,EAAAsJ,IAAA,CAAA;EACrC,SAAC,CAAC,CAAA;EACF,QAAA,IAAM8L,UAAU,GAAG/G,MAAM,CAAC4D,MAAM,CAAA+B,KAAA,CAAb3F,MAAM,EAAA,CAAQ,EAAE,CAAA,CAAApM,MAAA,CAAKkT,SAAS,CAAC,CAAA,CAAA;UAElD3U,KAAA,CAAK6B,QAAQ,CAAC;EAAE4R,UAAAA,sBAAsB,EAAE,IAAA;EAAM,SAAA,CAAC,CAAA;UAE/CrS,QAAQ,CACNwT,UAAU,EACV3S,WAAW,IACTA,WAAW,IAAAwB,QAAA,CACNxB,EAAAA,EAAAA,WAAW,GAAAwS,SAAA,GAAA,EAAA,EAAAA,SAAA,CACbvR,KAAK,IAAGhB,cAAc,EAAAuS,SAAA,EACxB,CACJ,CAAA;SACF,CAAA;OACF,CAAA;EAAAzU,IAAAA,KAAA,CAiCD6U,cAAc,GAAG,UAACzU,MAAS,EAAA;EAAA,MAAA,OAAK,YAAK;EACnC,QAAA,IAAI,CAACA,MAAM,CAACsT,oBAAoB,EAAE;EAChC,UAAA,OAAA;EACD,SAAA;EACD,QAAA,IAAA/P,YAAA,GAAyC3D,KAAA,CAAKD,KAAK;YAA3CZ,QAAQ,GAAAwE,YAAA,CAARxE,QAAQ;YAAEiC,QAAQ,GAAAuC,YAAA,CAARvC,QAAQ;YAAEf,QAAQ,GAAAsD,YAAA,CAARtD,QAAQ,CAAA;EACpC,QAAA,IAAMkD,WAAW,GAAAE,QAAA,CAAA,EAAA,EAAQtE,QAAQ,CAAO,CAAA;UAExC,IAAIsF,IAAI,GAAuB/C,SAAS,CAAA;EACxC,QAAA,IAAIkG,4BAAQ,CAACxH,MAAM,CAACsT,oBAAoB,CAAC,EAAE;EACzCjP,UAAAA,IAAI,GAAGrE,MAAM,CAACsT,oBAAoB,CAACjP,IAAI,CAAA;EACvC,UAAA,IAAIqQ,QAAQ,GAAG1U,MAAM,CAACsT,oBAAoB,CAAA;YAC1C,IAAIqB,aAAO,IAAID,QAAQ,EAAE;EACvB,YAAA,IAAQxU,WAAW,GAAKD,QAAQ,CAAxBC,WAAW,CAAA;EACnBwU,YAAAA,QAAQ,GAAGxU,WAAW,CAACwH,cAAc,CAAC;gBAAEkN,IAAI,EAAEF,QAAQ,CAACC,aAAO,CAAA;eAAQ,EAAE5V,QAAQ,CAAC,CAAA;cACjFsF,IAAI,GAAGqQ,QAAQ,CAACrQ,IAAI,CAAA;EACrB,WAAA;YACD,IAAI,CAACA,IAAI,KAAKwQ,gBAAU,IAAIH,QAAQ,IAAII,gBAAU,IAAIJ,QAAQ,CAAC,EAAE;EAC/DrQ,YAAAA,IAAI,GAAG,QAAQ,CAAA;EAChB,WAAA;EACF,SAAA;UAED,IAAM4P,MAAM,GAAGrU,KAAA,CAAKiU,eAAe,CAAC,QAAQ,EAAE1Q,WAAW,CAAC,CAAA;EAC1D;UACAjB,uBAAG,CAACiB,WAAgC,EAAE8Q,MAAM,EAAErU,KAAA,CAAKmV,eAAe,CAAC1Q,IAAI,CAAC,CAAC,CAAA;UAEzErD,QAAQ,CAACmC,WAAW,CAAC,CAAA;SACtB,CAAA;EAAA,KAAA,CAAA;EAAA,IAAA,OAAAvD,KAAA,CAAA;EAAA,GAAA;EAAA,EAAA,IAAAsE,MAAA,GAAA6O,WAAA,CAAA5O,SAAA,CAAA;EA7KD;;;;EAIG;EAJHD,EAAAA,MAAA,CAKA8Q,UAAU,GAAV,SAAAA,UAAAA,CAAW1O,IAAY,EAAA;EACrB,IAAA,IAAQtG,MAAM,GAAK,IAAI,CAACL,KAAK,CAArBK,MAAM,CAAA;EACd,IAAA,OAAOhB,KAAK,CAACC,OAAO,CAACe,MAAM,CAAC8G,QAAQ,CAAC,IAAI9G,MAAM,CAAC8G,QAAQ,CAACmO,OAAO,CAAC3O,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;EAC/E,GAAA;EAEA;;;;;;;EAOG,MAPH;EA0GA;;;EAGG;EAHHpC,EAAAA,MAAA,CAIA6Q,eAAe,GAAf,SAAAA,eAAAA,CAAgB1Q,IAAyB,EAAA;MACvC,IACca,eAAe,GACzB,IAAI,CAACvF,KAAK,CADZM,QAAQ,CAAIiF,eAAe,CAAA;EAE7B,IAAA,QAAQb,IAAI;EACV,MAAA,KAAK,OAAO;EACV,QAAA,OAAO,EAAE,CAAA;EACX,MAAA,KAAK,SAAS;EACZ,QAAA,OAAO,KAAK,CAAA;EACd,MAAA,KAAK,MAAM;EACT,QAAA,OAAO,IAAI,CAAA;EACb,MAAA,KAAK,QAAQ;EACX,QAAA,OAAO,CAAC,CAAA;EACV,MAAA,KAAK,QAAQ;EACX,QAAA,OAAO,EAAE,CAAA;EACX,MAAA,KAAK,QAAQ,CAAA;EACb,MAAA;EACE;EACA,QAAA,OAAOa,eAAe,CAACO,wBAAkB,CAACyP,gBAAgB,CAAC,CAAA;EAAC,KAAA;EAElE,GAAA;EAEA;;;;EAIG,MAJH;EAiCA;EACG;EADHhR,EAAAA,MAAA,CAEAc,MAAM,GAAN,SAAAA,SAAM;EAAA,IAAA,IAAAiF,KAAA;QAAAkL,gBAAA;QAAAC,qBAAA;QAAAjP,MAAA,GAAA,IAAA,CAAA;EACJ,IAAA,IAAA1B,YAAA,GAgBI,IAAI,CAAC9E,KAAK;QAfJ0V,SAAS,GAAA5Q,YAAA,CAAjBzE,MAAM;QAAAsV,qBAAA,GAAA7Q,YAAA,CACNC,QAAQ;EAARA,MAAAA,QAAQ,GAAA4Q,qBAAA,KAAA,KAAA,CAAA,GAAG,EAAE,GAAAA,qBAAA;QACbvW,QAAQ,GAAA0F,YAAA,CAAR1F,QAAQ;QACR8C,WAAW,GAAA4C,YAAA,CAAX5C,WAAW;QACX2B,QAAQ,GAAAiB,YAAA,CAARjB,QAAQ;QACR8C,IAAI,GAAA7B,YAAA,CAAJ6B,IAAI;QAAAiP,qBAAA,GAAA9Q,YAAA,CACJqC,QAAQ;EAARA,MAAAA,QAAQ,GAAAyO,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAC,qBAAA,GAAA/Q,YAAA,CAChB+B,QAAQ;EAARA,MAAAA,QAAQ,GAAAgP,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAC,qBAAA,GAAAhR,YAAA,CAChBiC,QAAQ;EAARA,MAAAA,QAAQ,GAAA+O,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAChBzM,SAAS,GAAAvE,YAAA,CAATuE,SAAS;QACT/B,QAAQ,GAAAxC,YAAA,CAARwC,QAAQ;QACRE,WAAW,GAAA1C,YAAA,CAAX0C,WAAW;QACXJ,MAAM,GAAAtC,YAAA,CAANsC,MAAM;QACNC,OAAO,GAAAvC,YAAA,CAAPuC,OAAO;QACP/G,QAAQ,GAAAwE,YAAA,CAARxE,QAAQ,CAAA;EAGV,IAAA,IAAQuM,MAAM,GAAiEvM,QAAQ,CAA/EuM,MAAM;QAAElF,WAAW,GAAoDrH,QAAQ,CAAvEqH,WAAW;QAAEpH,WAAW,GAAuCD,QAAQ,CAA1DC,WAAW;QAAEgF,eAAe,GAAsBjF,QAAQ,CAA7CiF,eAAe;QAAEL,eAAe,GAAK5E,QAAQ,CAA5B4E,eAAe,CAAA;EAC1E,IAAA,IAAQ6H,WAAW,GAAKF,MAAM,CAAtBE,WAAW,CAAA;MACnB,IAAM1M,MAAM,GAAME,WAAW,CAACwH,cAAc,CAAC2N,SAAS,EAAEtW,QAAQ,CAAC,CAAA;EACjE,IAAA,IAAMqG,SAAS,GAAGR,kBAAY,CAAUF,QAAQ,EAAEG,eAAe,CAAC,CAAA;EAClE,IAAA,IAAA6Q,kBAAA,GAA8C1V,MAAM,CAA5C2V,UAAU;EAAEC,MAAAA,gBAAgB,GAAAF,kBAAA,KAAA,KAAA,CAAA,GAAG,EAAE,GAAAA,kBAAA,CAAA;EAEzC,IAAA,IAAMrO,KAAK,GAAA4C,CAAAA,KAAA,IAAAkL,gBAAA,GAAG/P,SAAS,CAACiC,KAAK,KAAA8N,IAAAA,GAAAA,gBAAA,GAAInV,MAAM,CAACqH,KAAK,KAAA4C,IAAAA,GAAAA,KAAA,GAAI3D,IAAI,CAAA;EACrD,IAAA,IAAMuP,WAAW,GAAA,CAAAT,qBAAA,GAAGhQ,SAAS,CAACyQ,WAAW,KAAA,IAAA,GAAAT,qBAAA,GAAIpV,MAAM,CAAC6V,WAAW,CAAA;EAC/D,IAAA,IAAIC,iBAA2B,CAAA;MAC/B,IAAI;EACF,MAAA,IAAMH,UAAU,GAAGlI,MAAM,CAACC,IAAI,CAACkI,gBAAgB,CAAC,CAAA;QAChDE,iBAAiB,GAAGC,qBAAe,CAACJ,UAAU,EAAEvQ,SAAS,CAAC4Q,KAAK,CAAC,CAAA;OACjE,CAAC,OAAOC,GAAG,EAAE;QACZ,OACEtE;qBACEpM,cAAG,CAAA,GAAA,EAAA;EAAAiD,UAAAA,SAAS,EAAC,cAAc;EAAC0N,UAAAA,KAAK,EAAE;EAAEC,YAAAA,KAAK,EAAE,KAAA;aAAO;EACjDvI,UAAAA,QAAA,EAAArI,cAAA,CAAC6Q,4BAAQ,EACN;EAAAxI,YAAAA,QAAA,EAAA1I,eAAe,CAACO,wBAAkB,CAAC4Q,kBAAkB,EAAE,CAAC/P,IAAI,IAAI,MAAM,EAAG2P,GAAa,CAACK,OAAO,CAAC,CAAA;aACvF,CAAA;EAAA,SAAA,CACT,EACJ/Q,cAAM,CAAA,KAAA,EAAA;EAAAqI,UAAAA,QAAA,EAAA2I,IAAI,CAACC,SAAS,CAACxW,MAAM,CAAA;EAAC,SAAA,CAAO,CAAA;EAC/B,OAAA,CAAA,CAAA;EAET,KAAA;MAED,IAAMyI,QAAQ,GAAGnD,iBAAW,CAAiC,qBAAqB,EAAErF,QAAQ,EAAEmF,SAAS,CAAC,CAAA;EAExG,IAAA,IAAMqR,aAAa,GAAG;EACpB;QACApP,KAAK,EAAEjC,SAAS,CAACwE,KAAK,KAAK,KAAK,GAAG,EAAE,GAAGvC,KAAK;QAC7CwO,WAAW,EAAEzQ,SAAS,CAACwE,KAAK,KAAK,KAAK,GAAGtI,SAAS,GAAGuU,WAAW;EAChEF,MAAAA,UAAU,EAAEG,iBAAiB,CAAC5W,GAAG,CAAC,UAACoH,IAAI,EAAI;EACzC,QAAA,IAAMkN,2BAA2B,GAAGrG,uBAAG,CAACnN,MAAM,EAAE,CAAC0W,oBAAc,EAAEpQ,IAAI,EAAEqQ,8BAAwB,CAAC,CAAC,CAAA;UACjG,IAAMC,aAAa,GAAGpD,2BAA2B,GAAG9O,QAAQ,CAAC4O,oBAAoB,GAAG5O,QAAQ,CAAC4B,IAAI,CAAC,CAAA;UAClG,IAAMuQ,MAAM,GAAGjS,kBAAY,CAAUgS,aAAa,CAAC,CAACvN,MAAM,KAAK,QAAQ,CAAA;EACvE,QAAA,IAAMyN,aAAa,GAAgB3I,uBAAG,CAAC3K,QAAQ,EAAE,CAAC8C,IAAI,CAAC,EAAE,EAAE,CAAC,CAAA;UAE5D,OAAO;EACLyQ,UAAAA,OAAO,EACLxR,cAAC,CAAAmH,WAAW,EAEV;EAAApG,YAAAA,IAAI,EAAEA,IAAI;EACVQ,YAAAA,QAAQ,EAAEX,MAAI,CAAC6O,UAAU,CAAC1O,IAAI,CAAC;EAC/BtG,YAAAA,MAAM,EAAEmO,uBAAG,CAACnO,MAAM,EAAE,CAAC0W,oBAAc,EAAEpQ,IAAI,CAAC,EAAE,EAAE,CAAC;EAC/C5B,YAAAA,QAAQ,EAAEkS,aAAa;EACvB/U,YAAAA,WAAW,EAAEsM,uBAAG,CAACtM,WAAW,EAAEyE,IAAI,CAAC;EACnC9C,YAAAA,QAAQ,EAAEsT,aAAa;EACvB7P,YAAAA,QAAQ,EAAEA,QAAQ;EAClBE,YAAAA,WAAW,EAAEA,WAAW;EACxBpI,YAAAA,QAAQ,EAAEoP,uBAAG,CAACpP,QAAQ,EAAEuH,IAAI,CAAC;EAC7BgB,YAAAA,WAAW,EAAEA,WAAW;EACxB+L,YAAAA,sBAAsB,EAAElN,MAAI,CAAClF,KAAK,CAACoS,sBAAsB;EACzDa,YAAAA,WAAW,EAAE/N,MAAI,CAAC+N,WAAW,CAAC5N,IAAI,CAAC;cACnCtF,QAAQ,EAAEmF,MAAI,CAACoN,gBAAgB,CAACjN,IAAI,EAAEkN,2BAA2B,CAAC;EAClEzM,YAAAA,MAAM,EAAEA,MAAM;EACdC,YAAAA,OAAO,EAAEA,OAAO;EAChB/G,YAAAA,QAAQ,EAAEA,QAAQ;EAClBuG,YAAAA,QAAQ,EAAEA,QAAQ;EAClBE,YAAAA,QAAQ,EAAEA,QAAQ;EAClBsC,YAAAA,SAAS,EAAEA,SAAS;cACpB0K,mBAAmB,EAAEvN,MAAI,CAACuN,mBAAAA;aApBrB,EAAApN,IAAI,CAsBZ;EACDA,UAAAA,IAAI,EAAJA,IAAI;EACJI,UAAAA,QAAQ,EAARA,QAAQ;EACRF,UAAAA,QAAQ,EAARA,QAAQ;EACRM,UAAAA,QAAQ,EAARA,QAAQ;EACR+P,UAAAA,MAAM,EAANA,MAAAA;WACD,CAAA;EACH,OAAC,CAAC;EACFnQ,MAAAA,QAAQ,EAARA,QAAQ;EACRF,MAAAA,QAAQ,EAARA,QAAQ;EACRM,MAAAA,QAAQ,EAARA,QAAQ;EACRtD,MAAAA,QAAQ,EAARA,QAAQ;EACRkB,MAAAA,QAAQ,EAARA,QAAQ;EACR1E,MAAAA,MAAM,EAANA,MAAM;EACNjB,MAAAA,QAAQ,EAARA,QAAQ;EACRuI,MAAAA,WAAW,EAAXA,WAAW;EACXrH,MAAAA,QAAQ,EAARA,QAAAA;OACD,CAAA;EACD,IAAA,OAAOsF,cAAA,CAACkD,QAAQ,EAAApF,QAAA,KAAKoT,aAAa,EAAA;QAAEhW,UAAU,EAAE,IAAI,CAACgU,cAAAA;OAAkB,CAAA,CAAA,CAAA;KACxE,CAAA;EAAA,EAAA,OAAA1B,WAAA,CAAA;EAAA,CAAA,CA/R0GzE,eAG5G,CAAA;;;ECjBD;EACA,IAAM0I,eAAe,GAA8B;EACjDC,EAAAA,KAAK,EAAE,YAAY;EACnB,EAAA,SAAA,EAAS,cAAc;EACvBC,EAAAA,OAAO,EAAE,aAAa;EACtBC,EAAAA,MAAM,EAAE,aAAa;EACrBC,EAAAA,MAAM,EAAE,aAAa;EACrBC,EAAAA,MAAM,EAAE,aAAa;IACrB,MAAM,EAAA,WAAA;GACP,CAAA;EAED;;;;;;;;;EASG;EACH,SAASC,iBAAiBA,CACxBtX,MAAS,EACToF,SAAiC,EACjC5B,QAAqB,EACrBvD,QAA2B,EAAA;EAE3B,EAAA,IAAMsX,KAAK,GAAGnS,SAAS,CAACmS,KAAK,CAAA;EAC7B,EAAA,IAAQ/K,MAAM,GAAsBvM,QAAQ,CAApCuM,MAAM;MAAEtH,eAAe,GAAKjF,QAAQ,CAA5BiF,eAAe,CAAA;EAC/B,EAAA,IAAI,OAAOqS,KAAK,KAAK,UAAU,EAAE;EAC/B,IAAA,OAAOA,KAAK,CAAA;EACb,GAAA;IACD,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,IAAI/K,MAAM,EAAE;MAChD,OAAOA,MAAM,CAAC+K,KAAK,CAAC,CAAA;EACrB,GAAA;EAED,EAAA,IAAMC,UAAU,GAAGC,mBAAa,CAACzX,MAAM,CAAC,CAAA;EACxC,EAAA,IAAMqE,IAAI,GAAWrF,KAAK,CAACC,OAAO,CAACuY,UAAU,CAAC,GAAGA,UAAU,CAAC,CAAC,CAAC,GAAGA,UAAU,IAAI,EAAE,CAAA;EACjF,EAAA,IAAME,aAAa,GAAGV,eAAe,CAAC3S,IAAI,CAAC,CAAA;EAE3C;EACA;IACA,IAAI,CAACqT,aAAa,KAAK1X,MAAM,CAAC2X,KAAK,IAAI3X,MAAM,CAAC8O,KAAK,CAAC,EAAE;MACpD,OAAO,YAAA;EAAA,MAAA,OAAM,IAAI,CAAA;EAAA,KAAA,CAAA;EAClB,GAAA;IAED,OAAO4I,aAAa,IAAIlL,MAAM,GAC1BA,MAAM,CAACkL,aAAa,CAAC,GACrB,YAAK;MACH,IAAMrS,wBAAwB,GAAGC,iBAAW,CAC1C,0BAA0B,EAC1BrF,QAAQ,EACRmF,SAAS,CACV,CAAA;MAED,OACEG,cAAA,CAACF,wBAAwB,EAAA;EACvBrF,MAAAA,MAAM,EAAEA,MAAM;EACdwD,MAAAA,QAAQ,EAAEA,QAAQ;EAClBgC,MAAAA,MAAM,EAAEN,eAAe,CAACO,wBAAkB,CAACmS,gBAAgB,EAAE,CAAClG,MAAM,CAAC1R,MAAM,CAACqE,IAAI,CAAC,CAAC,CAAC;EACnFpE,MAAAA,QAAQ,EAAEA,QAAAA;EAAQ,KAAA,CAClB,CAAA;KAEL,CAAA;EACP,CAAA;EAEA;;;;;EAKG;EACH,SAAS4X,iBAAiBA,CACxBlY,KAA0B,EAAA;EAE1B,EAAA,IACUmY,OAAO,GAcbnY,KAAK,CAdPK,MAAM;MACI+X,SAAS,GAajBpY,KAAK,CAbP6D,QAAQ;MACRkB,QAAQ,GAYN/E,KAAK,CAZP+E,QAAQ;MACR3F,QAAQ,GAWNY,KAAK,CAXPZ,QAAQ;MACR8C,WAAW,GAUTlC,KAAK,CAVPkC,WAAW;MACXoF,QAAQ,GASNtH,KAAK,CATPsH,QAAQ;MACRE,WAAW,GAQTxH,KAAK,CARPwH,WAAW;MACXb,IAAI,GAOF3G,KAAK,CAPP2G,IAAI;MACJtF,QAAQ,GAMNrB,KAAK,CANPqB,QAAQ;MACRkT,WAAW,GAKTvU,KAAK,CALPuU,WAAW;MACXR,mBAAmB,GAIjB/T,KAAK,CAJP+T,mBAAmB;MACnB5M,QAAQ,GAGNnH,KAAK,CAHPmH,QAAQ;MACR7G,QAAQ,GAENN,KAAK,CAFPM,QAAQ;MAAA+X,qBAAA,GAENrY,KAAK,CADP0T,sBAAsB;EAAtBA,IAAAA,sBAAsB,GAAA2E,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA,CAAA;EAEhC,EAAA,IAAQ1Q,WAAW,GAAmCrH,QAAQ,CAAtDqH,WAAW;MAAEpH,WAAW,GAAsBD,QAAQ,CAAzCC,WAAW;MAAE2E,eAAe,GAAK5E,QAAQ,CAA5B4E,eAAe,CAAA;EACjD,EAAA,IAAMO,SAAS,GAAGR,kBAAY,CAAUF,QAAQ,EAAEG,eAAe,CAAC,CAAA;IAClE,IAAMoT,aAAa,GAAG3S,iBAAW,CAA2B,eAAe,EAAErF,QAAQ,EAAEmF,SAAS,CAAC,CAAA;IACjG,IAAM8S,wBAAwB,GAAG5S,iBAAW,CAC1C,0BAA0B,EAC1BrF,QAAQ,EACRmF,SAAS,CACV,CAAA;IACD,IAAM+S,iBAAiB,GAAG7S,iBAAW,CAA+B,mBAAmB,EAAErF,QAAQ,EAAEmF,SAAS,CAAC,CAAA;IAC7G,IAAMgT,kBAAkB,GAAG9S,iBAAW,CAAgC,oBAAoB,EAAErF,QAAQ,EAAEmF,SAAS,CAAC,CAAA;IAChH,IAAMpF,MAAM,GAAGE,WAAW,CAACwH,cAAc,CAACoQ,OAAO,EAAE/Y,QAAQ,CAAC,CAAA;EAC5D,EAAA,IAAMsZ,OAAO,GAAGN,SAAS,CAACO,YAAM,CAAC,CAAA;IACjC,IAAM9U,QAAQ,GAAG+U,kBAAY,CAC3BrY,WAAW,CAAC+H,UAAU,CAACjI,MAAM,EAAEqY,OAAO,EAAEtZ,QAAQ,EAAEkI,QAAQ,EAAEE,WAAW,CAAC,EACxE4Q,SAAS,CACK,CAAA;EAEhB;;EAEG;IACH,IAAMS,0BAA0B,GAAGjG,iBAAW,CAC5C,UAACxT,QAAuB,EAAE+C,cAA+B,EAAEiB,EAAW,EAAI;EACxE,IAAA,IAAM0V,KAAK,GAAG1V,EAAE,IAAIsV,OAAO,CAAA;EAC3B,IAAA,OAAOrX,QAAQ,CAACjC,QAAQ,EAAE+C,cAAc,EAAE2W,KAAK,CAAC,CAAA;EAClD,GAAC,EACD,CAACJ,OAAO,EAAErX,QAAQ,CAAC,CACpB,CAAA;IAED,IAAM0X,cAAc,GAAGpB,iBAAiB,CAAUtX,MAAM,EAAEoF,SAAS,EAAE5B,QAAQ,EAAEvD,QAAQ,CAAC,CAAA;IACxF,IAAMuG,QAAQ,GAAGmS,OAAO,CAAChZ,KAAK,CAAC6G,QAAQ,IAAIpB,SAAS,CAACoB,QAAQ,CAAC,CAAA;IAC9D,IAAME,QAAQ,GAAGiS,OAAO,CAAChZ,KAAK,CAAC+G,QAAQ,IAAItB,SAAS,CAACsB,QAAQ,IAAI/G,KAAK,CAACK,MAAM,CAAC4Y,QAAQ,IAAI5Y,MAAM,CAAC4Y,QAAQ,CAAC,CAAA;EAC1G,EAAA,IAAMC,iBAAiB,GAAGzT,SAAS,CAAC4D,SAAS,CAAA;EAC7C;EACA,EAAA,IAAMA,SAAS,GAAG6P,iBAAiB,KAAKvX,SAAS,GAAG3B,KAAK,CAACqJ,SAAS,GAAG2P,OAAO,CAACE,iBAAiB,CAAC,CAAA;IAChG,IAAMjS,SAAS,GAAG+R,OAAO,CAAChZ,KAAK,CAACiH,SAAS,IAAIxB,SAAS,CAACwB,SAAS,CAAC,CAAA;IACjE,IAAI6G,MAAM,CAACC,IAAI,CAAC1N,MAAM,CAAC,CAACgE,MAAM,KAAK,CAAC,EAAE;EACpC,IAAA,OAAO,IAAI,CAAA;EACZ,GAAA;IAED,IAAM6F,YAAY,GAAG3J,WAAW,CAAC4J,eAAe,CAAC9J,MAAM,EAAE0E,QAAQ,EAAEG,eAAe,CAAC,CAAA;EAEnF,EAAA,IAAA6D,IAAA,GAA0C7G,WAAW,IAAI,EAAE;MAAnDiX,QAAQ,GAAApQ,IAAA,CAARoQ,QAAQ;EAAK5H,IAAAA,gBAAgB,GAAA1H,6BAAA,CAAAd,IAAA,EAAAe,WAAA,CAAA,CAAA;EACrC;EACA,EAAA,IAAMmN,aAAa,GAAGzF,wBAAI,CAACzM,QAAQ,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC,CAAA;IACjF,IAAIqU,oBAAc,IAAInC,aAAa,EAAE;EACnCA,IAAAA,aAAa,CAACmC,oBAAc,CAAC,GAAG5H,wBAAI,CAACyF,aAAa,CAACmC,oBAAc,CAAC,EAAE,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC,CAAA;EAC7F,GAAA;IAED,IAAMxB,KAAK,GACThS,cAAC,CAAAmT,cAAc,EAAArV,QAAA,KACT1D,KAAK,EAAA;EACTqB,IAAAA,QAAQ,EAAEwX,0BAA0B;EACpChV,IAAAA,QAAQ,EAAEA,QAAQ;EAClBxD,IAAAA,MAAM,EAAEA,MAAM;EACd0E,IAAAA,QAAQ,EAAEkS,aAAa;EACvBpQ,IAAAA,QAAQ,EAAEA,QAAQ;EAClBE,IAAAA,QAAQ,EAAEA,QAAQ;EAClBsC,IAAAA,SAAS,EAAEA,SAAS;EACpBpC,IAAAA,SAAS,EAAEA,SAAS;EACpB/E,IAAAA,WAAW,EAAEqP,gBAAgB;EAC7B5J,IAAAA,WAAW,EAAEA,WAAW;EACxBF,IAAAA,SAAS,EAAE0R,QAAAA;KAEd,CAAA,CAAA,CAAA;EAED,EAAA,IAAM/V,EAAE,GAAGS,QAAQ,CAAC8U,YAAM,CAAC,CAAA;EAE3B;EACA,EAAA,IAAI1O,KAAK,CAAA;EACT,EAAA,IAAIyJ,sBAAsB,EAAE;EAC1BzJ,IAAAA,KAAK,GAAGtD,IAAI,CAAA;EACb,GAAA,MAAM;MACLsD,KAAK,GAAG+M,8BAAwB,IAAI3W,MAAM,GAAGsG,IAAI,GAAGlB,SAAS,CAACiC,KAAK,IAAI1H,KAAK,CAACK,MAAM,CAACqH,KAAK,IAAIrH,MAAM,CAACqH,KAAK,IAAIf,IAAI,CAAA;EAClH,GAAA;EAED,EAAA,IAAMuP,WAAW,GAAGzQ,SAAS,CAACyQ,WAAW,IAAIlW,KAAK,CAACK,MAAM,CAAC6V,WAAW,IAAI7V,MAAM,CAAC6V,WAAW,IAAI,EAAE,CAAA;EACjG,EAAA,IAAMmD,IAAI,GAAG5T,SAAS,CAAC4T,IAAI,CAAA;EAC3B,EAAA,IAAMnC,MAAM,GAAGzR,SAAS,CAACiE,MAAM,KAAK,QAAQ,CAAA;IAE5C,IAAM4P,UAAU,GAAG,CAAC,YAAY,EAAE,OAAO,EAAWjZ,QAAAA,GAAAA,MAAM,CAACqE,IAAI,CAAG,CAAA;IAClE,IAAI,CAAC2E,SAAS,IAAI8P,QAAQ,IAAIA,QAAQ,CAAC9U,MAAM,GAAG,CAAC,EAAE;EACjDiV,IAAAA,UAAU,CAACzX,IAAI,CAAC,kCAAkC,CAAC,CAAA;EACpD,GAAA;EACD,EAAA,IAAIkD,QAAQ,KAARA,IAAAA,IAAAA,QAAQ,eAARA,QAAQ,CAAEuU,UAAU,EAAE;EACxB,IAA2C;EACzCC,MAAAA,OAAO,CAACC,IAAI,CACV,yGAAyG,CAC1G,CAAA;EACF,KAAA;EACDF,IAAAA,UAAU,CAACzX,IAAI,CAACkD,QAAQ,CAACuU,UAAU,CAAC,CAAA;EACrC,GAAA;IACD,IAAI7T,SAAS,CAAC6T,UAAU,EAAE;EACxBA,IAAAA,UAAU,CAACzX,IAAI,CAAC4D,SAAS,CAAC6T,UAAU,CAAC,CAAA;EACtC,GAAA;EAED,EAAA,IAAMG,aAAa,GACjB7T,eAAC4S,iBAAiB,EAAA;EAChBa,IAAAA,IAAI,EAAEA,IAAI;EACVxV,IAAAA,QAAQ,EAAEA,QAAQ;EAClBxD,IAAAA,MAAM,EAAEA,MAAM;EACd0E,IAAAA,QAAQ,EAAEA,QAAQ;MAClB2U,SAAS,EAAE,CAACrQ,SAAS,IAAI8P,QAAQ,IAAIA,QAAQ,CAAC9U,MAAM,GAAG,CAAC;EACxD/D,IAAAA,QAAQ,EAAEA,QAAAA;EAAQ,GAAA,CAErB,CAAA;IACD,IAAMqZ,eAAe,GAAGtQ,SAAS,GAAG1H,SAAS,GAC3CiE,cAAC,CAAA6S,kBAAkB;EACjBmB,IAAAA,MAAM,EAAET,QAAQ;EAChBjX,IAAAA,WAAW,EAAEA,WAAW;EACxB2B,IAAAA,QAAQ,EAAEA,QAAQ;EAClBxD,IAAAA,MAAM,EAAEA,MAAM;EACd0E,IAAAA,QAAQ,EAAEA,QAAQ;EAClBzE,IAAAA,QAAQ,EAAEA,QAAAA;EAAQ,GAAA,CAErB,CAAA;EACD,EAAA,IAAMuZ,UAAU,GAAkD;EAChE3D,IAAAA,WAAW,EACTtQ,cAAC,CAAA2S,wBAAwB,EACvB;EAAAnV,MAAAA,EAAE,EAAE0W,mBAAa,CAAI1W,EAAE,CAAC;EACxB8S,MAAAA,WAAW,EAAEA,WAAW;EACxB7V,MAAAA,MAAM,EAAEA,MAAM;EACd0E,MAAAA,QAAQ,EAAEA,QAAQ;EAClBzE,MAAAA,QAAQ,EAAEA,QAAAA;EAAQ,KAAA,CAErB;EACDyZ,IAAAA,cAAc,EAAE7D,WAAW;EAC3BmD,IAAAA,IAAI,EAAEI,aAAa;MACnBO,OAAO,EAAE,OAAOX,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAG1X,SAAS;EACpDiY,IAAAA,MAAM,EAAED,eAAe;EACvBlS,IAAAA,SAAS,EAAE4B,SAAS,GAAG1H,SAAS,GAAGwX,QAAQ;EAC3C/V,IAAAA,EAAE,EAAFA,EAAE;EACF6G,IAAAA,KAAK,EAALA,KAAK;EACLiN,IAAAA,MAAM,EAANA,MAAM;EACN7V,IAAAA,QAAQ,EAARA,QAAQ;EACRkT,IAAAA,WAAW,EAAXA,WAAW;EACXR,IAAAA,mBAAmB,EAAnBA,mBAAmB;EACnB5M,IAAAA,QAAQ,EAARA,QAAQ;EACRN,IAAAA,QAAQ,EAARA,QAAQ;EACRE,IAAAA,QAAQ,EAARA,QAAQ;EACRsC,IAAAA,SAAS,EAATA,SAAS;EACTa,IAAAA,YAAY,EAAZA,YAAY;MACZoP,UAAU,EAAEA,UAAU,CAACW,IAAI,CAAC,GAAG,CAAC,CAACC,IAAI,EAAE;MACvC3D,KAAK,EAAE9Q,SAAS,CAAC8Q,KAAK;EACtB5O,IAAAA,WAAW,EAAXA,WAAW;EACXvI,IAAAA,QAAQ,EAARA,QAAQ;EACRiB,IAAAA,MAAM,EAANA,MAAM;EACN0E,IAAAA,QAAQ,EAARA,QAAQ;EACRzE,IAAAA,QAAQ,EAARA,QAAAA;KACD,CAAA;EAED,EAAA,IAAM6Z,WAAW,GAAG7Z,QAAQ,CAACuM,MAAM,CAAC+C,UAAU,CAAA;EAC9C,EAAA,IAAMwK,WAAW,GAAG9Z,QAAQ,CAACuM,MAAM,CAACwN,UAAU,CAAA;IAC9C,IAAMC,qBAAqB,GAAG,CAAAvV,QAAQ,aAARA,QAAQ,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAARA,QAAQ,CAAG,UAAU,CAAC,KAAI,CAAAA,QAAQ,aAARA,QAAQ,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAARA,QAAQ,CAAG,4BAA4B,CAAC,MAAK,IAAI,CAAA;EAEzG,EAAA,OACEa,cAAA,CAAC0S,aAAa,EAAA5U,QAAA,KAAKmW,UAAU,EAAA;EAAA5L,IAAAA,QAAA,EAC3B+D,eACG,CAAAuI,mBAAA,EAAA;QAAAtM,QAAA,EAAA,CAAA2J,KAAK,EAMLvX,MAAM,CAAC2X,KAAK,IAAI,CAACsC,qBAAqB,IAAI,CAAC/Z,WAAW,CAACia,QAAQ,CAACna,MAAM,CAAC,IACtEuF,cAAC,CAAAuU,WAAW,EACV;EAAAxT,QAAAA,IAAI,EAAEA,IAAI;EACVE,QAAAA,QAAQ,EAAEA,QAAQ;EAClBE,QAAAA,QAAQ,EAAEA,QAAQ;EAClBsC,QAAAA,SAAS,EAAEA,SAAS;EACpBnH,QAAAA,WAAW,EAAEA,WAAW;EACxB9C,QAAAA,QAAQ,EAAEA,QAAQ;EAClBuI,QAAAA,WAAW,EAAEA,WAAW;EACxBL,QAAAA,QAAQ,EAAEA,QAAQ;EAClBzD,QAAAA,QAAQ,EAAEA,QAAQ;EAClB2D,QAAAA,WAAW,EAAEA,WAAW;UACxBJ,MAAM,EAAEpH,KAAK,CAACoH,MAAM;UACpB/F,QAAQ,EAAErB,KAAK,CAACqB,QAAQ;UACxBgG,OAAO,EAAErH,KAAK,CAACqH,OAAO;UACtBuC,OAAO,EAAEvJ,MAAM,CAAC2X,KAAK,CAACzY,GAAG,CAAC,UAAC4Y,OAAO,EAAA;EAAA,UAAA,OAChC5X,WAAW,CAACwH,cAAc,CAACF,4BAAQ,CAACsQ,OAAO,CAAC,GAAIA,OAAa,GAAI,EAAQ,EAAE/Y,QAAQ,CAAC,CAAA;WACrF,CAAA;UACD2R,QAAQ,EAAE1Q,MAAM,CAACqE,IAAI;EACrBpE,QAAAA,QAAQ,EAAEA,QAAQ;EAClBD,QAAAA,MAAM,EAAEA,MAAM;EACd0E,QAAAA,QAAQ,EAAEA,QAAAA;SAAQ,CAErB,EACA1E,MAAM,CAAC8O,KAAK,IAAI,CAACmL,qBAAqB,IAAI,CAAC/Z,WAAW,CAACia,QAAQ,CAACna,MAAM,CAAC,IACtEuF,cAAA,CAACwU,WAAW,EAAA;EACVzT,QAAAA,IAAI,EAAEA,IAAI;EACVE,QAAAA,QAAQ,EAAEA,QAAQ;EAClBE,QAAAA,QAAQ,EAAEA,QAAQ;EAClBsC,QAAAA,SAAS,EAAEA,SAAS;EACpBnH,QAAAA,WAAW,EAAEA,WAAW;EACxB9C,QAAAA,QAAQ,EAAEA,QAAQ;EAClBuI,QAAAA,WAAW,EAAEA,WAAW;EACxBL,QAAAA,QAAQ,EAAEA,QAAQ;EAClBzD,QAAAA,QAAQ,EAAEA,QAAQ;EAClB2D,QAAAA,WAAW,EAAEA,WAAW;UACxBJ,MAAM,EAAEpH,KAAK,CAACoH,MAAM;UACpB/F,QAAQ,EAAErB,KAAK,CAACqB,QAAQ;UACxBgG,OAAO,EAAErH,KAAK,CAACqH,OAAO;UACtBuC,OAAO,EAAEvJ,MAAM,CAAC8O,KAAK,CAAC5P,GAAG,CAAC,UAAC4Y,OAAO,EAAA;EAAA,UAAA,OAChC5X,WAAW,CAACwH,cAAc,CAACF,4BAAQ,CAACsQ,OAAO,CAAC,GAAIA,OAAa,GAAI,EAAQ,EAAE/Y,QAAQ,CAAC,CAAA;WACrF,CAAA;UACD2R,QAAQ,EAAE1Q,MAAM,CAACqE,IAAI;EACrBpE,QAAAA,QAAQ,EAAEA,QAAQ;EAClBD,QAAAA,MAAM,EAAEA,MAAM;EACd0E,QAAAA,QAAQ,EAAEA,QAAAA;EACV,OAAA,CACH,CAAA;OACA,CAAA;KACW,CAAA,CAAA,CAAA;EAEpB,CAAA;EAEA;;EAEG;EAFH,IAGMgI,WAA+F,0BAAAjN,UAAA,EAAA;IAAAC,cAAA,CAAAgN,WAAA,EAAAjN,UAAA,CAAA,CAAA;EAAA,EAAA,SAAAiN,WAAA,GAAA;EAAA,IAAA,OAAAjN,UAAA,CAAA2T,KAAA,CAAA,IAAA,EAAAH,SAAA,CAAA,IAAA,IAAA,CAAA;EAAA,GAAA;EAAA,EAAA,IAAA/O,MAAA,GAAAwI,WAAA,CAAAvI,SAAA,CAAA;EAAAD,EAAAA,MAAA,CAGnGkW,qBAAqB,GAArB,SAAAA,qBAAAA,CAAsBxW,SAAwC,EAAA;MAC5D,OAAO,CAAC0M,gBAAU,CAAC,IAAI,CAAC3Q,KAAK,EAAEiE,SAAS,CAAC,CAAA;KAC1C,CAAA;EAAAM,EAAAA,MAAA,CAEDc,MAAM,GAAN,SAAAA,SAAM;MACJ,OAAOO,eAACsS,iBAAiB,EAAAxU,QAAA,CAAc,EAAA,EAAA,IAAI,CAAC1D,KAAK,CAAI,CAAA,CAAA;KACtD,CAAA;EAAA,EAAA,OAAA+M,WAAA,CAAA;EAAA,CAAA,CAT0G4B,eAE5G,CAAA;;;ECtUD;;;EAGG;EACH,SAAS+D,WAAWA,CAClB1S,KAA0B,EAAA;EAAA,EAAA,IAAA+I,IAAA,CAAA;EAE1B,EAAA,IACE1I,MAAM,GAcJL,KAAK,CAdPK,MAAM;MACNsG,IAAI,GAaF3G,KAAK,CAbP2G,IAAI;MACJ5B,QAAQ,GAYN/E,KAAK,CAZP+E,QAAQ;MACRlB,QAAQ,GAWN7D,KAAK,CAXP6D,QAAQ;MACRzE,QAAQ,GAUNY,KAAK,CAVPZ,QAAQ;MACR+H,QAAQ,GASNnH,KAAK,CATPmH,QAAQ;MAAAuT,eAAA,GASN1a,KAAK,CARP6G,QAAQ;EAARA,IAAAA,QAAQ,GAAA6T,eAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,eAAA;MAAAC,eAAA,GAQd3a,KAAK,CAPP+G,QAAQ;EAARA,IAAAA,QAAQ,GAAA4T,eAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,eAAA;MAAAC,gBAAA,GAOd5a,KAAK,CANPiH,SAAS;EAATA,IAAAA,SAAS,GAAA2T,gBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,gBAAA;MACjBvZ,QAAQ,GAKNrB,KAAK,CALPqB,QAAQ;MACR+F,MAAM,GAIJpH,KAAK,CAJPoH,MAAM;MACNC,OAAO,GAGLrH,KAAK,CAHPqH,OAAO;MACP/G,QAAQ,GAENN,KAAK,CAFPM,QAAQ;MACRmH,SAAS,GACPzH,KAAK,CADPyH,SAAS,CAAA;EAEX,EAAA,IAAQC,KAAK,GAAarH,MAAM,CAAxBqH,KAAK;MAAEmT,MAAM,GAAKxa,MAAM,CAAjBwa,MAAM,CAAA;EACrB,EAAA,IAAQrR,OAAO,GAAgDlJ,QAAQ,CAA/DkJ,OAAO;MAAE7B,WAAW,GAAmCrH,QAAQ,CAAtDqH,WAAW;MAAEpH,WAAW,GAAsBD,QAAQ,CAAzCC,WAAW;MAAE2E,eAAe,GAAK5E,QAAQ,CAA5B4E,eAAe,CAAA;EAC1D,EAAA,IAAM2F,WAAW,GAAGtK,WAAW,CAACia,QAAQ,CAACna,MAAM,CAAC,GAAGyK,iBAAW,CAACzK,MAAM,CAAC,GAAGsB,SAAS,CAAA;EAClF,EAAA,IAAImZ,aAAa,GAAGjQ,WAAW,GAAG,QAAQ,GAAG,MAAM,CAAA;IACnD,IAAIgQ,MAAM,IAAIE,eAAS,CAAU1a,MAAM,EAAEwa,MAAM,EAAErR,OAAO,CAAC,EAAE;EACzDsR,IAAAA,aAAa,GAAGD,MAAM,CAAA;EACvB,GAAA;EACD,EAAA,IAAA7V,aAAA,GAAiFC,kBAAY,CAAUF,QAAQ,CAAC;MAAA8J,oBAAA,GAAA7J,aAAA,CAAxG0E,MAAM;EAANA,IAAAA,MAAM,GAAAmF,oBAAA,KAAGiM,KAAAA,CAAAA,GAAAA,aAAa,GAAAjM,oBAAA;MAAAmM,qBAAA,GAAAhW,aAAA,CAAEsE,WAAW;EAAXA,IAAAA,WAAW,GAAA0R,qBAAA,KAAG,KAAA,CAAA,GAAA,EAAE,GAAAA,qBAAA;MAASrR,OAAO,GAAA3E,aAAA,CAAd0C,KAAK;EAAckC,IAAAA,OAAO,GAAAC,6BAAA,CAAA7E,aAAA,EAAA8E,WAAA,CAAA,CAAA;IAC5E,IAAMI,YAAY,GAAG3J,WAAW,CAAC4J,eAAe,CAAC9J,MAAM,EAAE0E,QAAQ,EAAEG,eAAe,CAAC,CAAA;EACnF,EAAA,IAAM+E,KAAK,GAAA,CAAAlB,IAAA,GAAGY,OAAO,IAAA,IAAA,GAAPA,OAAO,GAAIjC,KAAK,KAAA,IAAA,GAAAqB,IAAA,GAAIpC,IAAI,CAAA;IACtC,IAAMoD,MAAM,GAAGC,eAAS,CAAU3J,MAAM,EAAEqJ,MAAM,EAAEF,OAAO,CAAC,CAAA;IAC1D,OACE5D,cAAC,CAAAmE,MAAM;MACLH,OAAO,EAAAlG,QAAA,CAAA,EAAA,EAAOkG,OAAO,EAAA;EAAEiB,MAAAA,WAAW,EAAXA,WAAAA;OAAa,CAAA;EACpCxK,IAAAA,MAAM,EAAEA,MAAM;EACd0E,IAAAA,QAAQ,EAAEA,QAAQ;MAClB3B,EAAE,EAAES,QAAQ,CAACC,GAAG;EAChB6C,IAAAA,IAAI,EAAEA,IAAI;EACVsD,IAAAA,KAAK,EAAEA,KAAK;MACZI,SAAS,EAAE,CAACH,YAAY;EACxB/G,IAAAA,KAAK,EAAE/D,QAAQ;EACfiC,IAAAA,QAAQ,EAAEA,QAAQ;EAClB+F,IAAAA,MAAM,EAAEA,MAAM;EACdC,IAAAA,OAAO,EAAEA,OAAO;EAChBF,IAAAA,QAAQ,EAAEA,QAAQ;EAClBN,IAAAA,QAAQ,EAAEA,QAAQ;EAClBE,IAAAA,QAAQ,EAAEA,QAAQ;EAClBY,IAAAA,WAAW,EAAEA,WAAW;EACxBV,IAAAA,SAAS,EAAEA,SAAS;EACpB3G,IAAAA,QAAQ,EAAEA,QAAQ;EAClBgJ,IAAAA,WAAW,EAAEA,WAAW;EACxB7B,IAAAA,SAAS,EAAEA,SAAAA;EAAS,GAAA,CACpB,CAAA;EAEN;;ECjEA;;;;EAIG;EACH,SAASwT,SAASA,CAChBjb,KAA0B,EAAA;EAE1B,EAAA,IAAQZ,QAAQ,GAAeY,KAAK,CAA5BZ,QAAQ;MAAEiC,QAAQ,GAAKrB,KAAK,CAAlBqB,QAAQ,CAAA;EAC1B6Z,EAAAA,eAAS,CAAC,YAAK;MACb,IAAI9b,QAAQ,KAAKuC,SAAS,EAAE;QAC1BN,QAAQ,CAAC,IAAoB,CAAC,CAAA;EAC/B,KAAA;EACH,GAAC,EAAE,CAACjC,QAAQ,EAAEiC,QAAQ,CAAC,CAAC,CAAA;EAExB,EAAA,OAAO,IAAI,CAAA;EACb;;ECRA,SAASwL,MAAMA,GAAA;IAKb,OAAO;EACL+C,IAAAA,UAAU,EAAEuL,UAAgB;EAC5Btb,IAAAA,UAAU,EAAEA,UAAuC;EACnD;EACA+O,IAAAA,YAAY,EAAZA,YAAY;EACZwD,IAAAA,WAAW,EAAXA,WAAW;EACXgB,IAAAA,WAAW,EAAXA,WAAW;EACXiH,IAAAA,UAAU,EAAEc,UAAgB;EAC5BpO,IAAAA,WAAW,EAAXA,WAAW;EACX2F,IAAAA,WAAW,EAAXA,WAAW;EACXuI,IAAAA,SAAS,EAATA,SAAAA;KACD,CAAA;EACH;;EClBA;;;;EAIG;EACqB,SAAAG,6BAA6BA,CAInDpb,KAA0C,EAAA;EAC1C,EAAA,IAAQ6D,QAAQ,GAA8C7D,KAAK,CAA3D6D,QAAQ;MAAEqS,WAAW,GAAiClW,KAAK,CAAjDkW,WAAW;MAAE5V,QAAQ,GAAuBN,KAAK,CAApCM,QAAQ;MAAED,MAAM,GAAeL,KAAK,CAA1BK,MAAM;MAAE0E,QAAQ,GAAK/E,KAAK,CAAlB+E,QAAQ,CAAA;IACzD,IAAM6E,OAAO,GAAG3E,kBAAY,CAAUF,QAAQ,EAAEzE,QAAQ,CAAC4E,eAAe,CAAC,CAAA;EACzE,EAAA,IAAAmW,cAAA,GAAuCzR,OAAO,CAAtCK,KAAK;EAAEC,IAAAA,YAAY,GAAAmR,cAAA,KAAG,KAAA,CAAA,GAAA,IAAI,GAAAA,cAAA,CAAA;EAClC,EAAA,IAAI,CAACnF,WAAW,IAAI,CAAChM,YAAY,EAAE;EACjC,IAAA,OAAO,IAAI,CAAA;EACZ,GAAA;IACD,IAAMqO,wBAAwB,GAAG5S,iBAAW,CAC1C,0BAA0B,EAC1BrF,QAAQ,EACRsJ,OAAO,CACR,CAAA;IACD,OACEhE,cAAA,CAAC2S,wBAAwB,EAAA;EACvBnV,IAAAA,EAAE,EAAE0W,mBAAa,CAAIjW,QAAQ,CAAC;EAC9BqS,IAAAA,WAAW,EAAEA,WAAW;EACxB7V,IAAAA,MAAM,EAAEA,MAAM;EACd0E,IAAAA,QAAQ,EAAEA,QAAQ;EAClBzE,IAAAA,QAAQ,EAAEA,QAAAA;EACV,GAAA,CAAA,CAAA;EAEN;;ECrCA;;;EAGG;EACqB,SAAAgb,sBAAsBA,CAI5Ctb,KAA0C,EAAA;EAC1C,EAAA,IACEiO,QAAQ,GAeNjO,KAAK,CAfPiO,QAAQ;MACRpF,SAAS,GAcP7I,KAAK,CAdP6I,SAAS;MACThC,QAAQ,GAaN7G,KAAK,CAbP6G,QAAQ;MACRsH,UAAU,GAYRnO,KAAK,CAZPmO,UAAU;MACVE,WAAW,GAWTrO,KAAK,CAXPqO,WAAW;MACXD,SAAS,GAUPpO,KAAK,CAVPoO,SAAS;MACTE,SAAS,GASPtO,KAAK,CATPsO,SAAS;MACTJ,OAAO,GAQLlO,KAAK,CARPkO,OAAO;MACPhN,KAAK,GAOHlB,KAAK,CAPPkB,KAAK;MACLC,gBAAgB,GAMdnB,KAAK,CANPmB,gBAAgB;MAChBa,gBAAgB,GAKdhC,KAAK,CALPgC,gBAAgB;MAChBU,cAAc,GAIZ1C,KAAK,CAJP0C,cAAc;MACdqE,QAAQ,GAGN/G,KAAK,CAHP+G,QAAQ;MACRzG,QAAQ,GAENN,KAAK,CAFPM,QAAQ;MACRyE,QAAQ,GACN/E,KAAK,CADP+E,QAAQ,CAAA;EAEV,EAAA,IAAAwW,qBAAA,GAAmEjb,QAAQ,CAACkb,SAAS,CAACC,eAAe;MAA7FC,UAAU,GAAAH,qBAAA,CAAVG,UAAU;MAAEC,cAAc,GAAAJ,qBAAA,CAAdI,cAAc;MAAEC,YAAY,GAAAL,qBAAA,CAAZK,YAAY;MAAEC,YAAY,GAAAN,qBAAA,CAAZM,YAAY,CAAA;EAC9D,EAAA,IAAMC,QAAQ,GAAkB;EAC9BC,IAAAA,IAAI,EAAE,CAAC;EACPC,IAAAA,WAAW,EAAE,CAAC;EACdC,IAAAA,YAAY,EAAE,CAAC;EACfC,IAAAA,UAAU,EAAE,MAAA;KACb,CAAA;IACD,OACElK,eAAK,CAAA,KAAA,EAAA;EAAAnJ,IAAAA,SAAS,EAAEA,SAAS;iBACvBjD,cAAK,CAAA,KAAA,EAAA;EAAAiD,MAAAA,SAAS,EAAEsF,UAAU,GAAG,UAAU,GAAG,WAAW;EAAGF,MAAAA,QAAA,EAAAA,QAAAA;QAAe,EACtEE,UAAU,IACTvI;EAAKiD,MAAAA,SAAS,EAAC,6BAA6B;EAAAoF,MAAAA,QAAA,EAC1C+D;EACEnJ,QAAAA,SAAS,EAAC,WAAW;EACrB0N,QAAAA,KAAK,EAAE;EACL4F,UAAAA,OAAO,EAAE,MAAM;EACfC,UAAAA,cAAc,EAAE,cAAA;WACjB;UAAAnO,QAAA,EAAA,CAEA,CAACG,SAAS,IAAIC,WAAW,KACxBzI,cAAA,CAACgW,YAAY,EAAA;EACXrF,UAAAA,KAAK,EAAEuF,QAAQ;EACfjV,UAAAA,QAAQ,EAAEA,QAAQ,IAAIE,QAAQ,IAAI,CAACqH,SAAS;YAC5CiO,OAAO,EAAE3Z,cAAc,CAACxB,KAAK,EAAEA,KAAK,GAAG,CAAC,CAAC;EACzC6D,UAAAA,QAAQ,EAAEA,QAAQ;EAClBzE,UAAAA,QAAQ,EAAEA,QAAAA;WACV,CACH,EACA,CAAC8N,SAAS,IAAIC,WAAW,KACxBzI,cAAC,CAAA+V,cAAc,EACb;EAAApF,UAAAA,KAAK,EAAEuF,QAAQ;EACfjV,UAAAA,QAAQ,EAAEA,QAAQ,IAAIE,QAAQ,IAAI,CAACsH,WAAW;YAC9CgO,OAAO,EAAE3Z,cAAc,CAACxB,KAAK,EAAEA,KAAK,GAAG,CAAC,CAAC;EACzC6D,UAAAA,QAAQ,EAAEA,QAAQ;EAClBzE,UAAAA,QAAQ,EAAEA,QAAAA;EAAQ,SAAA,CAErB,EACA4N,OAAO,IACNtI,eAAC8V,UAAU,EAAA;EACTnF,UAAAA,KAAK,EAAEuF,QAAQ;YACfjV,QAAQ,EAAEA,QAAQ,IAAIE,QAAQ;EAC9BsV,UAAAA,OAAO,EAAElb,gBAAgB,CAACD,KAAK,CAAC;EAChC6D,UAAAA,QAAQ,EAAEA,QAAQ;EAClBzE,UAAAA,QAAQ,EAAEA,QAAAA;EAAQ,SAAA,CAErB,EACAgO,SAAS,IACR1I,cAAC,CAAAiW,YAAY;EACXtF,UAAAA,KAAK,EAAEuF,QAAQ;YACfjV,QAAQ,EAAEA,QAAQ,IAAIE,QAAQ;EAC9BsV,UAAAA,OAAO,EAAEra,gBAAgB,CAACd,KAAK,CAAC;EAChC6D,UAAAA,QAAQ,EAAEA,QAAQ;EAClBzE,UAAAA,QAAQ,EAAEA,QAAAA;YAEb,CAAA;SAAA,CAAA;QAGN,CAAA;EAAA,GAAA,CACG,CAAA;EAEV;;;EC/EA;;;EAGG;EACqB,SAAAgc,kBAAkBA,CAIxCtc,KAAuC,EAAA;EACvC,EAAA,IACEgI,MAAM,GAYJhI,KAAK,CAZPgI,MAAM;MACNa,SAAS,GAWP7I,KAAK,CAXP6I,SAAS;MACThC,QAAQ,GAUN7G,KAAK,CAVP6G,QAAQ;MACRhD,QAAQ,GASN7D,KAAK,CATP6D,QAAQ;MACRkB,QAAQ,GAQN/E,KAAK,CARP+E,QAAQ;MACRtE,KAAK,GAOHT,KAAK,CAPPS,KAAK;MACLK,UAAU,GAMRd,KAAK,CANPc,UAAU;MACViG,QAAQ,GAKN/G,KAAK,CALP+G,QAAQ;MACRzG,QAAQ,GAINN,KAAK,CAJPM,QAAQ;MACR6G,QAAQ,GAGNnH,KAAK,CAHPmH,QAAQ;MACR9G,MAAM,GAEJL,KAAK,CAFPK,MAAM;MACNqH,KAAK,GACH1H,KAAK,CADP0H,KAAK,CAAA;EAEP,EAAA,IAAMjC,SAAS,GAAGR,kBAAY,CAAUF,QAAQ,CAAC,CAAA;IACjD,IAAMqW,6BAA6B,GAAGzV,iBAAW,CAC/C,+BAA+B,EAC/BrF,QAAQ,EACRmF,SAAS,CACV,CAAA;IACD,IAAM6V,sBAAsB,GAAG3V,iBAAW,CACxC,wBAAwB,EACxBrF,QAAQ,EACRmF,SAAS,CACV,CAAA;IACD,IAAM8W,uBAAuB,GAAG5W,iBAAW,CACzC,yBAAyB,EACzBrF,QAAQ,EACRmF,SAAS,CACV,CAAA;EACD;IACA,IACqB+W,SAAS,GAC1Blc,QAAQ,CAACkb,SAAS,CADpBC,eAAe,CAAIe,SAAS,CAAA;IAE9B,OACExK,eAAU,CAAA,UAAA,EAAA;EAAAnJ,IAAAA,SAAS,EAAEA,SAAS;MAAEzF,EAAE,EAAES,QAAQ,CAACC,GAAG;EAC9CmK,IAAAA,QAAA,EAAA,CAAArI,cAAA,CAAC2W,uBAAuB,EAAA;EACtB1Y,MAAAA,QAAQ,EAAEA,QAAQ;EAClB6D,MAAAA,KAAK,EAAEjC,SAAS,CAACiC,KAAK,IAAIA,KAAK;EAC/BP,MAAAA,QAAQ,EAAEA,QAAQ;EAClB9G,MAAAA,MAAM,EAAEA,MAAM;EACd0E,MAAAA,QAAQ,EAAEA,QAAQ;EAClBzE,MAAAA,QAAQ,EAAEA,QAAAA;EACV,KAAA,CAAA,EACFsF,cAAC,CAAAwV,6BAA6B;EAC5BvX,MAAAA,QAAQ,EAAEA,QAAQ;EAClBqS,MAAAA,WAAW,EAAEzQ,SAAS,CAACyQ,WAAW,IAAI7V,MAAM,CAAC6V,WAAW;EACxD7V,MAAAA,MAAM,EAAEA,MAAM;EACd0E,MAAAA,QAAQ,EAAEA,QAAQ;EAClBzE,MAAAA,QAAQ,EAAEA,QAAAA;QACV,EACFsF,cAAA,CAAA,KAAA,EAAA;EAAKiD,MAAAA,SAAS,EAAC,qBAAqB;kBACjCpI,KAAK,IACJA,KAAK,CAAClB,GAAG,CAAC,UAAAwJ,IAAA,EAAA;EAAA,QAAA,IAAGtJ,GAAG,GAAAsJ,IAAA,CAAHtJ,GAAG;EAAKgd,UAAAA,SAAS,GAAA5S,6BAAA,CAAAd,IAAA,EAAAe,WAAA,CAAA,CAAA;UAAA,OAC5BlE,cAAC,CAAA0V,sBAAsB,EAAA5X,QAAA,CAAe+Y,EAAAA,EAAAA,SAAS,CAAlBhd,EAAAA,GAAG,CAAmB,CAAA;SACpD,CAAA;EAAC,KAAA,CACA,EACLuI,MAAM,IACLpC,eAAC4W,SAAS,EAAA;EACR3T,MAAAA,SAAS,EAAC,gBAAgB;EAC1BwT,MAAAA,OAAO,EAAEvb,UAAU;QACnB+F,QAAQ,EAAEA,QAAQ,IAAIE,QAAQ;EAC9BhC,MAAAA,QAAQ,EAAEA,QAAQ;EAClBzE,MAAAA,QAAQ,EAAEA,QAAAA;EACV,KAAA,CACH,CAAA;EACQ,GAAA,CAAA,CAAA;EAEf;;EC5EA;;;;EAIG;EACqB,SAAAic,uBAAuBA,CAI7Cvc,KAAoC,EAAA;EACpC,EAAA,IAAQ6D,QAAQ,GAAkD7D,KAAK,CAA/D6D,QAAQ;MAAE6D,KAAK,GAA2C1H,KAAK,CAArD0H,KAAK;MAAErH,MAAM,GAAmCL,KAAK,CAA9CK,MAAM;MAAE0E,QAAQ,GAAyB/E,KAAK,CAAtC+E,QAAQ;MAAEoC,QAAQ,GAAenH,KAAK,CAA5BmH,QAAQ;MAAE7G,QAAQ,GAAKN,KAAK,CAAlBM,QAAQ,CAAA;IAC7D,IAAMsJ,OAAO,GAAG3E,kBAAY,CAAUF,QAAQ,EAAEzE,QAAQ,CAAC4E,eAAe,CAAC,CAAA;EACzE,EAAA,IAAAmW,cAAA,GAAuCzR,OAAO,CAAtCK,KAAK;EAAEC,IAAAA,YAAY,GAAAmR,cAAA,KAAG,KAAA,CAAA,GAAA,IAAI,GAAAA,cAAA,CAAA;EAClC,EAAA,IAAI,CAAC3T,KAAK,IAAI,CAACwC,YAAY,EAAE;EAC3B,IAAA,OAAO,IAAI,CAAA;EACZ,GAAA;IACD,IAAMwS,kBAAkB,GAAiD/W,iBAAW,CAClF,oBAAoB,EACpBrF,QAAQ,EACRsJ,OAAO,CACR,CAAA;IACD,OACEhE,cAAA,CAAC8W,kBAAkB,EAAA;EACjBtZ,IAAAA,EAAE,EAAEuZ,aAAO,CAAI9Y,QAAQ,CAAC;EACxB6D,IAAAA,KAAK,EAAEA,KAAK;EACZP,IAAAA,QAAQ,EAAEA,QAAQ;EAClB9G,IAAAA,MAAM,EAAEA,MAAM;EACd0E,IAAAA,QAAQ,EAAEA,QAAQ;EAClBzE,IAAAA,QAAQ,EAAEA,QAAAA;EAAQ,GAAA,CAClB,CAAA;EAEN;;;EC/BA;;;;;EAKG;EACqB,SAAAsc,iBAAiBA,CAIvC5c,KAAsC,EAAA;EACtC,EAAA,IACEoD,EAAE,GAkBApD,KAAK,CAlBPoD,EAAE,CAAA;MAEFD,KAAK,GAgBHnD,KAAK,CAhBPmD,KAAK,CAAA;MACL4D,QAAQ,GAeN/G,KAAK,CAfP+G,QAAQ,CAAA;MACRF,QAAQ,GAcN7G,KAAK,CAdP6G,QAAQ,CAAA;MACRI,SAAS,GAaPjH,KAAK,CAbPiH,SAAS,CAAA;MACTG,MAAM,GAYJpH,KAAK,CAZPoH,MAAM,CAAA;MACNC,OAAO,GAWLrH,KAAK,CAXPqH,OAAO,CAAA;MACPhG,QAAQ,GAUNrB,KAAK,CAVPqB,QAAQ,CAAA;MACRwb,gBAAgB,GASd7c,KAAK,CATP6c,gBAAgB,CAAA;MAChBjT,OAAO,GAQL5J,KAAK,CARP4J,OAAO,CAAA;MACPvJ,MAAM,GAOJL,KAAK,CAPPK,MAAM,CAAA;MAKNqE,IAAI,GAEF1E,KAAK,CAFP0E,IAAI,CAAA;EACDoY,IAAAA,IAAI,GAAAjT,6BAAA,CACL7J,KAAK,EAAA8J,WAAA,EAAA;EAET;EACA;IACA,IAAI,CAAC1G,EAAE,EAAE;EACPmW,IAAAA,OAAO,CAACwD,GAAG,CAAC,WAAW,EAAE/c,KAAK,CAAC,CAAA;MAC/B,MAAM,IAAIgd,KAAK,CAAoBpG,kBAAAA,GAAAA,IAAI,CAACC,SAAS,CAAC7W,KAAK,CAAC,CAAG,CAAA;EAC5D,GAAA;EACD,EAAA,IAAMid,UAAU,GAAAvZ,QAAA,CAAA,EAAA,EACXoZ,IAAI,EACJI,mBAAa,CAAU7c,MAAM,EAAEqE,IAAI,EAAEkF,OAAO,CAAC,CACjD,CAAA;EAED,EAAA,IAAIuT,UAAU,CAAA;IACd,IAAIF,UAAU,CAACvY,IAAI,KAAK,QAAQ,IAAIuY,UAAU,CAACvY,IAAI,KAAK,SAAS,EAAE;MACjEyY,UAAU,GAAGha,KAAK,IAAIA,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAG,EAAE,CAAA;EAC/C,GAAA,MAAM;EACLga,IAAAA,UAAU,GAAGha,KAAK,IAAI,IAAI,GAAG,EAAE,GAAGA,KAAK,CAAA;EACxC,GAAA;EAED,EAAA,IAAMia,SAAS,GAAGxK,iBAAW,CAC3B,UAAA7J,IAAA,EAAA;EAAA,IAAA,IAAa5F,KAAK,GAAA4F,IAAA,CAAfsU,MAAM,CAAIla,KAAK,CAAA;MAAA,OAAwC9B,QAAQ,CAAC8B,KAAK,KAAK,EAAE,GAAGyG,OAAO,CAAC0T,UAAU,GAAGna,KAAK,CAAC,CAAA;EAAA,GAAA,EAC7G,CAAC9B,QAAQ,EAAEuI,OAAO,CAAC,CACpB,CAAA;EACD,EAAA,IAAM2T,OAAO,GAAG3K,iBAAW,CAAC,UAAAtI,KAAA,EAAA;EAAA,IAAA,IAAanH,KAAK,GAAAmH,KAAA,CAAf+S,MAAM,CAAIla,KAAK,CAAA;EAAA,IAAA,OAAuCiE,MAAM,CAAChE,EAAE,EAAED,KAAK,CAAC,CAAA;EAAA,GAAA,EAAE,CAACiE,MAAM,EAAEhE,EAAE,CAAC,CAAC,CAAA;EACrH,EAAA,IAAMoa,QAAQ,GAAG5K,iBAAW,CAC1B,UAAA1H,KAAA,EAAA;EAAA,IAAA,IAAa/H,KAAK,GAAA+H,KAAA,CAAfmS,MAAM,CAAIla,KAAK,CAAA;EAAA,IAAA,OAAuCkE,OAAO,CAACjE,EAAE,EAAED,KAAK,CAAC,CAAA;EAAA,GAAA,EAC3E,CAACkE,OAAO,EAAEjE,EAAE,CAAC,CACd,CAAA;IAED,OACE4O;iBACEpM,cACE,CAAA,OAAA,EAAAlC,QAAA,CAAA;EAAAN,MAAAA,EAAE,EAAEA,EAAE;EACNuD,MAAAA,IAAI,EAAEvD,EAAE;EACRyF,MAAAA,SAAS,EAAC,cAAc;EACxBoQ,MAAAA,QAAQ,EAAElS,QAAQ;EAClBF,MAAAA,QAAQ,EAAEA,QAAQ;EAClB4W,MAAAA,SAAS,EAAExW,SAAS;EACpB9D,MAAAA,KAAK,EAAEga,UAAAA;EAAU,KAAA,EACbF,UAAU,EAAA;QACdS,IAAI,EAAErd,MAAM,CAACsd,QAAQ,GAAGC,gBAAU,CAAIxa,EAAE,CAAC,GAAGzB,SAAS;QACrDN,QAAQ,EAAEwb,gBAAgB,IAAIO,SAAS;EACvChW,MAAAA,MAAM,EAAEmW,OAAO;EACflW,MAAAA,OAAO,EAAEmW,QAAQ;4BACCK,wBAAkB,CAAIza,EAAE,EAAE,CAAC,CAAC/C,MAAM,CAACsd,QAAQ,CAAA;EAAC,KAAA,CAAA,CAC9D,EACDte,KAAK,CAACC,OAAO,CAACe,MAAM,CAACsd,QAAQ,CAAC,IAC7B/X,cAAiC,CAAA,UAAA,EAAA;EAAAxC,MAAAA,EAAE,EAAEwa,gBAAU,CAAIxa,EAAE,CAAC;EAAA6K,MAAAA,QAAA,EAClD5N,MAAM,CAACsd,QAAqB,CAC3Bjc,MAAM,CAACrB,MAAM,CAAA,SAAA,CAAQ,IAAI,CAACA,MAAM,CAACsd,QAAQ,CAAChZ,QAAQ,CAACtE,MAAM,CAAQ,SAAA,CAAA,CAAC,GAAI,CAACA,MAAM,CAAQ,SAAA,CAAA,CAAc,GAAG,EAAE,CAAC,CACzGd,GAAG,CAAC,UAACue,OAAY,EAAI;UACpB,OAAOlY;EAAsBzC,UAAAA,KAAK,EAAE2a,OAAAA;WAAhB,EAAAA,OAAO,CAAoB,CAAA;SAChD,CAAA;uBALsB1a,EAAE,CAO9B,CAAA;EACA,GAAA,CAAA,CAAA;EAEP;;ECjGA;EACG;EACW,SAAU2a,YAAYA,CAAAhV,IAAA,EAIM;EAAA,EAAA,IAAtChE,QAAQ,GAAAgE,IAAA,CAARhE,QAAQ,CAAA;EACV,EAAA,IAAAiZ,qBAAA,GAAgEC,4BAAsB,CAAUlZ,QAAQ,CAAC;MAAjGmZ,UAAU,GAAAF,qBAAA,CAAVE,UAAU;MAAEC,QAAQ,GAAAH,qBAAA,CAARG,QAAQ;MAAAC,sBAAA,GAAAJ,qBAAA,CAAEhe,KAAK;EAAEqe,IAAAA,iBAAiB,GAAAD,sBAAA,KAAA,KAAA,CAAA,GAAG,EAAE,GAAAA,sBAAA,CAAA;EAC3D,EAAA,IAAID,QAAQ,EAAE;EACZ,IAAA,OAAO,IAAI,CAAA;EACZ,GAAA;IACD,OACEvY;gBACEA,cAAQ,CAAA,QAAA,EAAAlC,QAAA,CAAA;EAAAgB,MAAAA,IAAI,EAAC,QAAA;EAAQ,KAAA,EAAK2Z,iBAAiB,EAAA;QAAExV,SAAS,EAAA,eAAA,GAAkBwV,iBAAiB,CAACxV,SAAW;kBAClGqV,UAAAA;EAAU,KAAA,CAAA,CAAA;EAET,GAAA,CAAA,CAAA;EAEV;;;EClBwB,SAAAI,UAAUA,CAChCte,KAA+B,EAAA;EAE/B,EAAA,IAAAue,eAAA,GAAqFve,KAAK,CAAlFwe,QAAQ,CAAA;EAARA,IAAAA,QAAQ,GAAAD,eAAA,KAAG,KAAA,CAAA,GAAA,SAAS,GAAAA,eAAA,CAAA;MAAEE,IAAI,GAAmDze,KAAK,CAA5Dye,IAAI,CAAA;MAAE5V,SAAS,GAAwC7I,KAAK,CAAtD6I,SAAS,CAAA;MAAyB6V,UAAU,GAAA7U,6BAAA,CAAK7J,KAAK,EAAA8J,WAAA,EAAA;EAC1F,EAAA,OACElE,cAAQ,CAAA,QAAA,EAAAlC,QAAA,CAAA;EAAAgB,IAAAA,IAAI,EAAC,QAAQ;MAACmE,SAAS,EAAA,UAAA,GAAa2V,QAAQ,GAAI3V,GAAAA,GAAAA,SAAAA;EAAW,GAAA,EAAM6V,UAAU,EAAA;EACjFzQ,IAAAA,QAAA,EAAArI,cAAA,CAAA,GAAA,EAAA;EAAGiD,MAAAA,SAAS,EAAyB4V,sBAAAA,GAAAA,IAAAA;OAAM,CAAA;KACpC,CAAA,CAAA,CAAA;EAEb,CAAA;EAEM,SAAU/C,UAAUA,CACxB1b,KAA+B,EAAA;EAE/B,EAAA,IACcuF,eAAe,GACzBvF,KAAK,CADPM,QAAQ,CAAIiF,eAAe,CAAA;EAE7B,EAAA,OACEK,cAAC,CAAA0Y,UAAU,EAAA5a,QAAA,CAAA;EACTgE,IAAAA,KAAK,EAAEnC,eAAe,CAACO,wBAAkB,CAAC4V,UAAU,CAAC;EACrD7S,IAAAA,SAAS,EAAC,iBAAA;EAAiB,GAAA,EACvB7I,KAAK,EAAA;EACTye,IAAAA,IAAI,EAAC,MAAA;KACL,CAAA,CAAA,CAAA;EAEN,CAAA;EAEM,SAAU9C,cAAcA,CAC5B3b,KAA+B,EAAA;EAE/B,EAAA,IACcuF,eAAe,GACzBvF,KAAK,CADPM,QAAQ,CAAIiF,eAAe,CAAA;EAE7B,EAAA,OACEK,cAAC,CAAA0Y,UAAU,EAAA5a,QAAA,CAAA;EACTgE,IAAAA,KAAK,EAAEnC,eAAe,CAACO,wBAAkB,CAAC6V,cAAc,CAAC;EACzD9S,IAAAA,SAAS,EAAC,sBAAA;EAAsB,GAAA,EAC5B7I,KAAK,EAAA;EACTye,IAAAA,IAAI,EAAC,YAAA;KACL,CAAA,CAAA,CAAA;EAEN,CAAA;EAEM,SAAU7C,YAAYA,CAC1B5b,KAA+B,EAAA;EAE/B,EAAA,IACcuF,eAAe,GACzBvF,KAAK,CADPM,QAAQ,CAAIiF,eAAe,CAAA;EAE7B,EAAA,OACEK,cAAC,CAAA0Y,UAAU,EAAA5a,QAAA,CAAA;EACTgE,IAAAA,KAAK,EAAEnC,eAAe,CAACO,wBAAkB,CAAC8V,YAAY,CAAC;EACvD/S,IAAAA,SAAS,EAAC,oBAAA;EAAoB,GAAA,EAC1B7I,KAAK,EAAA;EACTye,IAAAA,IAAI,EAAC,UAAA;KACL,CAAA,CAAA,CAAA;EAEN,CAAA;EAEM,SAAU5C,YAAYA,CAC1B7b,KAA+B,EAAA;EAE/B,EAAA,IACcuF,eAAe,GACzBvF,KAAK,CADPM,QAAQ,CAAIiF,eAAe,CAAA;EAE7B,EAAA,OACEK,cAAA,CAAC0Y,UAAU,EAAA5a,QAAA,CAAA;EACTgE,IAAAA,KAAK,EAAEnC,eAAe,CAACO,wBAAkB,CAAC+V,YAAY,CAAC;EACvDhT,IAAAA,SAAS,EAAC,mBAAA;EAAmB,GAAA,EACzB7I,KAAK,EAAA;EACTwe,IAAAA,QAAQ,EAAC,QAAQ;EACjBC,IAAAA,IAAI,EAAC,QAAA;KACL,CAAA,CAAA,CAAA;EAEN;;ECxEA;EACG;EACqB,SAAAjC,SAASA,CAAAzT,IAAA,EAKN;EAAA,EAAA,IAJzBF,SAAS,GAAAE,IAAA,CAATF,SAAS;MACTwT,OAAO,GAAAtT,IAAA,CAAPsT,OAAO;MACPxV,QAAQ,GAAAkC,IAAA,CAARlC,QAAQ;MACRvG,QAAQ,GAAAyI,IAAA,CAARzI,QAAQ,CAAA;EAER,EAAA,IAAQiF,eAAe,GAAKjF,QAAQ,CAA5BiF,eAAe,CAAA;IACvB,OACEK,cAAK,CAAA,KAAA,EAAA;EAAAiD,IAAAA,SAAS,EAAC,KAAK;gBAClBjD,cAAG,CAAA,GAAA,EAAA;EAAAiD,MAAAA,SAAS,2CAAyCA,SAAW;kBAC9DjD,cAAC,CAAA0Y,UAAU,EACT;EAAAE,QAAAA,QAAQ,EAAC,MAAM;EACfC,QAAAA,IAAI,EAAC,MAAM;EACX5V,QAAAA,SAAS,EAAC,mBAAmB;EAC7BnB,QAAAA,KAAK,EAAEnC,eAAe,CAACO,wBAAkB,CAAC0W,SAAS,CAAC;EACpDH,QAAAA,OAAO,EAAEA,OAAO;EAChBxV,QAAAA,QAAQ,EAAEA,QAAQ;EAClBvG,QAAAA,QAAQ,EAAEA,QAAAA;SACV,CAAA;OAAA,CAAA;EAEA,GAAA,CAAA,CAAA;EAEV;;ECtBA,SAASqe,eAAeA,GAAA;IAKtB,OAAO;EACLZ,IAAAA,YAAY,EAAZA,YAAY;EACZvB,IAAAA,SAAS,EAATA,SAAS;EACTd,IAAAA,UAAU,EAAVA,UAAU;EACVC,IAAAA,cAAc,EAAdA,cAAc;EACdC,IAAAA,YAAY,EAAZA,YAAY;EACZC,IAAAA,YAAY,EAAZA,YAAAA;KACD,CAAA;EACH;;ECjBA;;;EAGG;EACqB,SAAA+C,gBAAgBA,CAItC5e,KAAqC,EAAA;EACrC,EAAA,IAAQoD,EAAE,GAAkBpD,KAAK,CAAzBoD,EAAE;MAAE8S,WAAW,GAAKlW,KAAK,CAArBkW,WAAW,CAAA;IACvB,IAAI,CAACA,WAAW,EAAE;EAChB,IAAA,OAAO,IAAI,CAAA;EACZ,GAAA;EACD,EAAA,IAAI,OAAOA,WAAW,KAAK,QAAQ,EAAE;MACnC,OACEtQ,cAAA,CAAA,GAAA,EAAA;EAAGxC,MAAAA,EAAE,EAAEA,EAAE;EAAEyF,MAAAA,SAAS,EAAC,mBAAmB;EAAAoF,MAAAA,QAAA,EACrCiI,WAAAA;EAAW,KAAA,CACV,CAAA;EAEP,GAAA,MAAM;MACL,OACEtQ,cAAA,CAAA,KAAA,EAAA;EAAKxC,MAAAA,EAAE,EAAEA,EAAE;EAAEyF,MAAAA,SAAS,EAAC,mBAAmB;EAAAoF,MAAAA,QAAA,EACvCiI,WAAAA;EAAW,KAAA,CACR,CAAA;EAET,GAAA;EACH;;ECnBA;;;EAGG;EACqB,SAAA2I,SAASA,CAAA9V,IAAA,EAGP;EAAA,EAAA,IAFxB6Q,MAAM,GAAA7Q,IAAA,CAAN6Q,MAAM;MACNtZ,QAAQ,GAAAyI,IAAA,CAARzI,QAAQ,CAAA;EAER,EAAA,IAAQiF,eAAe,GAAKjF,QAAQ,CAA5BiF,eAAe,CAAA;IACvB,OACEyM,eAAK,CAAA,KAAA,EAAA;EAAAnJ,IAAAA,SAAS,EAAC,2BAA2B;iBACxCjD,cAAK,CAAA,KAAA,EAAA;EAAAiD,MAAAA,SAAS,EAAC,eAAe;kBAC5BjD,cAAI,CAAA,IAAA,EAAA;EAAAiD,QAAAA,SAAS,EAAC,aAAa;EAAAoF,QAAAA,QAAA,EAAE1I,eAAe,CAACO,wBAAkB,CAACgZ,WAAW,CAAA;SAAO,CAAA;EAAA,KAAA,CAC9E,EACNlZ,cAAI,CAAA,IAAA,EAAA;EAAAiD,MAAAA,SAAS,EAAC,YAAY;QAAAoF,QAAA,EACvB2L,MAAM,CAACra,GAAG,CAAC,UAACwf,KAA0B,EAAE1c,CAAS,EAAI;UACpD,OACEuD,cAAA,CAAA,IAAA,EAAA;EAAYiD,UAAAA,SAAS,EAAC,6BAA6B;YAAAoF,QAAA,EAChD8Q,KAAK,CAACC,KAAAA;WAAK,EADL3c,CAAC,CAEL,CAAA;SAER,CAAA;EAAC,KAAA,CACC,CAAA;EACD,GAAA,CAAA,CAAA;EAEV;;EClCA,IAAM4c,uBAAqB,GAAG,GAAG,CAAA;EAWjC;;;EAGG;EACqB,SAAAC,KAAKA,CAAClf,KAAiB,EAAA;EAC7C,EAAA,IAAQiK,KAAK,GAAmBjK,KAAK,CAA7BiK,KAAK;MAAE9C,QAAQ,GAASnH,KAAK,CAAtBmH,QAAQ;MAAE/D,EAAE,GAAKpD,KAAK,CAAZoD,EAAE,CAAA;IAC3B,IAAI,CAAC6G,KAAK,EAAE;EACV,IAAA,OAAO,IAAI,CAAA;EACZ,GAAA;IACD,OACE+H;EAAOnJ,IAAAA,SAAS,EAAC,eAAe;EAACsW,IAAAA,OAAO,EAAE/b,EAAE;MACzC6K,QAAA,EAAA,CAAAhE,KAAK,EACL9C,QAAQ,IAAIvB,cAAM,CAAA,MAAA,EAAA;EAAAiD,MAAAA,SAAS,EAAC,UAAU;kBAAEoW,uBAAAA;EAAqB,KAAA,CAAQ,CAAA;EAChE,GAAA,CAAA,CAAA;EAEZ;;ECfA;;;;EAIG;EACqB,SAAA3G,aAAaA,CAInCtY,KAAkC,EAAA;EAClC,EAAA,IAAQoD,EAAE,GAAqGpD,KAAK,CAA5GoD,EAAE;MAAE6G,KAAK,GAA8FjK,KAAK,CAAxGiK,KAAK;MAAEgE,QAAQ,GAAoFjO,KAAK,CAAjGiO,QAAQ;MAAE2L,MAAM,GAA4E5Z,KAAK,CAAvF4Z,MAAM;MAAEP,IAAI,GAAsErZ,KAAK,CAA/EqZ,IAAI;MAAEnD,WAAW,GAAyDlW,KAAK,CAAzEkW,WAAW;MAAEgB,MAAM,GAAiDlX,KAAK,CAA5DkX,MAAM;MAAE/P,QAAQ,GAAuCnH,KAAK,CAApDmH,QAAQ;MAAE+C,YAAY,GAAyBlK,KAAK,CAA1CkK,YAAY;MAAE5J,QAAQ,GAAeN,KAAK,CAA5BM,QAAQ;MAAEyE,QAAQ,GAAK/E,KAAK,CAAlB+E,QAAQ,CAAA;EAC1G,EAAA,IAAMU,SAAS,GAAGR,kBAAY,CAACF,QAAQ,CAAC,CAAA;IACxC,IAAMqa,wBAAwB,GAAGzZ,iBAAW,CAC1C,0BAA0B,EAC1BrF,QAAQ,EACRmF,SAAS,CACV,CAAA;EACD,EAAA,IAAIyR,MAAM,EAAE;MACV,OAAOtR;EAAKiD,MAAAA,SAAS,EAAC,QAAQ;EAAEoF,MAAAA,QAAA,EAAAA,QAAAA;QAAe,CAAA;EAChD,GAAA;EACD,EAAA,OACE+D,eAAC,CAAAoN,wBAAwB,EAAA1b,QAAA,KAAK1D,KAAK,EAAA;EAAAiO,IAAAA,QAAA,EAAA,CAChC/D,YAAY,IAAItE,cAAA,CAACsZ,KAAK,EAAC;EAAAjV,MAAAA,KAAK,EAAEA,KAAK;EAAE9C,MAAAA,QAAQ,EAAEA,QAAQ;EAAE/D,MAAAA,EAAE,EAAEA,EAAAA;EAAM,KAAA,CAAA,EACnE8G,YAAY,IAAIgM,WAAW,GAAGA,WAAW,GAAG,IAAI,EAChDjI,QAAQ,EACR2L,MAAM,EACNP,IAAI,CAAA;KACoB,CAAA,CAAA,CAAA;EAE/B;;ECtCA;;;EAGG;EACqB,SAAAZ,kBAAkBA,CAIxCzY,KAA+B,EAAA;EAC/B,EAAA,IAAAqf,aAAA,GAAkCrf,KAAK,CAA/B4Z,MAAM;EAANA,IAAAA,MAAM,GAAAyF,aAAA,KAAG,KAAA,CAAA,GAAA,EAAE,GAAAA,aAAA;MAAExb,QAAQ,GAAK7D,KAAK,CAAlB6D,QAAQ,CAAA;EAC7B,EAAA,IAAI+V,MAAM,CAACvV,MAAM,KAAK,CAAC,EAAE;EACvB,IAAA,OAAO,IAAI,CAAA;EACZ,GAAA;EACD,EAAA,IAAMjB,EAAE,GAAGkc,aAAO,CAAIzb,QAAQ,CAAC,CAAA;IAE/B,OACE+B,cACE,CAAA,KAAA,EAAA;EAAAqI,IAAAA,QAAA,EAAArI,cAAA,CAAA,IAAA,EAAA;EAAIxC,MAAAA,EAAE,EAAEA,EAAE;EAAEyF,MAAAA,SAAS,EAAC,yCAAyC;EAAAoF,MAAAA,QAAA,EAC5D2L,MAAM,CACJpX,MAAM,CAAC,UAAC+c,IAAI,EAAA;UAAA,OAAK,CAAC,CAACA,IAAI,CAAA;EAAA,OAAA,CAAC,CACxBhgB,GAAG,CAAC,UAACwf,KAAK,EAAE7d,KAAa,EAAI;UAC5B,OACE0E,cAAI,CAAA,IAAA,EAAA;EAAAiD,UAAAA,SAAS,EAAC,aAAa;EACxBoF,UAAAA,QAAA,EAAA8Q,KAAAA;WAD8B,EAAA7d,KAAK,CAEjC,CAAA;SAER,CAAA;OAAC,CAAA;EAEF,GAAA,CAAA,CAAA;EAEV;;EC9BA;;;EAGG;EACqB,SAAAsX,iBAAiBA,CAIvCxY,KAA8B,EAAA;EAC9B,EAAA,IAAQ6D,QAAQ,GAAW7D,KAAK,CAAxB6D,QAAQ;MAAEwV,IAAI,GAAKrZ,KAAK,CAAdqZ,IAAI,CAAA;IACtB,IAAI,CAACA,IAAI,EAAE;EACT,IAAA,OAAO,IAAI,CAAA;EACZ,GAAA;EACD,EAAA,IAAMjW,EAAE,GAAGoc,YAAM,CAAI3b,QAAQ,CAAC,CAAA;EAC9B,EAAA,IAAI,OAAOwV,IAAI,KAAK,QAAQ,EAAE;MAC5B,OACEzT,cAAA,CAAA,GAAA,EAAA;EAAGxC,MAAAA,EAAE,EAAEA,EAAE;EAAEyF,MAAAA,SAAS,EAAC,YAAY;EAAAoF,MAAAA,QAAA,EAC9BoL,IAAAA;EAAI,KAAA,CACH,CAAA;EAEP,GAAA;IACD,OACEzT,cAAA,CAAA,KAAA,EAAA;EAAKxC,IAAAA,EAAE,EAAEA,EAAE;EAAEyF,IAAAA,SAAS,EAAC,YAAY;EAAAoF,IAAAA,QAAA,EAChCoL,IAAAA;EAAI,GAAA,CACD,CAAA;EAEV;;ECfA;;;;;EAKG;EACqB,SAAAoG,mBAAmBA,CAIzCzf,KAAwC,EAAA;EACxC,EAAA,IACEkW,WAAW,GAYTlW,KAAK,CAZPkW,WAAW;MACXrP,QAAQ,GAWN7G,KAAK,CAXP6G,QAAQ;MACRzH,QAAQ,GAUNY,KAAK,CAVPZ,QAAQ;MACRyE,QAAQ,GASN7D,KAAK,CATP6D,QAAQ;MACR/C,UAAU,GAQRd,KAAK,CARPc,UAAU;MACVkV,UAAU,GAORhW,KAAK,CAPPgW,UAAU;MACVjP,QAAQ,GAMN/G,KAAK,CANP+G,QAAQ;MACRzG,QAAQ,GAKNN,KAAK,CALPM,QAAQ;MACR6G,QAAQ,GAINnH,KAAK,CAJPmH,QAAQ;MACR9G,MAAM,GAGJL,KAAK,CAHPK,MAAM;MACNqH,KAAK,GAEH1H,KAAK,CAFP0H,KAAK;MACL3C,QAAQ,GACN/E,KAAK,CADP+E,QAAQ,CAAA;EAEV,EAAA,IAAM6E,OAAO,GAAG3E,kBAAY,CAAUF,QAAQ,CAAC,CAAA;IAC/C,IAAM2X,kBAAkB,GAAG/W,iBAAW,CAAgC,oBAAoB,EAAErF,QAAQ,EAAEsJ,OAAO,CAAC,CAAA;IAC9G,IAAM2O,wBAAwB,GAAG5S,iBAAW,CAC1C,0BAA0B,EAC1BrF,QAAQ,EACRsJ,OAAO,CACR,CAAA;EACD;IACA,IACqB4S,SAAS,GAC1Blc,QAAQ,CAACkb,SAAS,CADpBC,eAAe,CAAIe,SAAS,CAAA;IAE9B,OACExK,eAAA,CAAA,UAAA,EAAA;MAAU5O,EAAE,EAAES,QAAQ,CAACC,GAAG;EAAAmK,IAAAA,QAAA,EAAA,CACvBvG,KAAK,IACJ9B,cAAA,CAAC8W,kBAAkB,EAAA;EACjBtZ,MAAAA,EAAE,EAAEuZ,aAAO,CAAI9Y,QAAQ,CAAC;EACxB6D,MAAAA,KAAK,EAAEA,KAAK;EACZP,MAAAA,QAAQ,EAAEA,QAAQ;EAClB9G,MAAAA,MAAM,EAAEA,MAAM;EACd0E,MAAAA,QAAQ,EAAEA,QAAQ;EAClBzE,MAAAA,QAAQ,EAAEA,QAAAA;EAAQ,KAAA,CAErB,EACA4V,WAAW,IACVtQ,cAAA,CAAC2S,wBAAwB,EAAA;EACvBnV,MAAAA,EAAE,EAAE0W,mBAAa,CAAIjW,QAAQ,CAAC;EAC9BqS,MAAAA,WAAW,EAAEA,WAAW;EACxB7V,MAAAA,MAAM,EAAEA,MAAM;EACd0E,MAAAA,QAAQ,EAAEA,QAAQ;EAClBzE,MAAAA,QAAQ,EAAEA,QAAAA;EAAQ,KAAA,CAErB,EACA0V,UAAU,CAACzW,GAAG,CAAC,UAACmgB,IAAqC,EAAA;QAAA,OAAKA,IAAI,CAACtI,OAAO,CAAA;EAAA,KAAA,CAAC,EACvEuI,eAAS,CAAUtf,MAAM,EAAE0E,QAAQ,EAAE3F,QAAQ,CAAC,IAC7CwG,cAAA,CAAC4W,SAAS,EAAA;EACR3T,MAAAA,SAAS,EAAC,wBAAwB;EAClCwT,MAAAA,OAAO,EAAEvb,UAAU,CAACT,MAAM,CAAC;QAC3BwG,QAAQ,EAAEA,QAAQ,IAAIE,QAAQ;EAC9BhC,MAAAA,QAAQ,EAAEA,QAAQ;EAClBzE,MAAAA,QAAQ,EAAEA,QAAAA;EAAQ,KAAA,CAErB,CAAA;EAAA,GAAA,CACQ,CAAA;EAEf;;EChFA,IAAM2e,qBAAqB,GAAG,GAAG,CAAA;EAEjC;;;EAGG;EACqB,SAAAW,UAAUA,CAChC5f,KAA+B,EAAA;EAE/B,EAAA,IAAQoD,EAAE,GAAsBpD,KAAK,CAA7BoD,EAAE;MAAEsE,KAAK,GAAe1H,KAAK,CAAzB0H,KAAK;MAAEP,QAAQ,GAAKnH,KAAK,CAAlBmH,QAAQ,CAAA;IAC3B,OACE6K,eAAQ,CAAA,QAAA,EAAA;EAAA5O,IAAAA,EAAE,EAAEA,EAAE;MAAA6K,QAAA,EAAA,CACXvG,KAAK,EACLP,QAAQ,IAAIvB,cAAM,CAAA,MAAA,EAAA;EAAAiD,MAAAA,SAAS,EAAC,UAAU;EAAAoF,MAAAA,QAAA,EAAEgR,qBAAAA;EAA6B,KAAA,CAAA,CAAA;EAAA,GAAA,CAC/D,CAAA;EAEb;;ECfA;;;;EAIG;EACH,SAASY,gBAAgBA,CACvB7f,KAAqC,EAAA;EAErC,EAAA,IAAQK,MAAM,GAAiCL,KAAK,CAA5CK,MAAM;MAAEwD,QAAQ,GAAuB7D,KAAK,CAApC6D,QAAQ;MAAEgC,MAAM,GAAe7F,KAAK,CAA1B6F,MAAM;MAAEvF,QAAQ,GAAKN,KAAK,CAAlBM,QAAQ,CAAA;EAC1C,EAAA,IAAQiF,eAAe,GAAKjF,QAAQ,CAA5BiF,eAAe,CAAA;EACvB,EAAA,IAAIoM,aAAa,GAAuB7L,wBAAkB,CAAC+Z,gBAAgB,CAAA;IAC3E,IAAM/N,eAAe,GAAa,EAAE,CAAA;EACpC,EAAA,IAAIjO,QAAQ,IAAIA,QAAQ,CAACC,GAAG,EAAE;MAC5B6N,aAAa,GAAG7L,wBAAkB,CAACga,sBAAsB,CAAA;EACzDhO,IAAAA,eAAe,CAACjQ,IAAI,CAACgC,QAAQ,CAACC,GAAG,CAAC,CAAA;EACnC,GAAA;EACD,EAAA,IAAI+B,MAAM,EAAE;EACV8L,IAAAA,aAAa,GACXA,aAAa,KAAK7L,wBAAkB,CAAC+Z,gBAAgB,GACjD/Z,wBAAkB,CAACia,0BAA0B,GAC7Cja,wBAAkB,CAACka,+BAA+B,CAAA;EACxDlO,IAAAA,eAAe,CAACjQ,IAAI,CAACgE,MAAM,CAAC,CAAA;EAC7B,GAAA;IACD,OACEmM,eAAA,CAAA,KAAA,EAAA;EAAKnJ,IAAAA,SAAS,EAAC,mBAAmB;EAChCoF,IAAAA,QAAA,EAAA,CAAArI,cAAA,CAAA,GAAA,EAAA;EAAAqI,MAAAA,QAAA,EACErI,cAAC,CAAA6Q,4BAAQ;oBAAElR,eAAe,CAACoM,aAAa,EAAEG,eAAe,CAAA;SAAC,CAAA;EACxD,KAAA,CAAA,EACHzR,MAAM,IAAIuF,cAAA,CAAA,KAAA,EAAA;QAAAqI,QAAA,EAAM2I,IAAI,CAACC,SAAS,CAACxW,MAAM,EAAE,IAAI,EAAE,CAAC,CAAA;EAAQ,KAAA,CAAA,CAAA;EAAA,GAAA,CACnD,CAAA;EAEV;;ECvBA;;;;EAIG;EACqB,SAAA+e,wBAAwBA,CAI9Cpf,KAA6C,EAAA;EAC7C,EAAA,IACEoD,EAAE,GAaApD,KAAK,CAbPoD,EAAE;MACFkW,UAAU,GAYRtZ,KAAK,CAZPsZ,UAAU;MACV/C,KAAK,GAWHvW,KAAK,CAXPuW,KAAK;MACL1P,QAAQ,GAUN7G,KAAK,CAVP6G,QAAQ;MACRoD,KAAK,GASHjK,KAAK,CATPiK,KAAK;MACLsK,WAAW,GAQTvU,KAAK,CARPuU,WAAW;MACXR,mBAAmB,GAOjB/T,KAAK,CAPP+T,mBAAmB;MACnBhN,QAAQ,GAMN/G,KAAK,CANP+G,QAAQ;MACRI,QAAQ,GAKNnH,KAAK,CALPmH,QAAQ;MACR9G,MAAM,GAIJL,KAAK,CAJPK,MAAM;MACN4N,QAAQ,GAGNjO,KAAK,CAHPiO,QAAQ;MACRlJ,QAAQ,GAEN/E,KAAK,CAFP+E,QAAQ;MACRzE,QAAQ,GACNN,KAAK,CADPM,QAAQ,CAAA;EAEV,EAAA,IAAQkb,SAAS,GAAsBlb,QAAQ,CAAvCkb,SAAS;MAAEjW,eAAe,GAAKjF,QAAQ,CAA5BiF,eAAe,CAAA;EAClC;EACA,EAAA,IAAQsW,YAAY,GAAKL,SAAS,CAACC,eAAe,CAA1CI,YAAY,CAAA;IACpB,IAAMoE,QAAQ,GAAG1a,eAAe,CAACO,wBAAkB,CAACoa,QAAQ,EAAE,CAACjW,KAAK,CAAC,CAAC,CAAA;EACtE,EAAA,IAAMuC,UAAU,IAAGwK,8BAAwB,IAAI3W,MAAM,CAAA,CAAA;IAErD,IAAI,CAACmM,UAAU,EAAE;MACf,OACE5G,cAAA,CAAA,KAAA,EAAA;EAAKiD,MAAAA,SAAS,EAAEyQ,UAAU;EAAE/C,MAAAA,KAAK,EAAEA,KAAK;EAAAtI,MAAAA,QAAA,EACrCA,QAAAA;EAAQ,KAAA,CACL,CAAA;EAET,GAAA;IAED,OACErI,cAAA,CAAA,KAAA,EAAA;EAAKiD,IAAAA,SAAS,EAAEyQ,UAAU;EAAE/C,IAAAA,KAAK,EAAEA,KAAK;EAAAtI,IAAAA,QAAA,EACtC+D,eAAK,CAAA,KAAA,EAAA;EAAAnJ,MAAAA,SAAS,EAAC,KAAK;EAAAoF,MAAAA,QAAA,EAAA,CAClBrI,cAAK,CAAA,KAAA,EAAA;EAAAiD,QAAAA,SAAS,EAAC,0BAA0B;EACvCoF,QAAAA,QAAA,EAAA+D,eAAA,CAAA,KAAA,EAAA;EAAKnJ,UAAAA,SAAS,EAAC,YAAY;EAAAoF,UAAAA,QAAA,EAAA,CACzBrI,cAAC,CAAAsZ,KAAK,EAAC;EAAAjV,YAAAA,KAAK,EAAEgW,QAAQ;EAAE9Y,YAAAA,QAAQ,EAAEA,QAAQ;EAAE/D,YAAAA,EAAE,EAAKA,EAAE,GAAA,MAAA;EAAM,WAAA,CAAI,EAC/DwC,cAAA,CAAA,OAAA,EAAA;EACEiD,YAAAA,SAAS,EAAC,cAAc;EACxBnE,YAAAA,IAAI,EAAC,MAAM;cACXtB,EAAE,EAAKA,EAAE,GAAM,MAAA;cACfgE,MAAM,EAAE,SAAAA,MAAAA,CAACrG,KAAK,EAAA;EAAA,cAAA,OAAKwT,WAAW,CAACxT,KAAK,CAACsc,MAAM,CAACla,KAAK,CAAC,CAAA;EAAA,aAAA;EAClDgd,YAAAA,YAAY,EAAElW,KAAAA;EACd,WAAA,CAAA,CAAA;WAAA,CAAA;EAEA,OAAA,CAAA,EACNrE;EAAKiD,QAAAA,SAAS,EAAC,qCAAqC;EAAAoF,QAAAA,QAAA,EAAEA,QAAAA;EAAQ,OAAA,CAAO,EACrErI,cAAA,CAAA,KAAA,EAAA;EAAKiD,QAAAA,SAAS,EAAC,UAAU;EAAAoF,QAAAA,QAAA,EACvBrI,cAAC,CAAAiW,YAAY,EACX;EAAAhT,UAAAA,SAAS,EAAC,6BAA6B;EACvC0N,UAAAA,KAAK,EAAE;EAAE6J,YAAAA,MAAM,EAAE,GAAA;aAAK;YACtBvZ,QAAQ,EAAEA,QAAQ,IAAIE,QAAQ;EAC9BsV,UAAAA,OAAO,EAAEtI,mBAAmB,CAAC9J,KAAK,CAAC;EACnClF,UAAAA,QAAQ,EAAEA,QAAQ;EAClBzE,UAAAA,QAAQ,EAAEA,QAAAA;WACV,CAAA;EAAA,OAAA,CACE,CAAA;OACF,CAAA;EAAA,GAAA,CACF,CAAA;EAEV;;EC7DA,SAASkb,SAASA,GAAA;IAKhB,OAAO;EACLJ,IAAAA,6BAA6B,EAA7BA,6BAA6B;EAC7BE,IAAAA,sBAAsB,EAAtBA,sBAAsB;EACtBgB,IAAAA,kBAAkB,EAAlBA,kBAAkB;EAClBC,IAAAA,uBAAuB,EAAvBA,uBAAuB;MACvBd,eAAe,EAAEA,eAAe,EAAW;EAC3CmB,IAAAA,iBAAiB,EAAjBA,iBAAiB;EACjBrE,IAAAA,wBAAwB,EAAEqG,gBAAgB;EAC1CyB,IAAAA,iBAAiB,EAAExB,SAAS;EAC5BvG,IAAAA,aAAa,EAAbA,aAAa;EACbG,IAAAA,kBAAkB,EAAlBA,kBAAkB;EAClBD,IAAAA,iBAAiB,EAAjBA,iBAAiB;EACjBiH,IAAAA,mBAAmB,EAAnBA,mBAAmB;EACnB/C,IAAAA,kBAAkB,EAAEkD,UAAU;EAC9Bla,IAAAA,wBAAwB,EAAEma,gBAAgB;EAC1CT,IAAAA,wBAAwB,EAAxBA,wBAAAA;KACD,CAAA;EACH;;EC1BA,SAASkB,YAAYA,CAACC,KAAa,EAAEC,IAAY,EAAA;IAC/C,IAAM5W,OAAO,GAAG,EAAE,CAAA;IAClB,KAAK,IAAIvH,CAAC,GAAGke,KAAK,EAAEle,CAAC,IAAIme,IAAI,EAAEne,CAAC,EAAE,EAAE;MAClCuH,OAAO,CAAC/H,IAAI,CAAC;EAAEsB,MAAAA,KAAK,EAAEd,CAAC;EAAE4H,MAAAA,KAAK,EAAEwW,SAAG,CAACpe,CAAC,EAAE,CAAC,CAAA;EAAC,KAAE,CAAC,CAAA;EAC7C,GAAA;EACD,EAAA,OAAOuH,OAAO,CAAA;EAChB,CAAA;EAEA,SAAS8W,cAAcA,CAACpf,KAAiB,EAAA;IACvC,OAAOwM,MAAM,CAAC6S,MAAM,CAACrf,KAAK,CAAC,CAACoO,KAAK,CAAC,UAACvM,KAAK,EAAA;MAAA,OAAKA,KAAK,KAAK,CAAC,CAAC,CAAA;KAAC,CAAA,CAAA;EAC5D,CAAA;EAEA,SAASyd,gBAAgBA,CACvBtf,KAAiB,EACjBuf,IAAa,EACbC,YAAmE;EAAA,EAAA,IAAnEA;EAAAA,IAAAA,aAA+B,CAAC,IAAI,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,GAAG,CAAC,CAAC,CAAA;EAAA,GAAA;EAEnE,EAAA,IAAQC,IAAI,GAAuC3f,KAAK,CAAhD2f,IAAI;MAAEC,KAAK,GAAgC5f,KAAK,CAA1C4f,KAAK;MAAEC,GAAG,GAA2B7f,KAAK,CAAnC6f,GAAG;MAAEC,IAAI,GAAqB9f,KAAK,CAA9B8f,IAAI;MAAEC,MAAM,GAAa/f,KAAK,CAAxB+f,MAAM;MAAEC,MAAM,GAAKhgB,KAAK,CAAhBggB,MAAM,CAAA;IAC9C,IAAMC,IAAI,GAAG,CACX;EACE7c,IAAAA,IAAI,EAAE,MAAM;EACZ8c,IAAAA,KAAK,EAAEV,UAAU;EACjB3d,IAAAA,KAAK,EAAE8d,IAAAA;EACR,GAAA,EACD;EAAEvc,IAAAA,IAAI,EAAE,OAAO;EAAE8c,IAAAA,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EAAEre,IAAAA,KAAK,EAAE+d,KAAAA;EAAO,GAAA,EAC/C;EAAExc,IAAAA,IAAI,EAAE,KAAK;EAAE8c,IAAAA,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EAAEre,IAAAA,KAAK,EAAEge,GAAAA;EAAK,GAAA,CAC8B,CAAA;EAC3E,EAAA,IAAIN,IAAI,EAAE;MACRU,IAAI,CAAC1f,IAAI,CACP;EAAE6C,MAAAA,IAAI,EAAE,MAAM;EAAE8c,MAAAA,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EAAEre,MAAAA,KAAK,EAAEie,IAAAA;EAAI,KAAE,EAC7C;EAAE1c,MAAAA,IAAI,EAAE,QAAQ;EAAE8c,MAAAA,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EAAEre,MAAAA,KAAK,EAAEke,MAAAA;EAAQ,KAAA,EACjD;EAAE3c,MAAAA,IAAI,EAAE,QAAQ;EAAE8c,MAAAA,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EAAEre,MAAAA,KAAK,EAAEme,MAAAA;EAAQ,KAAA,CAClD,CAAA;EACF,GAAA;EACD,EAAA,OAAOC,IAAI,CAAA;EACb,CAAA;EAYA,SAASE,WAAWA,CAAA1Y,IAAA,EAaQ;EAAA,EAAA,IAZ1BrE,IAAI,GAAAqE,IAAA,CAAJrE,IAAI;MACJ8c,KAAK,GAAAzY,IAAA,CAALyY,KAAK;MACLre,KAAK,GAAA4F,IAAA,CAAL5F,KAAK;MACLue,MAAM,GAAA3Y,IAAA,CAAN2Y,MAAM;MACNC,MAAM,GAAA5Y,IAAA,CAAN4Y,MAAM;MACNhb,IAAI,GAAAoC,IAAA,CAAJpC,IAAI;MACJE,QAAQ,GAAAkC,IAAA,CAARlC,QAAQ;MACRE,QAAQ,GAAAgC,IAAA,CAARhC,QAAQ;MACRE,SAAS,GAAA8B,IAAA,CAAT9B,SAAS;MACT3G,QAAQ,GAAAyI,IAAA,CAARzI,QAAQ;MACR8G,MAAM,GAAA2B,IAAA,CAAN3B,MAAM;MACNC,OAAO,GAAA0B,IAAA,CAAP1B,OAAO,CAAA;EAEP,EAAA,IAAMjE,EAAE,GAAGue,MAAM,GAAG,GAAG,GAAGjd,IAAI,CAAA;EAC9B,EAAA,IAAQkd,YAAY,GAAKthB,QAAQ,CAACkJ,OAAO,CAAjCoY,YAAY,CAAA;IACpB,OACEhc,eAACgc,YAAY,EAAA;EACXvhB,IAAAA,MAAM,EAAE;EAAEqE,MAAAA,IAAI,EAAE,SAAA;OAAgB;EAChCtB,IAAAA,EAAE,EAAEA,EAAE;EACNuD,IAAAA,IAAI,EAAEA,IAAI;EACVkC,IAAAA,SAAS,EAAC,cAAc;EACxBe,IAAAA,OAAO,EAAE;QAAEiB,WAAW,EAAEyV,YAAY,CAACkB,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAA;OAAG;EAC1DlY,IAAAA,WAAW,EAAE5E,IAAI;EACjBvB,IAAAA,KAAK,EAAEA,KAAK;EACZ0D,IAAAA,QAAQ,EAAEA,QAAQ;EAClBE,IAAAA,QAAQ,EAAEA,QAAQ;EAClBE,IAAAA,SAAS,EAAEA,SAAS;MACpB5F,QAAQ,EAAE,SAAAA,QAAAA,CAAC8B,KAAU,EAAA;EAAA,MAAA,OAAKue,MAAM,CAAChd,IAAwB,EAAEvB,KAAK,CAAC,CAAA;EAAA,KAAA;EACjEiE,IAAAA,MAAM,EAAEA,MAAM;EACdC,IAAAA,OAAO,EAAEA,OAAO;EAChB/G,IAAAA,QAAQ,EAAEA,QAAQ;EAClB2J,IAAAA,KAAK,EAAC,EAAE;MACU,kBAAA,EAAA4T,wBAAkB,CAAI8D,MAAM,CAAA;EAC9C,GAAA,CAAA,CAAA;EAEN,CAAA;EAEA;;EAEG;EACH,SAASE,aAAaA,CAAAvX,KAAA,EAaC;EAAA,EAAA,IAAAwX,UAAA,GAAAxX,KAAA,CAZrBuW,IAAI;EAAJA,IAAAA,IAAI,GAAAiB,UAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,UAAA;MAAAC,cAAA,GAAAzX,KAAA,CACZzD,QAAQ;EAARA,IAAAA,QAAQ,GAAAkb,cAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,cAAA;MAAAC,cAAA,GAAA1X,KAAA,CAChBvD,QAAQ;EAARA,IAAAA,QAAQ,GAAAib,cAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,cAAA;MAAAC,eAAA,GAAA3X,KAAA,CAChBrD,SAAS;EAATA,IAAAA,SAAS,GAAAgb,eAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,eAAA;MACjBrY,OAAO,GAAAU,KAAA,CAAPV,OAAO;MACPxG,EAAE,GAAAkH,KAAA,CAAFlH,EAAE;MACFuD,IAAI,GAAA2D,KAAA,CAAJ3D,IAAI;MACJrG,QAAQ,GAAAgK,KAAA,CAARhK,QAAQ;MACR8G,MAAM,GAAAkD,KAAA,CAANlD,MAAM;MACNC,OAAO,GAAAiD,KAAA,CAAPjD,OAAO;MACPhG,QAAQ,GAAAiJ,KAAA,CAARjJ,QAAQ;MACR8B,KAAK,GAAAmH,KAAA,CAALnH,KAAK,CAAA;EAEL,EAAA,IAAQoC,eAAe,GAAKjF,QAAQ,CAA5BiF,eAAe,CAAA;EACvB,EAAA,IAAA+M,SAAA,GAAkCC,cAAQ,CAACpP,KAAK,CAAC;EAA1CqP,IAAAA,SAAS,GAAAF,SAAA,CAAA,CAAA,CAAA;EAAEG,IAAAA,YAAY,GAAAH,SAAA,CAAA,CAAA,CAAA,CAAA;IAC9B,IAAA4P,WAAA,GAA0BC,gBAAU,CAAC,UAAC7gB,KAAiB,EAAE8gB,MAA2B,EAAI;EACtF,MAAA,OAAA1e,QAAA,CAAA,EAAA,EAAYpC,KAAK,EAAK8gB,MAAM,CAAA,CAAA;EAC9B,KAAC,EAAEC,qBAAe,CAAClf,KAAK,EAAE0d,IAAI,CAAC,CAAC;EAFzBvf,IAAAA,KAAK,GAAA4gB,WAAA,CAAA,CAAA,CAAA;EAAEpgB,IAAAA,QAAQ,GAAAogB,WAAA,CAAA,CAAA,CAAA,CAAA;EAItBhH,EAAAA,eAAS,CAAC,YAAK;EACb,IAAA,IAAMoH,UAAU,GAAGC,kBAAY,CAACjhB,KAAK,EAAEuf,IAAI,CAAC,CAAA;MAC5C,IAAIH,cAAc,CAACpf,KAAK,CAAC,IAAIghB,UAAU,KAAKnf,KAAK,EAAE;EACjD;QACA9B,QAAQ,CAACihB,UAAU,CAAC,CAAA;EACrB,KAAA,MAAM,IAAI9P,SAAS,KAAKrP,KAAK,EAAE;EAC9B;QACAsP,YAAY,CAACtP,KAAK,CAAC,CAAA;EACnBrB,MAAAA,QAAQ,CAACugB,qBAAe,CAAClf,KAAK,EAAE0d,IAAI,CAAC,CAAC,CAAA;EACvC,KAAA;EACH,GAAC,EAAE,CAACA,IAAI,EAAE1d,KAAK,EAAE9B,QAAQ,EAAEC,KAAK,EAAEkR,SAAS,CAAC,CAAC,CAAA;IAE7C,IAAMG,YAAY,GAAGC,iBAAW,CAAC,UAAC4P,QAA0B,EAAErf,KAAa,EAAI;EAAA,IAAA,IAAAsf,SAAA,CAAA;MAC7E3gB,QAAQ,EAAA2gB,SAAA,GAAA,EAAA,EAAAA,SAAA,CAAID,QAAQ,CAAGrf,GAAAA,KAAK,EAAAsf,SAAA,EAAG,CAAA;KAChC,EAAE,EAAE,CAAC,CAAA;EAEN,EAAA,IAAMC,YAAY,GAAG9P,iBAAW,CAC9B,UAAC7R,KAAoC,EAAI;MACvCA,KAAK,CAACK,cAAc,EAAE,CAAA;MACtB,IAAIyF,QAAQ,IAAIE,QAAQ,EAAE;EACxB,MAAA,OAAA;EACD,KAAA;EACD,IAAA,IAAM4b,SAAS,GAAGN,qBAAe,CAAC,IAAItB,IAAI,EAAE,CAAC6B,MAAM,EAAE,EAAE/B,IAAI,CAAC,CAAA;EAC5Dxf,IAAAA,QAAQ,CAACkhB,kBAAY,CAACI,SAAS,EAAE9B,IAAI,CAAC,CAAC,CAAA;KACxC,EACD,CAACha,QAAQ,EAAEE,QAAQ,EAAE8Z,IAAI,CAAC,CAC3B,CAAA;EAED,EAAA,IAAMgC,WAAW,GAAGjQ,iBAAW,CAC7B,UAAC7R,KAAoC,EAAI;MACvCA,KAAK,CAACK,cAAc,EAAE,CAAA;MACtB,IAAIyF,QAAQ,IAAIE,QAAQ,EAAE;EACxB,MAAA,OAAA;EACD,KAAA;MACD1F,QAAQ,CAACM,SAAS,CAAC,CAAA;KACpB,EACD,CAACkF,QAAQ,EAAEE,QAAQ,EAAE1F,QAAQ,CAAC,CAC/B,CAAA;IAED,OACE2Q,eAAI,CAAA,IAAA,EAAA;EAAAnJ,IAAAA,SAAS,EAAC,aAAa;EAAAoF,IAAAA,QAAA,EAAA,CACxB2S,gBAAgB,CAACtf,KAAK,EAAEuf,IAAI,EAAEjX,OAAO,CAACkX,UAA0C,CAAC,CAACvhB,GAAG,CAAC,UAACujB,SAAS,EAAEzgB,CAAC,EAAA;QAAA,OAClGuD,cAAI,CAAA,IAAA,EAAA;EAAAiD,QAAAA,SAAS,EAAC,kBAAkB;EAAAoF,QAAAA,QAAA,EAC9BrI,eAAC6b,WAAW,EAAA/d,QAAA,CAAA;EACVie,UAAAA,MAAM,EAAEve,EAAE;EACVuD,UAAAA,IAAI,EAAEA,IAAI;EACV+a,UAAAA,MAAM,EAAE/O,YAAAA;EAAY,SAAA,EAChBmQ,SAAS,EAAA;EACbjc,UAAAA,QAAQ,EAAEA,QAAQ;EAClBE,UAAAA,QAAQ,EAAEA,QAAQ;EAClBzG,UAAAA,QAAQ,EAAEA,QAAQ;EAClB8G,UAAAA,MAAM,EAAEA,MAAM;EACdC,UAAAA,OAAO,EAAEA,OAAO;EAChBJ,UAAAA,SAAS,EAAEA,SAAS,IAAI5E,CAAC,KAAK,CAAA;EAAC,SAAA,CAAA,CAAA;SAC/B,EAZkCA,CAAC,CAalC,CAAA;EAAA,KACN,CAAC,EACD,CAACuH,OAAO,CAACmZ,aAAa,KAAK,WAAW,GAAG,CAACnZ,OAAO,CAACmZ,aAAa,GAAG,IAAI,KACrEnd,cAAA,CAAA,IAAA,EAAA;EAAIiD,MAAAA,SAAS,EAAC,kBAAkB;kBAC9BjD,cAAG,CAAA,GAAA,EAAA;EAAAod,QAAAA,IAAI,EAAC,GAAG;EAACna,QAAAA,SAAS,EAAC,sBAAsB;EAACwT,QAAAA,OAAO,EAAEqG,YAAY;EAAAzU,QAAAA,QAAA,EAC/D1I,eAAe,CAACO,wBAAkB,CAACmd,QAAQ,CAAA;;EAE3C,KAAA,CACN,EACA,CAACrZ,OAAO,CAACsZ,eAAe,KAAK,WAAW,GAAG,CAACtZ,OAAO,CAACsZ,eAAe,GAAG,IAAI,KACzEtd,cAAI,CAAA,IAAA,EAAA;EAAAiD,MAAAA,SAAS,EAAC,kBAAkB;EAAAoF,MAAAA,QAAA,EAC9BrI;EAAGod,QAAAA,IAAI,EAAC,GAAG;EAACna,QAAAA,SAAS,EAAC,2BAA2B;EAACwT,QAAAA,OAAO,EAAEwG,WAAW;EACnE5U,QAAAA,QAAA,EAAA1I,eAAe,CAACO,wBAAkB,CAACqd,UAAU,CAAA;SAAC,CAAA;QAGpD,CAAA;EAAA,GAAA,CACE,CAAA;EAET;;;ECjMA;;;;EAIG;EACH,SAASC,iBAAiBA,CAAAra,IAAA,EAGH;EAAA,EAAA,IAAAsa,SAAA,GAAAta,IAAA,CAFrB8X,IAAI;EAAJA,IAAAA,IAAI,GAAAwC,SAAA,KAAG,KAAA,CAAA,GAAA,IAAI,GAAAA,SAAA;EACRrjB,IAAAA,KAAK,GAAA6J,6BAAA,CAAAd,IAAA,EAAAe,WAAA,CAAA,CAAA;IAER,IAAQ+X,aAAa,GAAK7hB,KAAK,CAACM,QAAQ,CAACkJ,OAAO,CAAxCqY,aAAa,CAAA;EACrB,EAAA,OAAOjc,cAAA,CAACic,aAAa,EAAAne,QAAA,CAAA;EAACmd,IAAAA,IAAI,EAAEA,IAAAA;EAAI,GAAA,EAAM7gB,KAAK,CAAI,CAAA,CAAA;EACjD;;ECAA;;;;EAIG;EACH,SAASsjB,cAAcA,CAAAva,IAAA,EAeA;EAAA,EAAA,IAAAwa,oBAAA,CAAA;EAAA,EAAA,IAdrBljB,MAAM,GAAA0I,IAAA,CAAN1I,MAAM;MACN0E,QAAQ,GAAAgE,IAAA,CAARhE,QAAQ;MACR6E,OAAO,GAAAb,IAAA,CAAPa,OAAO;MACPxG,EAAE,GAAA2F,IAAA,CAAF3F,EAAE;MACFD,KAAK,GAAA4F,IAAA,CAAL5F,KAAK;MACL0D,QAAQ,GAAAkC,IAAA,CAARlC,QAAQ;MACRE,QAAQ,GAAAgC,IAAA,CAARhC,QAAQ;MACRkD,KAAK,GAAAlB,IAAA,CAALkB,KAAK;MACLI,SAAS,GAAAtB,IAAA,CAATsB,SAAS;MAAAmZ,cAAA,GAAAza,IAAA,CACT9B,SAAS;EAATA,IAAAA,SAAS,GAAAuc,cAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,cAAA;MACjBpc,MAAM,GAAA2B,IAAA,CAAN3B,MAAM;MACNC,OAAO,GAAA0B,IAAA,CAAP1B,OAAO;MACPhG,QAAQ,GAAA0H,IAAA,CAAR1H,QAAQ;MACRf,QAAQ,GAAAyI,IAAA,CAARzI,QAAQ,CAAA;IAER,IAAMiY,wBAAwB,GAAG5S,iBAAW,CAC1C,0BAA0B,EAC1BrF,QAAQ,EACRsJ,OAAO,CACR,CAAA;EACD;EACA;EACA;EACA,EAAA,IAAMzC,QAAQ,GAAGsc,6BAAuB,CAAIpjB,MAAM,CAAC,CAAA;EAEnD,EAAA,IAAMsS,YAAY,GAAGC,iBAAW,CAC9B,UAAC7R,KAAoC,EAAA;EAAA,IAAA,OAAKM,QAAQ,CAACN,KAAK,CAACsc,MAAM,CAACqG,OAAO,CAAC,CAAA;KACxE,EAAA,CAACriB,QAAQ,CAAC,CACX,CAAA;EAED,EAAA,IAAMsiB,UAAU,GAAG/Q,iBAAW,CAC5B,UAAC7R,KAAmC,EAAA;MAAA,OAAKqG,MAAM,CAAChE,EAAE,EAAErC,KAAK,CAACsc,MAAM,CAACqG,OAAO,CAAC,CAAA;EAAA,GAAA,EACzE,CAACtc,MAAM,EAAEhE,EAAE,CAAC,CACb,CAAA;EAED,EAAA,IAAMwgB,WAAW,GAAGhR,iBAAW,CAC7B,UAAC7R,KAAmC,EAAA;MAAA,OAAKsG,OAAO,CAACjE,EAAE,EAAErC,KAAK,CAACsc,MAAM,CAACqG,OAAO,CAAC,CAAA;EAAA,GAAA,EAC1E,CAACrc,OAAO,EAAEjE,EAAE,CAAC,CACd,CAAA;EACD,EAAA,IAAM8S,WAAW,GAAA,CAAAqN,oBAAA,GAAG3Z,OAAO,CAACsM,WAAW,KAAA,IAAA,GAAAqN,oBAAA,GAAIljB,MAAM,CAAC6V,WAAW,CAAA;IAE7D,OACElE,eAAA,CAAA,KAAA,EAAA;MAAKnJ,SAAS,EAAA,WAAA,IAAchC,QAAQ,IAAIE,QAAQ,GAAG,UAAU,GAAG,EAAE,CAAE;EAAAkH,IAAAA,QAAA,EAAA,CACjE,CAAC5D,SAAS,IAAI,CAAC,CAAC6L,WAAW,IAC1BtQ,cAAC,CAAA2S,wBAAwB,EACvB;EAAAnV,MAAAA,EAAE,EAAE0W,mBAAa,CAAI1W,EAAE,CAAC;EACxB8S,MAAAA,WAAW,EAAEA,WAAW;EACxB7V,MAAAA,MAAM,EAAEA,MAAM;EACd0E,MAAAA,QAAQ,EAAEA,QAAQ;EAClBzE,MAAAA,QAAQ,EAAEA,QAAAA;EAAQ,KAAA,CAErB,EACD0R,eACE,CAAA,OAAA,EAAA;EAAA/D,MAAAA,QAAA,EAAA,CAAArI,cAAA,CAAA,OAAA,EAAA;EACElB,QAAAA,IAAI,EAAC,UAAU;EACftB,QAAAA,EAAE,EAAEA,EAAE;EACNuD,QAAAA,IAAI,EAAEvD,EAAE;UACRsgB,OAAO,EAAE,OAAOvgB,KAAK,KAAK,WAAW,GAAG,KAAK,GAAGA,KAAK;EACrDgE,QAAAA,QAAQ,EAAEA,QAAQ;UAClBN,QAAQ,EAAEA,QAAQ,IAAIE,QAAQ;EAC9B0W,QAAAA,SAAS,EAAExW,SAAS;EACpB5F,QAAAA,QAAQ,EAAEsR,YAAY;EACtBvL,QAAAA,MAAM,EAAEuc,UAAU;EAClBtc,QAAAA,OAAO,EAAEuc,WAAW;UAAA,kBAAA,EACF/F,wBAAkB,CAAIza,EAAE,CAAA;EAC1C,OAAA,CAAA,EACDygB,gBAAU,CAACje,cAAO,CAAA,MAAA,EAAA;EAAAqI,QAAAA,QAAA,EAAAhE,KAAAA;SAAa,CAAA,EAAEI,SAAS,CAAC,CAAA;EACtC,KAAA,CAAA,CAAA;EAAA,GAAA,CACJ,CAAA;EAEV;;EC3EA;;;;EAIG;EACH,SAASyZ,gBAAgBA,CAAA/a,IAAA,EAUF;EAAA,EAAA,IATrB3F,EAAE,GAAA2F,IAAA,CAAF3F,EAAE;MACFyD,QAAQ,GAAAkC,IAAA,CAARlC,QAAQ;MAAAkd,YAAA,GAAAhb,IAAA,CACRa,OAAO;MAAAoa,mBAAA,GAAAD,YAAA,CAAIE,MAAM;EAANA,IAAAA,MAAM,GAAAD,mBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,mBAAA;MAAEnZ,WAAW,GAAAkZ,YAAA,CAAXlZ,WAAW;MAAEqZ,YAAY,GAAAH,YAAA,CAAZG,YAAY;MAAE5G,UAAU,GAAAyG,YAAA,CAAVzG,UAAU;MAChEna,KAAK,GAAA4F,IAAA,CAAL5F,KAAK;MAAAqgB,cAAA,GAAAza,IAAA,CACL9B,SAAS;EAATA,IAAAA,SAAS,GAAAuc,cAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,cAAA;MACjBzc,QAAQ,GAAAgC,IAAA,CAARhC,QAAQ;MACR1F,QAAQ,GAAA0H,IAAA,CAAR1H,QAAQ;MACR+F,MAAM,GAAA2B,IAAA,CAAN3B,MAAM;MACNC,OAAO,GAAA0B,IAAA,CAAP1B,OAAO,CAAA;EAEP,EAAA,IAAM8c,gBAAgB,GAAG9kB,KAAK,CAACC,OAAO,CAAC6D,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC,CAAA;EAE/D,EAAA,IAAMwgB,UAAU,GAAG/Q,iBAAW,CAC5B,UAAAtI,KAAA,EAAA;EAAA,IAAA,IAAanH,KAAK,GAAAmH,KAAA,CAAf+S,MAAM,CAAIla,KAAK,CAAA;EAAA,IAAA,OAChBiE,MAAM,CAAChE,EAAE,EAAEghB,8BAAwB,CAAIjhB,KAAK,EAAE0H,WAAW,EAAEyS,UAAU,CAAC,CAAC,CAAA;EAAA,GAAA,EACzE,CAAClW,MAAM,EAAEhE,EAAE,CAAC,CACb,CAAA;EAED,EAAA,IAAMwgB,WAAW,GAAGhR,iBAAW,CAC7B,UAAA1H,KAAA,EAAA;EAAA,IAAA,IAAa/H,KAAK,GAAA+H,KAAA,CAAfmS,MAAM,CAAIla,KAAK,CAAA;EAAA,IAAA,OAChBkE,OAAO,CAACjE,EAAE,EAAEghB,8BAAwB,CAAIjhB,KAAK,EAAE0H,WAAW,EAAEyS,UAAU,CAAC,CAAC,CAAA;EAAA,GAAA,EAC1E,CAACjW,OAAO,EAAEjE,EAAE,CAAC,CACd,CAAA;IACD,OACEwC,cAAA,CAAA,KAAA,EAAA;EAAKiD,IAAAA,SAAS,EAAC,YAAY;EAACzF,IAAAA,EAAE,EAAEA,EAAE;gBAC/B/D,KAAK,CAACC,OAAO,CAACuL,WAAW,CAAC,IACzBA,WAAW,CAACtL,GAAG,CAAC,UAAC6P,MAAM,EAAElO,KAAK,EAAI;QAChC,IAAMwiB,OAAO,GAAGW,2BAAqB,CAAIjV,MAAM,CAACjM,KAAK,EAAEghB,gBAAgB,CAAC,CAAA;EACxE,MAAA,IAAMG,YAAY,GAAGjlB,KAAK,CAACC,OAAO,CAAC4kB,YAAY,CAAC,IAAIA,YAAY,CAAC5O,OAAO,CAAClG,MAAM,CAACjM,KAAK,CAAC,KAAK,CAAC,CAAC,CAAA;QAC7F,IAAMohB,WAAW,GAAG1d,QAAQ,IAAIyd,YAAY,IAAIvd,QAAQ,GAAG,UAAU,GAAG,EAAE,CAAA;EAE1E,MAAA,IAAM4L,YAAY,GAAG,SAAfA,YAAYA,CAAI5R,KAAoC,EAAI;EAC5D,QAAA,IAAIA,KAAK,CAACsc,MAAM,CAACqG,OAAO,EAAE;YACxBriB,QAAQ,CAACmjB,4BAAsB,CAAItjB,KAAK,EAAEijB,gBAAgB,EAAEtZ,WAAW,CAAC,CAAC,CAAA;EAC1E,SAAA,MAAM;YACLxJ,QAAQ,CAACojB,8BAAwB,CAAIvjB,KAAK,EAAEijB,gBAAgB,EAAEtZ,WAAW,CAAC,CAAC,CAAA;EAC5E,SAAA;SACF,CAAA;EAED,MAAA,IAAM6Z,QAAQ,GACZ1S,eAAA,CAAA,MAAA,EAAA;EAAA/D,QAAAA,QAAA,EAAA,CACErI;EACElB,UAAAA,IAAI,EAAC,UAAU;EACftB,UAAAA,EAAE,EAAEuhB,cAAQ,CAACvhB,EAAE,EAAElC,KAAK,CAAC;EACvByF,UAAAA,IAAI,EAAEvD,EAAE;EACRsgB,UAAAA,OAAO,EAAEA,OAAO;EAChBvgB,UAAAA,KAAK,EAAE4O,MAAM,CAAC7Q,KAAK,CAAC;EACpB2F,UAAAA,QAAQ,EAAEA,QAAQ,IAAIyd,YAAY,IAAIvd,QAAQ;EAC9C0W,UAAAA,SAAS,EAAExW,SAAS,IAAI/F,KAAK,KAAK,CAAC;EACnCG,UAAAA,QAAQ,EAAEsR,YAAY;EACtBvL,UAAAA,MAAM,EAAEuc,UAAU;EAClBtc,UAAAA,OAAO,EAAEuc,WAAW;YAAA,kBAAA,EACF/F,wBAAkB,CAAIza,EAAE,CAAA;EAAC,SAAA,CAC3C,EACFwC,cAAA,CAAA,MAAA,EAAA;YAAAqI,QAAA,EAAOmB,MAAM,CAACnF,KAAAA;EAAa,SAAA,CAAA,CAAA;EAAA,OAAA,CAE9B,CAAA;EACD,MAAA,OAAOga,MAAM,GACXre,cAAmB,CAAA,OAAA,EAAA;EAAAiD,QAAAA,SAAS,uBAAqB0b,WAAa;EAAAtW,QAAAA,QAAA,EAC3DyW,QAAAA;EAAQ,OAAA,EADCxjB,KAAK,CAET,GAER0E,cAAA,CAAA,KAAA,EAAA;EAAiBiD,QAAAA,SAAS,gBAAc0b,WAAa;EACnDtW,QAAAA,QAAA,EAAArI,cAAA,CAAA,OAAA,EAAA;EAAAqI,UAAAA,QAAA,EAAQyW,QAAAA;WAAiB,CAAA;SAAA,EADjBxjB,KAAK,CAGhB,CAAA;OACF,CAAA;EACC,GAAA,CAAA,CAAA;EAEV;;ECvFA;;;;EAIG;EACqB,SAAA0jB,WAAWA,CACjC5kB,KAA2B,EAAA;EAE3B,EAAA,IAAQ6G,QAAQ,GAAkC7G,KAAK,CAA/C6G,QAAQ;MAAEE,QAAQ,GAAwB/G,KAAK,CAArC+G,QAAQ;MAAE6C,OAAO,GAAe5J,KAAK,CAA3B4J,OAAO;MAAEtJ,QAAQ,GAAKN,KAAK,CAAlBM,QAAQ,CAAA;IAC7C,IAAMsc,iBAAiB,GAAGjX,iBAAW,CAA+B,mBAAmB,EAAErF,QAAQ,EAAEsJ,OAAO,CAAC,CAAA;EAC3G,EAAA,OAAOhE,cAAC,CAAAgX,iBAAiB,EAAAlZ,QAAA,CAAA;EAACgB,IAAAA,IAAI,EAAC,OAAA;EAAO,GAAA,EAAK1E,KAAK,EAAA;MAAE6G,QAAQ,EAAEA,QAAQ,IAAIE,QAAAA;KAAY,CAAA,CAAA,CAAA;EACtF;;ECVA;;;;EAIG;EACqB,SAAA8d,UAAUA,CAChC7kB,KAA2B,EAAA;EAE3B,EAAA,IAAQqB,QAAQ,GAAwBrB,KAAK,CAArCqB,QAAQ;MAAEuI,OAAO,GAAe5J,KAAK,CAA3B4J,OAAO;MAAEtJ,QAAQ,GAAKN,KAAK,CAAlBM,QAAQ,CAAA;IACnC,IAAMsc,iBAAiB,GAAGjX,iBAAW,CAA+B,mBAAmB,EAAErF,QAAQ,EAAEsJ,OAAO,CAAC,CAAA;EAC3G,EAAA,IAAM+I,YAAY,GAAGC,iBAAW,CAAC,UAACzP,KAAU,EAAA;EAAA,IAAA,OAAK9B,QAAQ,CAAC8B,KAAK,IAAIxB,SAAS,CAAC,CAAA;KAAE,EAAA,CAACN,QAAQ,CAAC,CAAC,CAAA;EAE1F,EAAA,OAAOuE,cAAC,CAAAgX,iBAAiB,EAAAlZ,QAAA,CAAA;EAACgB,IAAAA,IAAI,EAAC,MAAA;EAAM,GAAA,EAAK1E,KAAK,EAAA;EAAEqB,IAAAA,QAAQ,EAAEsR,YAAAA;KAAgB,CAAA,CAAA,CAAA;EAC7E;;ECNA;;;;EAIG;EACqB,SAAAmS,cAAcA,CAIpC9kB,KAA2B,EAAA;EAC3B,EAAA,IAAQqB,SAAQ,GAA+BrB,KAAK,CAA5CqB,QAAQ;MAAE8B,KAAK,GAAwBnD,KAAK,CAAlCmD,KAAK;MAAEyG,OAAO,GAAe5J,KAAK,CAA3B4J,OAAO;MAAEtJ,QAAQ,GAAKN,KAAK,CAAlBM,QAAQ,CAAA;IAC1C,IAAMsc,iBAAiB,GAAGjX,iBAAW,CAA+B,mBAAmB,EAAErF,QAAQ,EAAEsJ,OAAO,CAAC,CAAA;EAC3G,EAAA,OACEhE,cAAA,CAACgX,iBAAiB,EAAAlZ,QAAA,CAAA;EAChBgB,IAAAA,IAAI,EAAC,gBAAA;EAAgB,GAAA,EACjB1E,KAAK,EAAA;EACTmD,IAAAA,KAAK,EAAE4hB,gBAAU,CAAC5hB,KAAK,CAAC;MACxB9B,QAAQ,EAAE,SAAAA,QAAAA,CAAC8B,KAAK,EAAA;EAAA,MAAA,OAAK9B,SAAQ,CAAC2jB,gBAAU,CAAC7hB,KAAK,CAAC,CAAC,CAAA;EAAA,KAAA;KAChD,CAAA,CAAA,CAAA;EAEN;;EC5BA;;;EAGG;EACqB,SAAA8hB,WAAWA,CACjCjlB,KAA2B,EAAA;EAE3B,EAAA,IAAQ4J,OAAO,GAAe5J,KAAK,CAA3B4J,OAAO;MAAEtJ,QAAQ,GAAKN,KAAK,CAAlBM,QAAQ,CAAA;IACzB,IAAMsc,iBAAiB,GAAGjX,iBAAW,CAA+B,mBAAmB,EAAErF,QAAQ,EAAEsJ,OAAO,CAAC,CAAA;EAC3G,EAAA,OAAOhE,cAAA,CAACgX,iBAAiB,EAAAlZ,QAAA,CAAA;EAACgB,IAAAA,IAAI,EAAC,OAAA;EAAO,GAAA,EAAK1E,KAAK,CAAI,CAAA,CAAA;EACtD;;ECCA,SAASklB,gBAAgBA,CAACC,OAAe,EAAExe,IAAY,EAAA;IACrD,IAAIwe,OAAO,KAAK,IAAI,EAAE;EACpB,IAAA,OAAO,IAAI,CAAA;EACZ,GAAA;IACD,OAAOA,OAAO,CAAClS,OAAO,CAAC,SAAS,aAAWmS,kBAAkB,CAACze,IAAI,CAAC,GAAU,SAAA,CAAA,CAAA;EAC/E,CAAA;EASA,SAAS0e,WAAWA,CAACC,IAAU,EAAA;EAC7B,EAAA,IAAQ3e,IAAI,GAAiB2e,IAAI,CAAzB3e,IAAI;MAAE4e,IAAI,GAAWD,IAAI,CAAnBC,IAAI;MAAE7gB,IAAI,GAAK4gB,IAAI,CAAb5gB,IAAI,CAAA;EACxB,EAAA,OAAO,IAAI8gB,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAI;EACrC,IAAA,IAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,UAAU,EAAE,CAAA;MACtCF,MAAM,CAACG,OAAO,GAAGJ,MAAM,CAAA;EACvBC,IAAAA,MAAM,CAACI,MAAM,GAAG,UAAChlB,KAAK,EAAI;EAAA,MAAA,IAAAilB,aAAA,CAAA;EACxB,MAAA,IAAI,QAAAA,CAAAA,aAAA,GAAOjlB,KAAK,CAACsc,MAAM,MAAA,IAAA,IAAA2I,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZA,aAAA,CAAcC,MAAM,CAAA,KAAK,QAAQ,EAAE;EAC5CR,QAAAA,OAAO,CAAC;YACNN,OAAO,EAAED,gBAAgB,CAACnkB,KAAK,CAACsc,MAAM,CAAC4I,MAAM,EAAEtf,IAAI,CAAC;EACpDA,UAAAA,IAAI,EAAJA,IAAI;EACJ4e,UAAAA,IAAI,EAAJA,IAAI;EACJ7gB,UAAAA,IAAI,EAAJA,IAAAA;EACD,SAAA,CAAC,CAAA;EACH,OAAA,MAAM;EACL+gB,QAAAA,OAAO,CAAC;EACNN,UAAAA,OAAO,EAAE,IAAI;EACbxe,UAAAA,IAAI,EAAJA,IAAI;EACJ4e,UAAAA,IAAI,EAAJA,IAAI;EACJ7gB,UAAAA,IAAI,EAAJA,IAAAA;EACD,SAAA,CAAC,CAAA;EACH,OAAA;OACF,CAAA;EACDihB,IAAAA,MAAM,CAACO,aAAa,CAACZ,IAAI,CAAC,CAAA;EAC5B,GAAC,CAAC,CAAA;EACJ,CAAA;EAEA,SAASa,YAAYA,CAACC,KAAe,EAAA;EACnC,EAAA,OAAOZ,OAAO,CAACa,GAAG,CAAChnB,KAAK,CAACinB,IAAI,CAACF,KAAK,CAAC,CAAC7mB,GAAG,CAAC8lB,WAAW,CAAC,CAAC,CAAA;EACxD,CAAA;EAEA,SAASkB,eAAeA,CAAAxd,IAAA,EAMvB;EAAA,EAAA,IALCyd,QAAQ,GAAAzd,IAAA,CAARyd,QAAQ;MACRlmB,QAAQ,GAAAyI,IAAA,CAARzI,QAAQ,CAAA;EAKR,EAAA,IAAQiF,eAAe,GAAKjF,QAAQ,CAA5BiF,eAAe,CAAA;EACvB,EAAA,IAAQ4f,OAAO,GAAiBqB,QAAQ,CAAhCrB,OAAO;MAAEzgB,IAAI,GAAW8hB,QAAQ,CAAvB9hB,IAAI;MAAEiC,IAAI,GAAK6f,QAAQ,CAAjB7f,IAAI,CAAA;IAC3B,IAAI,CAACwe,OAAO,EAAE;EACZ,IAAA,OAAO,IAAI,CAAA;EACZ,GAAA;IAED,IAAIzgB,IAAI,CAAC4Q,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;MAChC,OAAO1P;EAAK6gB,MAAAA,GAAG,EAAEtB,OAAO;EAAE5O,MAAAA,KAAK,EAAE;EAAEmQ,QAAAA,QAAQ,EAAE,MAAA;SAAQ;EAAE7d,MAAAA,SAAS,EAAC,cAAA;QAAiB,CAAA;EACnF,GAAA;IAED,OACEmJ,eAAA,CAAAuI,mBAAA,EAAA;EAAAtM,IAAAA,QAAA,EAAA,CACG,GAAG,EACJrI,cAAG,CAAA,GAAA,EAAA;EAAA+gB,MAAAA,QAAQ,eAAahgB,IAAM;EAAEqc,MAAAA,IAAI,EAAEmC,OAAO;EAAEtc,MAAAA,SAAS,EAAC,eAAe;EACrEoF,MAAAA,QAAA,EAAA1I,eAAe,CAACO,wBAAkB,CAAC8gB,YAAY,CAAA;EAAC,KAAA,CAC/C,CAAA;EACH,GAAA,CAAA,CAAA;EAEP,CAAA;EAEA,SAASC,SAASA,CAAAvc,KAAA,EAQjB;EAAA,EAAA,IAPCwc,SAAS,GAAAxc,KAAA,CAATwc,SAAS;MACTxmB,QAAQ,GAAAgK,KAAA,CAARhK,QAAQ;MACRymB,OAAO,GAAAzc,KAAA,CAAPyc,OAAO,CAAA;EAMP,EAAA,IAAID,SAAS,CAACziB,MAAM,KAAK,CAAC,EAAE;EAC1B,IAAA,OAAO,IAAI,CAAA;EACZ,GAAA;EACD,EAAA,IAAQkB,eAAe,GAAKjF,QAAQ,CAA5BiF,eAAe,CAAA;IACvB,OACEK,cAAA,CAAA,IAAA,EAAA;EAAIiD,IAAAA,SAAS,EAAC,WAAW;MACtBoF,QAAA,EAAA6Y,SAAS,CAACvnB,GAAG,CAAC,UAACinB,QAAQ,EAAE/mB,GAAG,EAAI;EAC/B,MAAA,IAAQkH,IAAI,GAAiB6f,QAAQ,CAA7B7f,IAAI;UAAE4e,IAAI,GAAWiB,QAAQ,CAAvBjB,IAAI;UAAE7gB,IAAI,GAAK8hB,QAAQ,CAAjB9hB,IAAI,CAAA;QACxB,OACEsN,eACE,CAAA,IAAA,EAAA;EAAA/D,QAAAA,QAAA,EAAA,CAAArI,cAAA,CAAC6Q,4BAAQ,EAAE;EAAAxI,UAAAA,QAAA,EAAA1I,eAAe,CAACO,wBAAkB,CAAC+gB,SAAS,EAAE,CAAClgB,IAAI,EAAEjC,IAAI,EAAEqN,MAAM,CAACwT,IAAI,CAAC,CAAC,CAAA;YAAa,EAC/FwB,OAAO,IAAInhB,cAAC,CAAA2gB,eAAe;EAAUC,UAAAA,QAAQ,EAAEA,QAAQ;EAAElmB,UAAAA,QAAQ,EAAEA,QAAAA;EAAQ,SAAA,CAAI,CAAA;WAFzEb,GAAG,CAGP,CAAA;OAER,CAAA;EACE,GAAA,CAAA,CAAA;EAET,CAAA;EAEA,SAASunB,eAAeA,CAACC,QAAkB,EAAA;EACzC,EAAA,OAAOA,QAAQ,CACZzkB,MAAM,CAAC,UAAC2iB,OAAO,EAAA;EAAA,IAAA,OAAKA,OAAO,CAAA;EAAA,GAAA,CAAC,CAC5B5lB,GAAG,CAAC,UAAC4lB,OAAO,EAAI;EACf,IAAA,IAAA+B,cAAA,GAAuBC,mBAAa,CAAChC,OAAO,CAAC;QAArCiC,IAAI,GAAAF,cAAA,CAAJE,IAAI;QAAEzgB,IAAI,GAAAugB,cAAA,CAAJvgB,IAAI,CAAA;MAClB,OAAO;EACLwe,MAAAA,OAAO,EAAPA,OAAO;EACPxe,MAAAA,IAAI,EAAEA,IAAI;QACV4e,IAAI,EAAE6B,IAAI,CAAC7B,IAAI;QACf7gB,IAAI,EAAE0iB,IAAI,CAAC1iB,IAAAA;OACZ,CAAA;EACH,GAAC,CAAC,CAAA;EACN,CAAA;EAEA;;;EAGG;EACH,SAAS2iB,UAAUA,CACjBrnB,KAA2B,EAAA;EAE3B,EAAA,IAAQ6G,QAAQ,GAA6D7G,KAAK,CAA1E6G,QAAQ;MAAEE,QAAQ,GAAmD/G,KAAK,CAAhE+G,QAAQ;MAAEqD,QAAQ,GAAyCpK,KAAK,CAAtDoK,QAAQ;MAAE/I,QAAQ,GAA+BrB,KAAK,CAA5CqB,QAAQ;MAAE8B,KAAK,GAAwBnD,KAAK,CAAlCmD,KAAK;MAAEyG,OAAO,GAAe5J,KAAK,CAA3B4J,OAAO;MAAEtJ,QAAQ,GAAKN,KAAK,CAAlBM,QAAQ,CAAA;IACxE,IAAMsc,iBAAiB,GAAGjX,iBAAW,CAA+B,mBAAmB,EAAErF,QAAQ,EAAEsJ,OAAO,CAAC,CAAA;IAC3G,IAAM0d,kBAAkB,GAAGC,aAAO,CAChC,YAAA;EAAA,IAAA,OAAOloB,KAAK,CAACC,OAAO,CAAC6D,KAAK,CAAC,GAAG6jB,eAAe,CAAC7jB,KAAK,CAAC,GAAG6jB,eAAe,CAAC,CAAC7jB,KAAK,CAAC,CAAC,CAAA;EAAA,GAAC,EAChF,CAACA,KAAK,CAAC,CACR,CAAA;EACD,EAAA,IAAAmP,SAAA,GAAkCC,cAAQ,CAAiB+U,kBAAkB,CAAC;EAAvER,IAAAA,SAAS,GAAAxU,SAAA,CAAA,CAAA,CAAA;EAAEkV,IAAAA,YAAY,GAAAlV,SAAA,CAAA,CAAA,CAAA,CAAA;EAE9B,EAAA,IAAMK,YAAY,GAAGC,iBAAW,CAC9B,UAAC7R,KAAoC,EAAI;EACvC,IAAA,IAAI,CAACA,KAAK,CAACsc,MAAM,CAAC+I,KAAK,EAAE;EACvB,MAAA,OAAA;EACD,KAAA;EACDD,IAAAA,YAAY,CAACplB,KAAK,CAACsc,MAAM,CAAC+I,KAAK,CAAC,CAACqB,IAAI,CAAC,UAACC,cAAc,EAAI;QACvDF,YAAY,CAACE,cAAc,CAAC,CAAA;EAC5B,MAAA,IAAMC,QAAQ,GAAGD,cAAc,CAACnoB,GAAG,CAAC,UAACinB,QAAQ,EAAA;UAAA,OAAKA,QAAQ,CAACrB,OAAO,CAAA;SAAC,CAAA,CAAA;EACnE,MAAA,IAAI/a,QAAQ,EAAE;UACZ/I,QAAQ,CAACsmB,QAAQ,CAAC,CAAA;EACnB,OAAA,MAAM;EACLtmB,QAAAA,QAAQ,CAACsmB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;EACtB,OAAA;EACH,KAAC,CAAC,CAAA;EACJ,GAAC,EACD,CAACvd,QAAQ,EAAE/I,QAAQ,CAAC,CACrB,CAAA;IAED,OACE2Q,eAAA,CAAA,KAAA,EAAA;MAAA/D,QAAA,EAAA,CACErI,cAAC,CAAAgX,iBAAiB,EAAAlZ,QAAA,KACZ1D,KAAK,EAAA;QACT6G,QAAQ,EAAEA,QAAQ,IAAIE,QAAQ;EAC9BrC,MAAAA,IAAI,EAAC,MAAM;EACXmY,MAAAA,gBAAgB,EAAElK,YAAY;EAC9BxP,MAAAA,KAAK,EAAC,EAAE;QACRykB,MAAM,EAAEhe,OAAO,CAACge,MAAM,GAAG7V,MAAM,CAACnI,OAAO,CAACge,MAAM,CAAC,GAAGjmB,SAAAA;EAAS,KAAA,CAAA,CAC3D,EACFiE,cAAA,CAACihB,SAAS,EAAU;EAAAC,MAAAA,SAAS,EAAEA,SAAS;EAAExmB,MAAAA,QAAQ,EAAEA,QAAQ;QAAEymB,OAAO,EAAEnd,OAAO,CAACie,WAAAA;EAAe,KAAA,CAAA,CAAA;EAAA,GAAA,CAC1F,CAAA;EAEV;;EC1KA;;;;EAIG;EACH,SAASC,YAAYA,CAAA/e,IAAA,EAGE;EAAA,EAAA,IAFrB3F,EAAE,GAAA2F,IAAA,CAAF3F,EAAE;MACFD,KAAK,GAAA4F,IAAA,CAAL5F,KAAK,CAAA;IAEL,OAAOyC,cAAO,CAAA,OAAA,EAAA;EAAAlB,IAAAA,IAAI,EAAC,QAAQ;EAACtB,IAAAA,EAAE,EAAEA,EAAE;EAAEuD,IAAAA,IAAI,EAAEvD,EAAE;EAAED,IAAAA,KAAK,EAAE,OAAOA,KAAK,KAAK,WAAW,GAAG,EAAE,GAAGA,KAAAA;EAAK,GAAA,CAAI,CAAA;EACpG;;ECVA;;;EAGG;EACqB,SAAA4kB,cAAcA,CAIpC/nB,KAA2B,EAAA;EAC3B,EAAA,IAAQ4J,OAAO,GAAe5J,KAAK,CAA3B4J,OAAO;MAAEtJ,QAAQ,GAAKN,KAAK,CAAlBM,QAAQ,CAAA;IACzB,IAAMsc,iBAAiB,GAAGjX,iBAAW,CAA+B,mBAAmB,EAAErF,QAAQ,EAAEsJ,OAAO,CAAC,CAAA;EAC3G,EAAA,OAAOhE,cAAA,CAACgX,iBAAiB,EAAAlZ,QAAA,CAAA;EAACgB,IAAAA,IAAI,EAAC,UAAA;EAAU,GAAA,EAAK1E,KAAK,CAAI,CAAA,CAAA;EACzD;;ECFA;;;;EAIG;EACH,SAASgoB,WAAWA,CAAAjf,IAAA,EAWG;EAAA,EAAA,IAVrBa,OAAO,GAAAb,IAAA,CAAPa,OAAO;MACPzG,KAAK,GAAA4F,IAAA,CAAL5F,KAAK;MACLgE,QAAQ,GAAA4B,IAAA,CAAR5B,QAAQ;MACRN,QAAQ,GAAAkC,IAAA,CAARlC,QAAQ;MACRE,QAAQ,GAAAgC,IAAA,CAARhC,QAAQ;MAAAyc,cAAA,GAAAza,IAAA,CACR9B,SAAS;EAATA,IAAAA,SAAS,GAAAuc,cAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,cAAA;MACjBpc,MAAM,GAAA2B,IAAA,CAAN3B,MAAM;MACNC,OAAO,GAAA0B,IAAA,CAAP1B,OAAO;MACPhG,QAAQ,GAAA0H,IAAA,CAAR1H,QAAQ;MACR+B,EAAE,GAAA2F,IAAA,CAAF3F,EAAE,CAAA;EAEF;IACA,IAAMuD,IAAI,GAAGshB,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE,CAAA;EACrC,EAAA,IAAQtd,WAAW,GAAuCjB,OAAO,CAAzDiB,WAAW;MAAEqZ,YAAY,GAAyBta,OAAO,CAA5Csa,YAAY;MAAED,MAAM,GAAiBra,OAAO,CAA9Bqa,MAAM;MAAE3G,UAAU,GAAK1T,OAAO,CAAtB0T,UAAU,CAAA;EAErD,EAAA,IAAMqG,UAAU,GAAG/Q,iBAAW,CAC5B,UAAAtI,KAAA,EAAA;EAAA,IAAA,IAAanH,KAAK,GAAAmH,KAAA,CAAf+S,MAAM,CAAIla,KAAK,CAAA;EAAA,IAAA,OAChBiE,MAAM,CAAChE,EAAE,EAAEghB,8BAAwB,CAAIjhB,KAAK,EAAE0H,WAAW,EAAEyS,UAAU,CAAC,CAAC,CAAA;EAAA,GAAA,EACzE,CAAClW,MAAM,EAAEhE,EAAE,CAAC,CACb,CAAA;EAED,EAAA,IAAMwgB,WAAW,GAAGhR,iBAAW,CAC7B,UAAA1H,KAAA,EAAA;EAAA,IAAA,IAAa/H,KAAK,GAAA+H,KAAA,CAAfmS,MAAM,CAAIla,KAAK,CAAA;EAAA,IAAA,OAChBkE,OAAO,CAACjE,EAAE,EAAEghB,8BAAwB,CAAIjhB,KAAK,EAAE0H,WAAW,EAAEyS,UAAU,CAAC,CAAC,CAAA;EAAA,GAAA,EAC1E,CAACjW,OAAO,EAAEjE,EAAE,CAAC,CACd,CAAA;IAED,OACEwC,cAAA,CAAA,KAAA,EAAA;EAAKiD,IAAAA,SAAS,EAAC,mBAAmB;EAACzF,IAAAA,EAAE,EAAEA,EAAE;gBACtC/D,KAAK,CAACC,OAAO,CAACuL,WAAW,CAAC,IACzBA,WAAW,CAACtL,GAAG,CAAC,UAAC6P,MAAM,EAAE/M,CAAC,EAAI;QAC5B,IAAMqhB,OAAO,GAAGW,2BAAqB,CAAIjV,MAAM,CAACjM,KAAK,EAAEA,KAAK,CAAC,CAAA;EAC7D,MAAA,IAAMmhB,YAAY,GAAGjlB,KAAK,CAACC,OAAO,CAAC4kB,YAAY,CAAC,IAAIA,YAAY,CAAC5O,OAAO,CAAClG,MAAM,CAACjM,KAAK,CAAC,KAAK,CAAC,CAAC,CAAA;QAC7F,IAAMohB,WAAW,GAAG1d,QAAQ,IAAIyd,YAAY,IAAIvd,QAAQ,GAAG,UAAU,GAAG,EAAE,CAAA;EAE1E,MAAA,IAAM4L,YAAY,GAAG,SAAfA,YAAYA,GAAA;EAAA,QAAA,OAAStR,QAAQ,CAAC+N,MAAM,CAACjM,KAAK,CAAC,CAAA;EAAA,OAAA,CAAA;EAEjD,MAAA,IAAMilB,KAAK,GACTpW,eACE,CAAA,MAAA,EAAA;EAAA/D,QAAAA,QAAA,EAAA,CAAArI,cAAA,CAAA,OAAA,EAAA;EACElB,UAAAA,IAAI,EAAC,OAAO;EACZtB,UAAAA,EAAE,EAAEuhB,cAAQ,CAACvhB,EAAE,EAAEf,CAAC,CAAC;EACnBqhB,UAAAA,OAAO,EAAEA,OAAO;EAChB/c,UAAAA,IAAI,EAAEA,IAAI;EACVQ,UAAAA,QAAQ,EAAEA,QAAQ;EAClBhE,UAAAA,KAAK,EAAE4O,MAAM,CAAC1P,CAAC,CAAC;EAChBwE,UAAAA,QAAQ,EAAEA,QAAQ,IAAIyd,YAAY,IAAIvd,QAAQ;EAC9C0W,UAAAA,SAAS,EAAExW,SAAS,IAAI5E,CAAC,KAAK,CAAC;EAC/BhB,UAAAA,QAAQ,EAAEsR,YAAY;EACtBvL,UAAAA,MAAM,EAAEuc,UAAU;EAClBtc,UAAAA,OAAO,EAAEuc,WAAW;YACF,kBAAA,EAAA/F,wBAAkB,CAAIza,EAAE,CAAA;EAC1C,SAAA,CAAA,EACFwC;sBAAOwJ,MAAM,CAACnF,KAAAA;EAAa,SAAA,CAAA,CAAA;EAAA,OAAA,CAE9B,CAAA;EAED,MAAA,OAAOga,MAAM,GACXre,cAAe,CAAA,OAAA,EAAA;EAAAiD,QAAAA,SAAS,oBAAkB0b,WAAa;EAAAtW,QAAAA,QAAA,EACpDma,KAAAA;EAAK,OAAA,EADI/lB,CAAC,CAEL,GAERuD,cAAA,CAAA,KAAA,EAAA;EAAaiD,QAAAA,SAAS,aAAW0b,WAAa;EAC5CtW,QAAAA,QAAA,EAAArI,cAAA,CAAA,OAAA,EAAA;EAAAqI,UAAAA,QAAA,EAAQma,KAAAA;WAAc,CAAA;SAAA,EADd/lB,CAAC,CAGZ,CAAA;OACF,CAAA;EACC,GAAA,CAAA,CAAA;EAEV;;ECrFA;;;;EAIG;EACqB,SAAAgmB,WAAWA,CACjCroB,KAA2B,EAAA;EAE3B,EAAA,IACEmD,KAAK,GAIHnD,KAAK,CAJPmD,KAAK;EAEUyZ,IAAAA,iBAAiB,GAE9B5c,KAAK,CAHPM,QAAQ,CACNkb,SAAS,CAAIoB,iBAAiB,CAAA;IAGlC,OACE5K,eAAK,CAAA,KAAA,EAAA;EAAAnJ,IAAAA,SAAS,EAAC,qBAAqB;iBAClCjD,cAAC,CAAAgX,iBAAiB,EAAAlZ,QAAA,CAAA;EAACgB,MAAAA,IAAI,EAAC,OAAA;EAAO,KAAA,EAAK1E,KAAK,CAAI,CAAA,EAC7C4F,cAAA,CAAA,MAAA,EAAA;EAAMiD,MAAAA,SAAS,EAAC,YAAY;EAAAoF,MAAAA,QAAA,EAAE9K,KAAAA;EAAK,KAAA,CAAQ,CAAA;EACvC,GAAA,CAAA,CAAA;EAEV;;ECXA,SAASmlB,QAAQA,CAACvnB,KAAwC,EAAEqJ,QAAiB,EAAA;EAC3E,EAAA,IAAIA,QAAQ,EAAE;EACZ,IAAA,OAAO/K,KAAK,CAACinB,IAAI,CAAEvlB,KAAK,CAACsc,MAA4B,CAACzT,OAAO,CAAC,CAC3D3G,KAAK,EAAE,CACPT,MAAM,CAAC,UAAC6M,CAAC,EAAA;QAAA,OAAKA,CAAC,CAACkZ,QAAQ,CAAA;EAAA,KAAA,CAAC,CACzBhpB,GAAG,CAAC,UAAC8P,CAAC,EAAA;QAAA,OAAKA,CAAC,CAAClM,KAAK,CAAA;OAAC,CAAA,CAAA;EACvB,GAAA;EACD,EAAA,OAAQpC,KAAK,CAACsc,MAA4B,CAACla,KAAK,CAAA;EAClD,CAAA;EAEA;;;;EAIG;EACH,SAASye,YAAYA,CAAA7Y,IAAA,EAcE;EAAA,EAAA,IAbrB1I,MAAM,GAAA0I,IAAA,CAAN1I,MAAM;MACN+C,EAAE,GAAA2F,IAAA,CAAF3F,EAAE;MACFwG,OAAO,GAAAb,IAAA,CAAPa,OAAO;MACPzG,KAAK,GAAA4F,IAAA,CAAL5F,KAAK;MACLgE,QAAQ,GAAA4B,IAAA,CAAR5B,QAAQ;MACRN,QAAQ,GAAAkC,IAAA,CAARlC,QAAQ;MACRE,QAAQ,GAAAgC,IAAA,CAARhC,QAAQ;MAAAyhB,aAAA,GAAAzf,IAAA,CACRqB,QAAQ;EAARA,IAAAA,QAAQ,GAAAoe,aAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,aAAA;MAAAhF,cAAA,GAAAza,IAAA,CAChB9B,SAAS;EAATA,IAAAA,SAAS,GAAAuc,cAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,cAAA;MACjBniB,QAAQ,GAAA0H,IAAA,CAAR1H,QAAQ;MACR+F,MAAM,GAAA2B,IAAA,CAAN3B,MAAM;MACNC,OAAO,GAAA0B,IAAA,CAAP1B,OAAO;MACPiC,WAAW,GAAAP,IAAA,CAAXO,WAAW,CAAA;EAEX,EAAA,IAAQuB,WAAW,GAA4CjB,OAAO,CAA9DiB,WAAW;MAAEqZ,YAAY,GAA8Bta,OAAO,CAAjDsa,YAAY;MAAcuE,WAAW,GAAK7e,OAAO,CAAnC0T,UAAU,CAAA;EAC7C,EAAA,IAAMA,UAAU,GAAGlT,QAAQ,GAAG,EAAE,GAAG,EAAE,CAAA;EAErC,EAAA,IAAMwZ,WAAW,GAAGhR,iBAAW,CAC7B,UAAC7R,KAAoC,EAAI;EACvC,IAAA,IAAM4mB,QAAQ,GAAGW,QAAQ,CAACvnB,KAAK,EAAEqJ,QAAQ,CAAC,CAAA;EAC1C,IAAA,OAAO/C,OAAO,CAACjE,EAAE,EAAEghB,8BAAwB,CAAIuD,QAAQ,EAAE9c,WAAW,EAAE4d,WAAW,CAAC,CAAC,CAAA;EACrF,GAAC,EACD,CAACphB,OAAO,EAAEjE,EAAE,EAAE/C,MAAM,EAAE+J,QAAQ,EAAER,OAAO,CAAC,CACzC,CAAA;EAED,EAAA,IAAM+Z,UAAU,GAAG/Q,iBAAW,CAC5B,UAAC7R,KAAoC,EAAI;EACvC,IAAA,IAAM4mB,QAAQ,GAAGW,QAAQ,CAACvnB,KAAK,EAAEqJ,QAAQ,CAAC,CAAA;EAC1C,IAAA,OAAOhD,MAAM,CAAChE,EAAE,EAAEghB,8BAAwB,CAAIuD,QAAQ,EAAE9c,WAAW,EAAE4d,WAAW,CAAC,CAAC,CAAA;EACpF,GAAC,EACD,CAACrhB,MAAM,EAAEhE,EAAE,EAAE/C,MAAM,EAAE+J,QAAQ,EAAER,OAAO,CAAC,CACxC,CAAA;EAED,EAAA,IAAM+I,YAAY,GAAGC,iBAAW,CAC9B,UAAC7R,KAAqC,EAAI;EACxC,IAAA,IAAM4mB,QAAQ,GAAGW,QAAQ,CAACvnB,KAAK,EAAEqJ,QAAQ,CAAC,CAAA;MAC1C,OAAO/I,QAAQ,CAAC+iB,8BAAwB,CAAIuD,QAAQ,EAAE9c,WAAW,EAAE4d,WAAW,CAAC,CAAC,CAAA;KACjF,EACD,CAACpnB,QAAQ,EAAEhB,MAAM,EAAE+J,QAAQ,EAAER,OAAO,CAAC,CACtC,CAAA;IAED,IAAM8e,eAAe,GAAGC,8BAAwB,CAAIxlB,KAAK,EAAE0H,WAAW,EAAET,QAAQ,CAAC,CAAA;IAEjF,OACE4H,eACE,CAAA,QAAA,EAAA;EAAA5O,IAAAA,EAAE,EAAEA,EAAE;EACNuD,IAAAA,IAAI,EAAEvD,EAAE;EACRgH,IAAAA,QAAQ,EAAEA,QAAQ;EAClBvB,IAAAA,SAAS,EAAC,cAAc;MACxB1F,KAAK,EAAE,OAAOulB,eAAe,KAAK,WAAW,GAAGpL,UAAU,GAAGoL,eAAe;EAC5EvhB,IAAAA,QAAQ,EAAEA,QAAQ;MAClBN,QAAQ,EAAEA,QAAQ,IAAIE,QAAQ;EAC9B0W,IAAAA,SAAS,EAAExW,SAAS;EACpBG,IAAAA,MAAM,EAAEuc,UAAU;EAClBtc,IAAAA,OAAO,EAAEuc,WAAW;EACpBviB,IAAAA,QAAQ,EAAEsR,YAAY;EAAA,IAAA,kBAAA,EACJkL,wBAAkB,CAAIza,EAAE,CAAC;EAE1C6K,IAAAA,QAAA,EAAA,CAAA,CAAC7D,QAAQ,IAAI/J,MAAM,CAAQ,SAAA,CAAA,KAAKsB,SAAS,IAAIiE;EAAQzC,MAAAA,KAAK,EAAC,EAAE;EAAE8K,MAAAA,QAAA,EAAA3E,WAAAA;QAAqB,EACpFjK,KAAK,CAACC,OAAO,CAACuL,WAAW,CAAC,IACzBA,WAAW,CAACtL,GAAG,CAAC,UAAA+K,KAAA,EAAmBjI,CAAC,EAAI;EAAA,MAAA,IAArBc,KAAK,GAAAmH,KAAA,CAALnH,KAAK;UAAE8G,KAAK,GAAAK,KAAA,CAALL,KAAK,CAAA;EAC7B,MAAA,IAAMpD,QAAQ,GAAGqd,YAAY,IAAIA,YAAY,CAAC5O,OAAO,CAACnS,KAAK,CAAC,KAAK,CAAC,CAAC,CAAA;QACnE,OACEyC,cAAgB,CAAA,QAAA,EAAA;EAAAzC,QAAAA,KAAK,EAAE4O,MAAM,CAAC1P,CAAC,CAAC;EAAEwE,QAAAA,QAAQ,EAAEA,QAAQ;EACjDoH,QAAAA,QAAA,EAAAhE,KAAAA;WADU5H,CAAC,CAEL,CAAA;EAEb,KAAC,CAAC,CAAA;EACG,GAAA,CAAA,CAAA;EAEb;;EC9FA;;;EAGG;EACH,SAASumB,cAAcA,CAAA7f,IAAA,EAYA;EAAA,EAAA,IAXrB3F,EAAE,GAAA2F,IAAA,CAAF3F,EAAE;MAAA2gB,YAAA,GAAAhb,IAAA,CACFa,OAAO;EAAPA,IAAAA,OAAO,GAAAma,YAAA,KAAA,KAAA,CAAA,GAAG,EAAE,GAAAA,YAAA;MACZza,WAAW,GAAAP,IAAA,CAAXO,WAAW;MACXnG,KAAK,GAAA4F,IAAA,CAAL5F,KAAK;MACLgE,QAAQ,GAAA4B,IAAA,CAAR5B,QAAQ;MACRN,QAAQ,GAAAkC,IAAA,CAARlC,QAAQ;MACRE,QAAQ,GAAAgC,IAAA,CAARhC,QAAQ;MAAAyc,cAAA,GAAAza,IAAA,CACR9B,SAAS;EAATA,IAAAA,SAAS,GAAAuc,cAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,cAAA;MACjBniB,QAAQ,GAAA0H,IAAA,CAAR1H,QAAQ;MACR+F,MAAM,GAAA2B,IAAA,CAAN3B,MAAM;MACNC,OAAO,GAAA0B,IAAA,CAAP1B,OAAO,CAAA;EAEP,EAAA,IAAMsL,YAAY,GAAGC,iBAAW,CAC9B,UAAAtI,KAAA,EAAA;EAAA,IAAA,IAAanH,KAAK,GAAAmH,KAAA,CAAf+S,MAAM,CAAIla,KAAK,CAAA;MAAA,OAA2C9B,QAAQ,CAAC8B,KAAK,KAAK,EAAE,GAAGyG,OAAO,CAAC0T,UAAU,GAAGna,KAAK,CAAC,CAAA;EAAA,GAAA,EAChH,CAAC9B,QAAQ,EAAEuI,OAAO,CAAC0T,UAAU,CAAC,CAC/B,CAAA;EAED,EAAA,IAAMqG,UAAU,GAAG/Q,iBAAW,CAC5B,UAAA1H,KAAA,EAAA;EAAA,IAAA,IAAa/H,KAAK,GAAA+H,KAAA,CAAfmS,MAAM,CAAIla,KAAK,CAAA;EAAA,IAAA,OAA0CiE,MAAM,CAAChE,EAAE,EAAED,KAAK,CAAC,CAAA;EAAA,GAAA,EAC7E,CAACiE,MAAM,EAAEhE,EAAE,CAAC,CACb,CAAA;EAED,EAAA,IAAMwgB,WAAW,GAAGhR,iBAAW,CAC7B,UAAAiW,KAAA,EAAA;EAAA,IAAA,IAAa1lB,KAAK,GAAA0lB,KAAA,CAAfxL,MAAM,CAAIla,KAAK,CAAA;EAAA,IAAA,OAA0CkE,OAAO,CAACjE,EAAE,EAAED,KAAK,CAAC,CAAA;EAAA,GAAA,EAC9E,CAACC,EAAE,EAAEiE,OAAO,CAAC,CACd,CAAA;IAED,OACEzB,cAAA,CAAA,UAAA,EAAA;EACExC,IAAAA,EAAE,EAAEA,EAAE;EACNuD,IAAAA,IAAI,EAAEvD,EAAE;EACRyF,IAAAA,SAAS,EAAC,cAAc;EACxB1F,IAAAA,KAAK,EAAEA,KAAK,GAAGA,KAAK,GAAG,EAAE;EACzBmG,IAAAA,WAAW,EAAEA,WAAW;EACxBnC,IAAAA,QAAQ,EAAEA,QAAQ;EAClBN,IAAAA,QAAQ,EAAEA,QAAQ;EAClBoS,IAAAA,QAAQ,EAAElS,QAAQ;EAClB0W,IAAAA,SAAS,EAAExW,SAAS;MACpB6hB,IAAI,EAAElf,OAAO,CAACkf,IAAI;EAClB1hB,IAAAA,MAAM,EAAEuc,UAAU;EAClBtc,IAAAA,OAAO,EAAEuc,WAAW;EACpBviB,IAAAA,QAAQ,EAAEsR,YAAY;MAAA,kBAAA,EACJkL,wBAAkB,CAAIza,EAAE,CAAA;EAAC,GAAA,CAC3C,CAAA;EAEN,CAAA;EAEAwlB,cAAc,CAACG,YAAY,GAAG;EAC5B9hB,EAAAA,SAAS,EAAE,KAAK;EAChB2C,EAAAA,OAAO,EAAE,EAAE;GACZ;;ECxDD;;;EAGG;EACqB,SAAAof,UAAUA,CAChChpB,KAA2B,EAAA;EAE3B,EAAA,IAAQ4J,OAAO,GAAe5J,KAAK,CAA3B4J,OAAO;MAAEtJ,QAAQ,GAAKN,KAAK,CAAlBM,QAAQ,CAAA;IACzB,IAAMsc,iBAAiB,GAAGjX,iBAAW,CAA+B,mBAAmB,EAAErF,QAAQ,EAAEsJ,OAAO,CAAC,CAAA;EAC3G,EAAA,OAAOhE,cAAC,CAAAgX,iBAAiB,EAAAlZ,QAAA,CAAA,EAAA,EAAK1D,KAAK,CAAI,CAAA,CAAA;EACzC;;ECTA;;;;EAIG;EACqB,SAAAipB,UAAUA,CAChCjpB,KAA2B,EAAA;EAE3B,EAAA,IAAQqB,QAAQ,GAAwBrB,KAAK,CAArCqB,QAAQ;MAAEuI,OAAO,GAAe5J,KAAK,CAA3B4J,OAAO;MAAEtJ,QAAQ,GAAKN,KAAK,CAAlBM,QAAQ,CAAA;IACnC,IAAMsc,iBAAiB,GAAGjX,iBAAW,CAA+B,mBAAmB,EAAErF,QAAQ,EAAEsJ,OAAO,CAAC,CAAA;EAC3G,EAAA,IAAM+I,YAAY,GAAGC,iBAAW,CAAC,UAACzP,KAAU,EAAA;EAAA,IAAA,OAAK9B,QAAQ,CAAC8B,KAAK,GAAMA,KAAK,GAAA,KAAA,GAAQxB,SAAS,CAAC,CAAA;KAAE,EAAA,CAACN,QAAQ,CAAC,CAAC,CAAA;EAEzG,EAAA,OAAOuE,cAAC,CAAAgX,iBAAiB,EAAAlZ,QAAA,CAAA;EAACgB,IAAAA,IAAI,EAAC,MAAA;EAAM,GAAA,EAAK1E,KAAK,EAAA;EAAEqB,IAAAA,QAAQ,EAAEsR,YAAAA;KAAgB,CAAA,CAAA,CAAA;EAC7E;;ECdA;;;EAGG;EACqB,SAAAuW,SAASA,CAC/BlpB,KAA2B,EAAA;EAE3B,EAAA,IAAQ4J,OAAO,GAAe5J,KAAK,CAA3B4J,OAAO;MAAEtJ,QAAQ,GAAKN,KAAK,CAAlBM,QAAQ,CAAA;IACzB,IAAMsc,iBAAiB,GAAGjX,iBAAW,CAA+B,mBAAmB,EAAErF,QAAQ,EAAEsJ,OAAO,CAAC,CAAA;EAC3G,EAAA,OAAOhE,cAAA,CAACgX,iBAAiB,EAAAlZ,QAAA,CAAA;EAACgB,IAAAA,IAAI,EAAC,KAAA;EAAK,GAAA,EAAK1E,KAAK,CAAI,CAAA,CAAA;EACpD;;ECVA;;;EAGG;EACqB,SAAAmpB,YAAYA,CAClCnpB,KAA2B,EAAA;EAE3B,EAAA,IAAQ4J,OAAO,GAAe5J,KAAK,CAA3B4J,OAAO;MAAEtJ,QAAQ,GAAKN,KAAK,CAAlBM,QAAQ,CAAA;IACzB,IAAMsc,iBAAiB,GAAGjX,iBAAW,CAA+B,mBAAmB,EAAErF,QAAQ,EAAEsJ,OAAO,CAAC,CAAA;EAC3G,EAAA,OAAOhE,cAAA,CAACgX,iBAAiB,EAAAlZ,QAAA,CAAA;EAACgB,IAAAA,IAAI,EAAC,QAAA;EAAQ,GAAA,EAAK1E,KAAK,CAAI,CAAA,CAAA;EACvD;;ECUA,SAASwJ,OAAOA,GAAA;IAKd,OAAO;EACLqY,IAAAA,aAAa,EAAbA,aAAa;EACbuB,IAAAA,iBAAiB,EAAjBA,iBAAiB;EACjBE,IAAAA,cAAc,EAAdA,cAAc;EACdQ,IAAAA,gBAAgB,EAAhBA,gBAAgB;EAChBc,IAAAA,WAAW,EAAXA,WAAW;EACXC,IAAAA,UAAU,EAAVA,UAAU;EACVC,IAAAA,cAAc,EAAdA,cAAc;EACdG,IAAAA,WAAW,EAAXA,WAAW;EACXoC,IAAAA,UAAU,EAAVA,UAAU;EACVS,IAAAA,YAAY,EAAZA,YAAY;EACZC,IAAAA,cAAc,EAAdA,cAAc;EACdC,IAAAA,WAAW,EAAXA,WAAW;EACXK,IAAAA,WAAW,EAAXA,WAAW;EACXzG,IAAAA,YAAY,EAAZA,YAAY;EACZoH,IAAAA,UAAU,EAAVA,UAAU;EACVJ,IAAAA,cAAc,EAAdA,cAAc;EACdK,IAAAA,UAAU,EAAVA,UAAU;EACVE,IAAAA,YAAY,EAAZA,YAAY;EACZD,IAAAA,SAAS,EAATA,SAAAA;KACD,CAAA;EACH;;EC1CA;;;EAGG;EACW,SAAUE,kBAAkBA,GAAA;IAKxC,OAAO;MACLvc,MAAM,EAAEA,MAAM,EAAW;MACzB2O,SAAS,EAAEA,SAAS,EAAW;MAC/BhS,OAAO,EAAEA,OAAO,EAAW;MAC3B6f,UAAU,EAAE,EAAO;MACnB1hB,WAAW,EAAE,EAAO;EACpBpC,IAAAA,eAAe,EAAE+jB,6BAAAA;KAClB,CAAA;EACH;;ECuNA;AACqBC,MAAAA,IAInB,0BAAAzpB,UAAA,EAAA;IAAAC,cAAA,CAAAwpB,IAAA,EAAAzpB,UAAA,CAAA,CAAA;EACA;;EAEG;;EAGH;;;;;EAKG;IACH,SAAAypB,IAAAA,CAAYvpB,KAAyB,EAAA;EAAA,IAAA,IAAAC,KAAA,CAAA;EACnCA,IAAAA,KAAA,GAAAH,UAAA,CAAAI,IAAA,CAAA,IAAA,EAAMF,KAAK,CAAC,IAAA,IAAA,CAAA;EAACC,IAAAA,KAAA,CATfupB,WAAW,GAAA,KAAA,CAAA,CAAA;EAAAvpB,IAAAA,KAAA,CAiLXwpB,eAAe,GAAG,UAACrqB,QAAuB,EAAEyN,MAAkB,EAAmB;EAC/E;QACA,IAAIA,MAAM,CAACxI,MAAM,KAAK,CAAC,IAAI,OAAOjF,QAAQ,KAAK,QAAQ,EAAE;EACvD,QAAA,OAAOA,QAAQ,CAAA;EAChB,OAAA;EAED;EACA,MAAA,IAAMmiB,IAAI,GAAsBmI,yBAAK,CAACtqB,QAAQ,EAAEyN,MAA6B,CAAC,CAAA;EAC9E,MAAA,IAAIxN,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;UAC3B,OAAO0O,MAAM,CAACC,IAAI,CAACwT,IAAI,CAAC,CAAChiB,GAAG,CAAC,UAACE,GAAW,EAAA;YAAA,OAAK8hB,IAAI,CAAC9hB,GAAG,CAAC,CAAA;WAAiB,CAAA,CAAA;EACzE,OAAA;EAED,MAAA,OAAO8hB,IAAS,CAAA;OACjB,CAAA;EAAAthB,IAAAA,KAAA,CAOD0pB,aAAa,GAAG,UAACC,UAAyB,EAAExqB,QAAY,EAAgB;QACtE,IAAMyqB,WAAW,GAAG,SAAdA,WAAWA,CAAIC,IAAuB,EAAEC,GAAA,EAAsBC,KAAoB,EAAQ;EAAA,QAAA,IAAlDD,GAAA,KAAA,KAAA,CAAA,EAAA;EAAAA,UAAAA,GAAA,GAAkB,EAAE,CAAA;EAAA,SAAA;EAAA,QAAA,IAAEC,KAAoB,KAAA,KAAA,CAAA,EAAA;YAApBA,KAAoB,GAAA,CAAC,EAAE,CAAC,CAAA;EAAA,SAAA;UAC1Flc,MAAM,CAACC,IAAI,CAAC+b,IAAI,CAAC,CAACG,OAAO,CAAC,UAACxqB,GAAW,EAAI;EACxC,UAAA,IAAI,OAAOqqB,IAAI,CAACrqB,GAAG,CAAC,KAAK,QAAQ,EAAE;EACjC,YAAA,IAAMyqB,QAAQ,GAAGF,KAAK,CAACzqB,GAAG,CAAC,UAAC4qB,IAAI,EAAA;EAAA,cAAA,OAAA,EAAA,CAAAzoB,MAAA,CAASyoB,IAAI,EAAA,CAAE1qB,GAAG,CAAA,CAAA,CAAA;EAAA,aAAC,CAAC,CAAA;EACpD;EACA,YAAA,IAAIqqB,IAAI,CAACrqB,GAAG,CAAC,CAAC2qB,oCAA8B,CAAC,IAAIN,IAAI,CAACrqB,GAAG,CAAC,CAAC4qB,cAAQ,CAAC,KAAK,EAAE,EAAE;gBAC3EN,GAAG,CAACloB,IAAI,CAACioB,IAAI,CAACrqB,GAAG,CAAC,CAAC4qB,cAAQ,CAAC,CAAC,CAAA;EAC9B,aAAA,MAAM;gBACLR,WAAW,CAACC,IAAI,CAACrqB,GAAG,CAAC,EAAEsqB,GAAG,EAAEG,QAAQ,CAAC,CAAA;EACtC,aAAA;EACF,WAAA,MAAM,IAAIzqB,GAAG,KAAK4qB,cAAQ,IAAIP,IAAI,CAACrqB,GAAG,CAAC,KAAK,EAAE,EAAE;EAC/CuqB,YAAAA,KAAK,CAACC,OAAO,CAAC,UAACE,IAAI,EAAI;EACrB,cAAA,IAAMG,SAAS,GAAGC,uBAAI,CAACnrB,QAAQ,EAAE+qB,IAAI,CAAC,CAAA;EACtC;EACA;gBACA,IAAI,OAAOG,SAAS,KAAK,QAAQ,IAAIE,2BAAQ,CAACF,SAAS,CAAC,EAAE;EACxDP,gBAAAA,GAAG,CAACloB,IAAI,CAACsoB,IAAI,CAAC,CAAA;EACf,eAAA;EACH,aAAC,CAAC,CAAA;EACH,WAAA;EACH,SAAC,CAAC,CAAA;EACF,QAAA,OAAOJ,GAAG,CAAA;SACX,CAAA;QAED,OAAOF,WAAW,CAACD,UAAU,CAAC,CAAA;OAC/B,CAAA;MAAA3pB,KAAA,CAaDoB,QAAQ,GAAG,UAACjC,QAAuB,EAAE+C,cAA+B,EAAEiB,EAAW,EAAI;EACnF,MAAA,IAAAhD,WAAA,GAAqFH,KAAA,CAAKD,KAAK;UAAvFyqB,WAAW,GAAArqB,WAAA,CAAXqqB,WAAW;UAAEC,aAAa,GAAAtqB,WAAA,CAAbsqB,aAAa;UAAEC,QAAQ,GAAAvqB,WAAA,CAARuqB,QAAQ;UAAEC,UAAU,GAAAxqB,WAAA,CAAVwqB,UAAU;UAAEC,YAAY,GAAAzqB,WAAA,CAAZyqB,YAAY;UAAExpB,QAAQ,GAAAjB,WAAA,CAARiB,QAAQ,CAAA;EAChF,MAAA,IAAAyO,WAAA,GAAgC7P,KAAA,CAAKqB,KAAK;UAAlCf,WAAW,GAAAuP,WAAA,CAAXvP,WAAW;UAAEF,MAAM,GAAAyP,WAAA,CAANzP,MAAM,CAAA;QAC3B,IAAIwH,cAAQ,CAACzI,QAAQ,CAAC,IAAIC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;UACjD,IAAMsR,QAAQ,GAAGzQ,KAAA,CAAK6qB,iBAAiB,CAAC7qB,KAAA,CAAKD,KAAK,EAAEZ,QAAQ,CAAC,CAAA;UAC7DA,QAAQ,GAAGsR,QAAQ,CAACtR,QAAQ,CAAA;EAC7B,OAAA;EAED,MAAA,IAAM2rB,YAAY,GAAG,CAACH,UAAU,IAAIC,YAAY,CAAA;EAChD,MAAA,IAAIvpB,KAAK,GAAgC;EAAElC,QAAAA,QAAQ,EAARA,QAAQ;EAAEiB,QAAAA,MAAM,EAANA,MAAAA;SAAQ,CAAA;QAC7D,IAAImD,WAAW,GAAGpE,QAAQ,CAAA;EAE1B,MAAA,IAAIsrB,aAAa,KAAK,IAAI,IAAIC,QAAQ,KAAK,IAAI,EAAE;UAC/C,IAAMK,eAAe,GAAGzqB,WAAW,CAACwH,cAAc,CAAC1H,MAAM,EAAEjB,QAAQ,CAAC,CAAA;UACpE,IAAMwqB,UAAU,GAAGrpB,WAAW,CAAC0qB,YAAY,CAACD,eAAe,EAAE,EAAE,EAAE5rB,QAAQ,CAAC,CAAA;UAE1E,IAAM8rB,UAAU,GAAGjrB,KAAA,CAAK0pB,aAAa,CAACC,UAAU,EAAExqB,QAAQ,CAAC,CAAA;UAE3DoE,WAAW,GAAGvD,KAAA,CAAKwpB,eAAe,CAACrqB,QAAQ,EAAE8rB,UAAU,CAAC,CAAA;EACxD5pB,QAAAA,KAAK,GAAG;EACNlC,UAAAA,QAAQ,EAAEoE,WAAAA;WACX,CAAA;EACF,OAAA;EAED,MAAA,IAAIunB,YAAY,EAAE;EAChB,QAAA,IAAMI,gBAAgB,GAAGlrB,KAAA,CAAKmrB,QAAQ,CAAC5nB,WAAW,CAAC,CAAA;EACnD,QAAA,IAAIoW,MAAM,GAAGuR,gBAAgB,CAACvR,MAAM,CAAA;EACpC,QAAA,IAAI1X,WAAW,GAAGipB,gBAAgB,CAACjpB,WAAW,CAAA;UAC9C,IAAMmpB,sBAAsB,GAAGzR,MAAM,CAAA;UACrC,IAAM0R,2BAA2B,GAAGppB,WAAW,CAAA;EAC/C,QAAA,IAAIuoB,WAAW,EAAE;YACf,IAAMc,MAAM,GAAGhrB,WAAW,CAACirB,mBAAmB,CAACL,gBAAgB,EAAEV,WAAW,CAAC,CAAA;YAC7EvoB,WAAW,GAAGqpB,MAAM,CAACrpB,WAAW,CAAA;YAChC0X,MAAM,GAAG2R,MAAM,CAAC3R,MAAM,CAAA;EACvB,SAAA;EACDtY,QAAAA,KAAK,GAAG;EACNlC,UAAAA,QAAQ,EAAEoE,WAAW;EACrBoW,UAAAA,MAAM,EAANA,MAAM;EACN1X,UAAAA,WAAW,EAAXA,WAAW;EACXmpB,UAAAA,sBAAsB,EAAtBA,sBAAsB;EACtBC,UAAAA,2BAA2B,EAA3BA,2BAAAA;WACD,CAAA;EACF,OAAA,MAAM,IAAI,CAACV,UAAU,IAAIzoB,cAAc,EAAE;EACxC,QAAA,IAAMD,YAAW,GAAGuoB,WAAW,GAC1B7R,kBAAY,CAACzW,cAAc,EAAEsoB,WAAW,EAAE,mBAAmB,CAAoB,GAClFtoB,cAAc,CAAA;EAClBb,QAAAA,KAAK,GAAG;EACNlC,UAAAA,QAAQ,EAAEoE,WAAW;EACrBtB,UAAAA,WAAW,EAAEA,YAAW;YACxB0X,MAAM,EAAErZ,WAAW,CAACkrB,YAAY,EAAE,CAACC,WAAW,CAACxpB,YAAW,CAAA;WAC3D,CAAA;EACF,OAAA;EACDjC,MAAAA,KAAA,CAAK6B,QAAQ,CAACR,KAA2B,EAAE,YAAA;EAAA,QAAA,OAAMD,QAAQ,IAAIA,QAAQ,CAAAqC,QAAA,CAAA,EAAA,EAAMzD,KAAA,CAAKqB,KAAK,EAAKA,KAAK,CAAA,EAAI8B,EAAE,CAAC,CAAA;SAAC,CAAA,CAAA;OACxG,CAAA;MAAAnD,KAAA,CAQD0rB,KAAK,GAAG,YAAK;EACX,MAAA,IAAQtqB,QAAQ,GAAKpB,KAAA,CAAKD,KAAK,CAAvBqB,QAAQ,CAAA;QAChB,IAAMqP,QAAQ,GAAGzQ,KAAA,CAAK6qB,iBAAiB,CAAC7qB,KAAA,CAAKD,KAAK,EAAE2B,SAAS,CAAC,CAAA;EAC9D,MAAA,IAAM6B,WAAW,GAAGkN,QAAQ,CAACtR,QAAQ,CAAA;EACrC,MAAA,IAAMkC,KAAK,GAAG;EACZlC,QAAAA,QAAQ,EAAEoE,WAAW;UACrBtB,WAAW,EAAE,EAAE;EACf0X,QAAAA,MAAM,EAAE,EAAa;EACrByR,QAAAA,sBAAsB,EAAE,EAAa;EACrCC,QAAAA,2BAA2B,EAAE,EAAE;SACV,CAAA;EAEvBrrB,MAAAA,KAAA,CAAK6B,QAAQ,CAACR,KAAK,EAAE,YAAA;UAAA,OAAMD,QAAQ,IAAIA,QAAQ,CAAAqC,QAAA,CAAMzD,EAAAA,EAAAA,KAAA,CAAKqB,KAAK,EAAKA,KAAK,CAAG,CAAA,CAAA;SAAC,CAAA,CAAA;OAC9E,CAAA;EAAArB,IAAAA,KAAA,CAQDmH,MAAM,GAAG,UAAChE,EAAU,EAAEme,IAAS,EAAI;EACjC,MAAA,IAAQna,MAAM,GAAKnH,KAAA,CAAKD,KAAK,CAArBoH,MAAM,CAAA;EACd,MAAA,IAAIA,MAAM,EAAE;EACVA,QAAAA,MAAM,CAAChE,EAAE,EAAEme,IAAI,CAAC,CAAA;EACjB,OAAA;OACF,CAAA;EAAAthB,IAAAA,KAAA,CAQDoH,OAAO,GAAG,UAACjE,EAAU,EAAEme,IAAS,EAAI;EAClC,MAAA,IAAQla,OAAO,GAAKpH,KAAA,CAAKD,KAAK,CAAtBqH,OAAO,CAAA;EACf,MAAA,IAAIA,OAAO,EAAE;EACXA,QAAAA,OAAO,CAACjE,EAAE,EAAEme,IAAI,CAAC,CAAA;EAClB,OAAA;OACF,CAAA;EAAAthB,IAAAA,KAAA,CAUD2rB,QAAQ,GAAG,UAAC7qB,KAAqB,EAAI;QACnCA,KAAK,CAACK,cAAc,EAAE,CAAA;EACtB,MAAA,IAAIL,KAAK,CAACsc,MAAM,KAAKtc,KAAK,CAAC6B,aAAa,EAAE;EACxC,QAAA,OAAA;EACD,OAAA;QAED7B,KAAK,CAAC8qB,OAAO,EAAE,CAAA;EACf,MAAA,IAAA5pB,YAAA,GAA6DhC,KAAA,CAAKD,KAAK;UAA/D0qB,aAAa,GAAAzoB,YAAA,CAAbyoB,aAAa;UAAED,WAAW,GAAAxoB,YAAA,CAAXwoB,WAAW;UAAEG,UAAU,GAAA3oB,YAAA,CAAV2oB,UAAU;UAAEgB,QAAQ,GAAA3pB,YAAA,CAAR2pB,QAAQ,CAAA;EACxD,MAAA,IAAgBpoB,WAAW,GAAKvD,KAAA,CAAKqB,KAAK,CAApClC,QAAQ,CAAA;EACd,MAAA,IAAA+R,YAAA,GAAgClR,KAAA,CAAKqB,KAAK;UAAlCjB,MAAM,GAAA8Q,YAAA,CAAN9Q,MAAM;UAAEE,WAAW,GAAA4Q,YAAA,CAAX5Q,WAAW,CAAA;QAE3B,IAAImqB,aAAa,KAAK,IAAI,EAAE;UAC1B,IAAMM,eAAe,GAAGzqB,WAAW,CAACwH,cAAc,CAAC1H,MAAM,EAAEmD,WAAW,CAAC,CAAA;UACvE,IAAMomB,UAAU,GAAGrpB,WAAW,CAAC0qB,YAAY,CAACD,eAAe,EAAE,EAAE,EAAExnB,WAAW,CAAC,CAAA;UAE7E,IAAM0nB,UAAU,GAAGjrB,KAAA,CAAK0pB,aAAa,CAACC,UAAU,EAAEpmB,WAAW,CAAC,CAAA;UAE9DA,WAAW,GAAGvD,KAAA,CAAKwpB,eAAe,CAACjmB,WAAW,EAAE0nB,UAAU,CAAC,CAAA;EAC5D,OAAA;EAED,MAAA,IAAIN,UAAU,IAAI3qB,KAAA,CAAK6rB,YAAY,EAAE,EAAE;EACrC;EACA;EACA,QAAA,IAAM5pB,WAAW,GAAGuoB,WAAW,IAAI,EAAE,CAAA;EACrC,QAAA,IAAM7Q,MAAM,GAAG6Q,WAAW,GAAGlqB,WAAW,CAACkrB,YAAY,EAAE,CAACC,WAAW,CAACjB,WAAW,CAAC,GAAG,EAAE,CAAA;UACrFxqB,KAAA,CAAK6B,QAAQ,CACX;EACE1C,UAAAA,QAAQ,EAAEoE,WAAW;EACrBoW,UAAAA,MAAM,EAANA,MAAM;EACN1X,UAAAA,WAAW,EAAXA,WAAW;EACXmpB,UAAAA,sBAAsB,EAAE,EAAE;EAC1BC,UAAAA,2BAA2B,EAAE,EAAE;EAChC,SAAA,EACD,YAAK;EACH,UAAA,IAAIM,QAAQ,EAAE;EACZA,YAAAA,QAAQ,CAAAloB,QAAA,CAAMzD,EAAAA,EAAAA,KAAA,CAAKqB,KAAK,EAAA;EAAElC,cAAAA,QAAQ,EAAEoE,WAAW;EAAEuoB,cAAAA,MAAM,EAAE,WAAA;EAAW,aAAA,CAAA,EAAIhrB,KAAK,CAAC,CAAA;EAC/E,WAAA;EACH,SAAC,CACF,CAAA;EACF,OAAA;OACF,CAAA;EAvXC,IAAA,IAAI,CAACf,KAAK,CAACgsB,SAAS,EAAE;EACpB,MAAA,MAAM,IAAIhP,KAAK,CAAC,wDAAwD,CAAC,CAAA;EAC1E,KAAA;EAED/c,IAAAA,KAAA,CAAKqB,KAAK,GAAGrB,KAAA,CAAK6qB,iBAAiB,CAAC9qB,KAAK,EAAEA,KAAK,CAACZ,QAAQ,CAAC,CAAA;MAC1D,IAAIa,KAAA,CAAKD,KAAK,CAACqB,QAAQ,IAAI,CAACsP,gBAAU,CAAC1Q,KAAA,CAAKqB,KAAK,CAAClC,QAAQ,EAAEa,KAAA,CAAKD,KAAK,CAACZ,QAAQ,CAAC,EAAE;QAChFa,KAAA,CAAKD,KAAK,CAACqB,QAAQ,CAACpB,KAAA,CAAKqB,KAAK,CAAC,CAAA;EAChC,KAAA;EACDrB,IAAAA,KAAA,CAAKupB,WAAW,gBAAGyC,eAAS,EAAE,CAAA;EAAC,IAAA,OAAAhsB,KAAA,CAAA;EACjC,GAAA;EAEA;;;;;EAKG;EALH,EAAA,IAAAsE,MAAA,GAAAglB,IAAA,CAAA/kB,SAAA,CAAA;EAAAD,EAAAA,MAAA,CAMA2nB,gCAAgC,GAAhC,SAAAA,gCAAAA,CAAiCjoB,SAA6B,EAAA;MAC5D,IAAM0e,SAAS,GAAG,IAAI,CAACmI,iBAAiB,CAAC7mB,SAAS,EAAEA,SAAS,CAAC7E,QAAQ,CAAC,CAAA;EACvE,IAAA,IACE,CAACuR,gBAAU,CAACgS,SAAS,CAACvjB,QAAQ,EAAE6E,SAAS,CAAC7E,QAAQ,CAAC,IACnD,CAACuR,gBAAU,CAACgS,SAAS,CAACvjB,QAAQ,EAAE,IAAI,CAACkC,KAAK,CAAClC,QAAQ,CAAC,IACpD6E,SAAS,CAAC5C,QAAQ,EAClB;EACA4C,MAAAA,SAAS,CAAC5C,QAAQ,CAACshB,SAAS,CAAC,CAAA;EAC9B,KAAA;EACD,IAAA,IAAI,CAAC7gB,QAAQ,CAAC6gB,SAAS,CAAC,CAAA;EAC1B,GAAA;EAEA;;;;;;;EAOG,MAPH;IAAApe,MAAA,CAQAumB,iBAAiB,GAAjB,SAAAA,kBAAkB9qB,KAAyB,EAAEmsB,aAAiB,EAAA;EAC5D,IAAA,IAAM7qB,KAAK,GAAuB,IAAI,CAACA,KAAK,IAAI,EAAE,CAAA;EAClD,IAAA,IAAMjB,MAAM,GAAG,QAAQ,IAAIL,KAAK,GAAGA,KAAK,CAACK,MAAM,GAAG,IAAI,CAACL,KAAK,CAACK,MAAM,CAAA;EACnE,IAAA,IAAM0E,QAAQ,GAAsB,CAAC,UAAU,IAAI/E,KAAK,GAAGA,KAAK,CAAC+E,QAAS,GAAG,IAAI,CAAC/E,KAAK,CAAC+E,QAAS,KAAK,EAAE,CAAA;EACxG,IAAA,IAAMqnB,IAAI,GAAG,OAAOD,aAAa,KAAK,WAAW,CAAA;EACjD,IAAA,IAAMtB,YAAY,GAAG,cAAc,IAAI7qB,KAAK,GAAGA,KAAK,CAAC6qB,YAAY,GAAG,IAAI,CAAC7qB,KAAK,CAAC6qB,YAAY,CAAA;MAC3F,IAAME,YAAY,GAAGqB,IAAI,IAAI,CAACpsB,KAAK,CAAC4qB,UAAU,IAAIC,YAAY,CAAA;MAC9D,IAAMxB,UAAU,GAAGhpB,MAAM,CAAA;EACzB,IAAA,IAAIE,WAAW,GAA6Be,KAAK,CAACf,WAAW,CAAA;EAC7D,IAAA,IAAI,CAACA,WAAW,IAAIA,WAAW,CAAC8rB,qBAAqB,CAACrsB,KAAK,CAACgsB,SAAS,EAAE3C,UAAU,CAAC,EAAE;QAClF9oB,WAAW,GAAG+rB,uBAAiB,CAAUtsB,KAAK,CAACgsB,SAAS,EAAE3C,UAAU,CAAC,CAAA;EACtE,KAAA;MACD,IAAMjqB,QAAQ,GAAMmB,WAAW,CAACM,mBAAmB,CAACR,MAAM,EAAE8rB,aAAa,CAAM,CAAA;MAC/E,IAAMnB,eAAe,GAAGzqB,WAAW,CAACwH,cAAc,CAAC1H,MAAM,EAAEjB,QAAQ,CAAC,CAAA;EAEpE,IAAA,IAAMmtB,gBAAgB,GAAG,SAAnBA,gBAAgBA,GAA2B;QAC/C,IAAIvsB,KAAK,CAAC4qB,UAAU,EAAE;UACpB,OAAO;EAAEhR,UAAAA,MAAM,EAAE,EAAE;EAAE1X,UAAAA,WAAW,EAAE,EAAE;WAAE,CAAA;EACvC,OAAA,MAAM,IAAI,CAAClC,KAAK,CAAC6qB,YAAY,EAAE;UAC9B,OAAO;EACLjR,UAAAA,MAAM,EAAEtY,KAAK,CAAC+pB,sBAAsB,IAAI,EAAE;EAC1CnpB,UAAAA,WAAW,EAAEZ,KAAK,CAACgqB,2BAA2B,IAAI,EAAE;WACrD,CAAA;EACF,OAAA;QACD,OAAO;EACL1R,QAAAA,MAAM,EAAEtY,KAAK,CAACsY,MAAM,IAAI,EAAE;EAC1B1X,QAAAA,WAAW,EAAEZ,KAAK,CAACY,WAAW,IAAI,EAAE;SACrC,CAAA;OACF,CAAA;EAED,IAAA,IAAI0X,MAA6B,CAAA;EACjC,IAAA,IAAI1X,WAAuC,CAAA;EAC3C,IAAA,IAAImpB,sBAAsB,GAA0B/pB,KAAK,CAAC+pB,sBAAsB,CAAA;EAChF,IAAA,IAAIC,2BAA2B,GAAmBhqB,KAAK,CAACgqB,2BAA2B,CAAA;EACnF,IAAA,IAAIP,YAAY,EAAE;QAChB,IAAMI,gBAAgB,GAAG,IAAI,CAACC,QAAQ,CAAChsB,QAAQ,EAAEiB,MAAM,EAAEE,WAAW,CAAC,CAAA;QACrEqZ,MAAM,GAAGuR,gBAAgB,CAACvR,MAAM,CAAA;QAChC1X,WAAW,GAAGipB,gBAAgB,CAACjpB,WAAW,CAAA;EAC1CmpB,MAAAA,sBAAsB,GAAGzR,MAAM,CAAA;EAC/B0R,MAAAA,2BAA2B,GAAGppB,WAAW,CAAA;EAC1C,KAAA,MAAM;QACL,IAAMsqB,aAAa,GAAGD,gBAAgB,EAAE,CAAA;QACxC3S,MAAM,GAAG4S,aAAa,CAAC5S,MAAM,CAAA;QAC7B1X,WAAW,GAAGsqB,aAAa,CAACtqB,WAAW,CAAA;EACxC,KAAA;MACD,IAAIlC,KAAK,CAACyqB,WAAW,EAAE;EACrB,MAAA,IAAMc,MAAM,GAAGhrB,WAAW,CAACirB,mBAAmB,CAAC;EAAEtpB,QAAAA,WAAW,EAAXA,WAAW;EAAE0X,QAAAA,MAAM,EAANA,MAAAA;SAAQ,EAAE5Z,KAAK,CAACyqB,WAAW,CAAC,CAAA;QAC1FvoB,WAAW,GAAGqpB,MAAM,CAACrpB,WAAW,CAAA;QAChC0X,MAAM,GAAG2R,MAAM,CAAC3R,MAAM,CAAA;EACvB,KAAA;MACD,IAAM/V,QAAQ,GAAGtD,WAAW,CAAC+H,UAAU,CACrC0iB,eAAe,EACfjmB,QAAQ,CAAC,gBAAgB,CAAC,EAC1B3F,QAAQ,EACRY,KAAK,CAACsH,QAAQ,EACdtH,KAAK,CAACwH,WAAW,CAClB,CAAA;EACD,IAAA,IAAMmb,SAAS,GAAuB;EACpCpiB,MAAAA,WAAW,EAAXA,WAAW;EACXF,MAAAA,MAAM,EAANA,MAAM;EACN0E,MAAAA,QAAQ,EAARA,QAAQ;EACRlB,MAAAA,QAAQ,EAARA,QAAQ;EACRzE,MAAAA,QAAQ,EAARA,QAAQ;EACRgtB,MAAAA,IAAI,EAAJA,IAAI;EACJxS,MAAAA,MAAM,EAANA,MAAM;EACN1X,MAAAA,WAAW,EAAXA,WAAW;EACXmpB,MAAAA,sBAAsB,EAAtBA,sBAAsB;EACtBC,MAAAA,2BAA2B,EAA3BA,2BAAAA;OACD,CAAA;EACD,IAAA,OAAO3I,SAAS,CAAA;EAClB,GAAA;EAEA;;;;;EAKG,MALH;IAAApe,MAAA,CAMAkW,qBAAqB,GAArB,SAAAA,sBAAsBxW,SAA6B,EAAE0e,SAA6B,EAAA;EAChF,IAAA,OAAO8J,kBAAY,CAAC,IAAI,EAAExoB,SAAS,EAAE0e,SAAS,CAAC,CAAA;EACjD,GAAA;EAEA;;;;;;EAMG,MANH;IAAApe,MAAA,CAOA6mB,QAAQ,GAAR,SAAAA,QAAAA,CACEhsB,QAAuB,EACvBiB,MAAM,EACNqsB,cAAyC,EAAA;EAAA,IAAA,IADzCrsB,MAAM,KAAA,KAAA,CAAA,EAAA;EAANA,MAAAA,MAAM,GAAG,IAAI,CAACL,KAAK,CAACK,MAAM,CAAA;EAAA,KAAA;MAG1B,IAAME,WAAW,GAAGmsB,cAAc,GAAGA,cAAc,GAAG,IAAI,CAACprB,KAAK,CAACf,WAAW,CAAA;EAC5E,IAAA,IAAAuC,YAAA,GAAsD,IAAI,CAAC9C,KAAK;QAAxD2sB,cAAc,GAAA7pB,YAAA,CAAd6pB,cAAc;QAAEC,eAAe,GAAA9pB,YAAA,CAAf8pB,eAAe;QAAE7nB,QAAQ,GAAAjC,YAAA,CAARiC,QAAQ,CAAA;MACjD,IAAM8nB,cAAc,GAAGtsB,WAAW,CAACwH,cAAc,CAAC1H,MAAM,EAAEjB,QAAQ,CAAC,CAAA;EACnE,IAAA,OAAOmB,WAAW,CACfkrB,YAAY,EAAE,CACdqB,gBAAgB,CAAC1tB,QAAQ,EAAEytB,cAAc,EAAEF,cAAc,EAAEC,eAAe,EAAE7nB,QAAQ,CAAC,CAAA;EAC1F,GAAA;EAEA,mHAAA;EAAAR,EAAAA,MAAA,CACAwoB,YAAY,GAAZ,SAAAA,YAAAA,CAAazsB,QAA2B,EAAA;EACtC,IAAA,IAAA0sB,YAAA,GAAkD,IAAI,CAAC1rB,KAAK;QAApDsY,MAAM,GAAAoT,YAAA,CAANpT,MAAM;QAAE1X,WAAW,GAAA8qB,YAAA,CAAX9qB,WAAW;QAAE7B,MAAM,GAAA2sB,YAAA,CAAN3sB,MAAM;QAAE0E,QAAQ,GAAAioB,YAAA,CAARjoB,QAAQ,CAAA;EAC7C,IAAA,IAAQ4C,WAAW,GAAK,IAAI,CAAC3H,KAAK,CAA1B2H,WAAW,CAAA;EACnB,IAAA,IAAMiC,OAAO,GAAG3E,kBAAY,CAAUF,QAAQ,CAAC,CAAA;MAC/C,IAAMsb,iBAAiB,GAAG1a,iBAAW,CAA+B,mBAAmB,EAAErF,QAAQ,EAAEsJ,OAAO,CAAC,CAAA;EAE3G,IAAA,IAAIgQ,MAAM,IAAIA,MAAM,CAACvV,MAAM,EAAE;QAC3B,OACEuB,cAAA,CAACya,iBAAiB,EAAA;EAChBzG,QAAAA,MAAM,EAAEA,MAAM;EACd1X,QAAAA,WAAW,EAAEA,WAAW,IAAI,EAAE;EAC9B7B,QAAAA,MAAM,EAAEA,MAAM;EACd0E,QAAAA,QAAQ,EAAEA,QAAQ;EAClB4C,QAAAA,WAAW,EAAEA,WAAW;EACxBrH,QAAAA,QAAQ,EAAEA,QAAAA;EAAQ,OAAA,CAClB,CAAA;EAEL,KAAA;EACD,IAAA,OAAO,IAAI,CAAA;EACb,GAAA;EAEA;;;;EAIG,MAJH;EAwNA;EAAAiE,EAAAA,MAAA,CACA0oB,WAAW,GAAX,SAAAA,cAAW;EAAA,IAAA,IAAAC,qBAAA,CAAA;EACT,IAAA,IAAA5pB,YAAA,GAAkE,IAAI,CAACtD,KAAK;QAAnDmtB,qBAAqB,GAAA7pB,YAAA,CAAtCiC,eAAe;QAAA6nB,qBAAA,GAAA9pB,YAAA,CAAyByB,QAAQ;EAARA,MAAAA,QAAQ,GAAAqoB,qBAAA,KAAA,KAAA,CAAA,GAAG,EAAE,GAAAA,qBAAA,CAAA;EAC7D,IAAA,IAAQ7sB,WAAW,GAAK,IAAI,CAACe,KAAK,CAA1Bf,WAAW,CAAA;MACnB,IAAA8sB,mBAAA,GAAqEjE,kBAAkB,EAAW;QAA1Fvc,MAAM,GAAAwgB,mBAAA,CAANxgB,MAAM;QAAE2O,SAAS,GAAA6R,mBAAA,CAAT7R,SAAS;QAAEhS,OAAO,GAAA6jB,mBAAA,CAAP7jB,OAAO;QAAE7B,WAAW,GAAA0lB,mBAAA,CAAX1lB,WAAW;QAAEpC,eAAe,GAAA8nB,mBAAA,CAAf9nB,eAAe,CAAA;MAChE,OAAO;QACLsH,MAAM,EAAAnJ,QAAA,CAAA,EAAA,EAAOmJ,MAAM,EAAK,IAAI,CAAC7M,KAAK,CAAC6M,MAAM,CAAE;QAC3C2O,SAAS,EAAA9X,QAAA,CACJ8X,EAAAA,EAAAA,SAAS,EACT,IAAI,CAACxb,KAAK,CAACwb,SAAS,EAAA;EACvBC,QAAAA,eAAe,EAAA/X,QAAA,CAAA,EAAA,EACV8X,SAAS,CAACC,eAAe,GAAAyR,qBAAA,GACzB,IAAI,CAACltB,KAAK,CAACwb,SAAS,MAAA,IAAA,IAAA0R,qBAAA,KAApBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAA,CAAsBzR,eAAe,CAAA;SAE3C,CAAA;QACDjS,OAAO,EAAA9F,QAAA,CAAA,EAAA,EAAO8F,OAAO,EAAK,IAAI,CAACxJ,KAAK,CAACwJ,OAAO,CAAE;EAC9C6f,MAAAA,UAAU,EAAE,IAAI,CAACrpB,KAAK,CAACK,MAAM;EAC7BsH,MAAAA,WAAW,EAAE,IAAI,CAAC3H,KAAK,CAAC2H,WAAW,IAAIA,WAAW;EAClDpH,MAAAA,WAAW,EAAXA,WAAW;QACXgF,eAAe,EAAE4nB,qBAAqB,IAAI5nB,eAAe;QACzDL,eAAe,EAAEH,QAAQ,CAACuoB,2BAAqB,CAAA;OAChD,CAAA;EACH,GAAA;EAEA,oFAAA;EAAA/oB,EAAAA,MAAA,CACAgpB,MAAM,GAAN,SAAAA,SAAM;EACJ,IAAA,IAAI,IAAI,CAAC/D,WAAW,CAACgE,OAAO,EAAE;QAC5B,IAAI,CAAChE,WAAW,CAACgE,OAAO,CAACC,aAAa,CACpC,IAAIC,WAAW,CAAC,QAAQ,EAAE;EACxBC,QAAAA,UAAU,EAAE,IAAA;EACb,OAAA,CAAC,CACH,CAAA;EACD,MAAA,IAAI,CAACnE,WAAW,CAACgE,OAAO,CAACI,aAAa,EAAE,CAAA;EACzC,KAAA;EACH,GAAA;EAEA;;;;;EAKG,MALH;EAAArpB,EAAAA,MAAA,CAMAspB,YAAY,GAAZ,SAAAA,YAAAA,CAAa9O,KAA0B,EAAA;EACrC,IAAA,IAAAnb,YAAA,GAAiD,IAAI,CAAC5D,KAAK;QAAA8tB,qBAAA,GAAAlqB,YAAA,CAAnD0D,QAAQ;EAARA,MAAAA,QAAQ,GAAAwmB,qBAAA,KAAG,KAAA,CAAA,GAAA,MAAM,GAAAA,qBAAA;QAAAC,qBAAA,GAAAnqB,YAAA,CAAE4D,WAAW;EAAXA,MAAAA,WAAW,GAAAumB,qBAAA,KAAG,KAAA,CAAA,GAAA,GAAG,GAAAA,qBAAA,CAAA;EAC5C,IAAA,IAAQvL,QAAQ,GAAKzD,KAAK,CAAlByD,QAAQ,CAAA;EAChB,IAAA,IAAM2H,IAAI,GAAG6D,2BAAO,CAACxL,QAAQ,CAAC,CAAA;EAC9B,IAAA,IAAI2H,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;EAClB;EACAA,MAAAA,IAAI,CAAC,CAAC,CAAC,GAAG7iB,QAAQ,CAAA;EACnB,KAAA,MAAM;EACL;EACA6iB,MAAAA,IAAI,CAAC8D,OAAO,CAAC3mB,QAAQ,CAAC,CAAA;EACvB,KAAA;EAED,IAAA,IAAM4mB,SAAS,GAAG/D,IAAI,CAAClQ,IAAI,CAACzS,WAAW,CAAC,CAAA;MACxC,IAAIoQ,KAAK,GAAG,IAAI,CAAC4R,WAAW,CAACgE,OAAO,CAACW,QAAQ,CAACD,SAAS,CAAC,CAAA;MACxD,IAAI,CAACtW,KAAK,EAAE;EACV;QACAA,KAAK,GAAG,IAAI,CAAC4R,WAAW,CAACgE,OAAO,CAACY,aAAa,CAAcF,YAAAA,GAAAA,SAAS,CAAG,CAAA;EACzE,KAAA;EACD,IAAA,IAAItW,KAAK,EAAE;QACTA,KAAK,CAACyW,KAAK,EAAE,CAAA;EACd,KAAA;EACH,GAAA;EAEA;;;;EAIG,MAJH;EAAA9pB,EAAAA,MAAA,CAKAunB,YAAY,GAAZ,SAAAA,eAAY;EACV,IAAA,IAAAhnB,YAAA,GAAoD,IAAI,CAAC9E,KAAK;QAAtDyqB,WAAW,GAAA3lB,YAAA,CAAX2lB,WAAW;QAAE6D,iBAAiB,GAAAxpB,YAAA,CAAjBwpB,iBAAiB;QAAEC,OAAO,GAAAzpB,YAAA,CAAPypB,OAAO,CAAA;EAC/C,IAAA,IAAQnvB,QAAQ,GAAK,IAAI,CAACkC,KAAK,CAAvBlC,QAAQ,CAAA;EAChB,IAAA,IAAQmB,WAAW,GAAK,IAAI,CAACe,KAAK,CAA1Bf,WAAW,CAAA;EACnB,IAAA,IAAM4qB,gBAAgB,GAAG,IAAI,CAACC,QAAQ,CAAChsB,QAAQ,CAAC,CAAA;EAChD,IAAA,IAAIwa,MAAM,GAAGuR,gBAAgB,CAACvR,MAAM,CAAA;EACpC,IAAA,IAAI1X,WAAW,GAAGipB,gBAAgB,CAACjpB,WAAW,CAAA;MAC9C,IAAMmpB,sBAAsB,GAAGzR,MAAM,CAAA;MACrC,IAAM0R,2BAA2B,GAAGppB,WAAW,CAAA;EAC/C,IAAA,IAAI0X,MAAM,CAACvV,MAAM,GAAG,CAAC,EAAE;EACrB,MAAA,IAAIomB,WAAW,EAAE;UACf,IAAMc,MAAM,GAAGhrB,WAAW,CAACirB,mBAAmB,CAACL,gBAAgB,EAAEV,WAAW,CAAC,CAAA;UAC7EvoB,WAAW,GAAGqpB,MAAM,CAACrpB,WAAW,CAAA;UAChC0X,MAAM,GAAG2R,MAAM,CAAC3R,MAAM,CAAA;EACvB,OAAA;EACD,MAAA,IAAI0U,iBAAiB,EAAE;UACrB,IAAI,CAACT,YAAY,CAAC1C,gBAAgB,CAACvR,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;EAC9C,OAAA;QACD,IAAI,CAAC9X,QAAQ,CACX;EACE8X,QAAAA,MAAM,EAANA,MAAM;EACN1X,QAAAA,WAAW,EAAXA,WAAW;EACXmpB,QAAAA,sBAAsB,EAAtBA,sBAAsB;EACtBC,QAAAA,2BAA2B,EAA3BA,2BAAAA;EACD,OAAA,EACD,YAAK;EACH,QAAA,IAAIiD,OAAO,EAAE;YACXA,OAAO,CAAC3U,MAAM,CAAC,CAAA;EAChB,SAAA,MAAM;EACLL,UAAAA,OAAO,CAACwF,KAAK,CAAC,wBAAwB,EAAEnF,MAAM,CAAC,CAAA;EAChD,SAAA;EACH,OAAC,CACF,CAAA;EACD,MAAA,OAAO,KAAK,CAAA;EACb,KAAA;EACD,IAAA,OAAO,IAAI,CAAA;EACb,GAAA;EAEA;;EAEG,MAFH;EAAArV,EAAAA,MAAA,CAGAc,MAAM,GAAN,SAAAA,SAAM;EACJ,IAAA,IAAAC,YAAA,GAoBI,IAAI,CAACtF,KAAK;QAnBZiO,QAAQ,GAAA3I,YAAA,CAAR2I,QAAQ;QACR7K,EAAE,GAAAkC,YAAA,CAAFlC,EAAE;QACFkE,QAAQ,GAAAhC,YAAA,CAARgC,QAAQ;QACRE,WAAW,GAAAlC,YAAA,CAAXkC,WAAW;QAAAgnB,qBAAA,GAAAlpB,YAAA,CACXuD,SAAS;EAATA,MAAAA,SAAS,GAAA2lB,qBAAA,KAAG,KAAA,CAAA,GAAA,EAAE,GAAAA,qBAAA;QACdC,OAAO,GAAAnpB,YAAA,CAAPmpB,OAAO;QACP9nB,IAAI,GAAArB,YAAA,CAAJqB,IAAI;QACJ+nB,MAAM,GAAAppB,YAAA,CAANopB,MAAM;QACNrR,MAAM,GAAA/X,YAAA,CAAN+X,MAAM;QACN+E,MAAM,GAAA9c,YAAA,CAAN8c,MAAM;QACNuM,YAAY,GAAArpB,YAAA,CAAZqpB,YAAY;QACZC,OAAO,GAAAtpB,YAAA,CAAPspB,OAAO;QACPC,aAAa,GAAAvpB,YAAA,CAAbupB,aAAa;QAAAC,qBAAA,GAAAxpB,YAAA,CACbypB,eAAe;EAAfA,MAAAA,eAAe,GAAAD,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAE,qBAAA,GAAA1pB,YAAA,CACvBuB,QAAQ;EAARA,MAAAA,QAAQ,GAAAmoB,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAAAC,qBAAA,GAAA3pB,YAAA,CAChByB,QAAQ;EAARA,MAAAA,QAAQ,GAAAkoB,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QAChBtnB,WAAW,GAAArC,YAAA,CAAXqC,WAAW;QAAAunB,qBAAA,GAAA5pB,YAAA,CACX6pB,aAAa;EAAbA,MAAAA,aAAa,GAAAD,qBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,qBAAA;QACrBE,oBAAoB,GAAA9pB,YAAA,CAApB8pB,oBAAoB,CAAA;EAGtB,IAAA,IAAAC,YAAA,GAA8D,IAAI,CAAC/tB,KAAK;QAAhEjB,MAAM,GAAAgvB,YAAA,CAANhvB,MAAM;QAAE0E,QAAQ,GAAAsqB,YAAA,CAARtqB,QAAQ;QAAE3F,QAAQ,GAAAiwB,YAAA,CAARjwB,QAAQ;QAAE8C,WAAW,GAAAmtB,YAAA,CAAXntB,WAAW;QAAE2B,QAAQ,GAAAwrB,YAAA,CAARxrB,QAAQ,CAAA;EACzD,IAAA,IAAMvD,QAAQ,GAAG,IAAI,CAAC2sB,WAAW,EAAE,CAAA;EACnC,IAAA,IAAqB/b,YAAY,GAAK5Q,QAAQ,CAACuM,MAAM,CAA7CE,WAAW,CAAA;MACnB,IAAQgR,YAAY,GAAKzd,QAAQ,CAACkb,SAAS,CAACC,eAAe,CAAnDsC,YAAY,CAAA;EACpB;EACA;EACA;EACA,IAAA,IAAMuR,EAAE,GAAGF,oBAAoB,GAAGX,OAAO,GAAG9sB,SAAS,CAAA;EACrD,IAAA,IAAM4tB,OAAO,GAAGH,oBAAoB,IAAIX,OAAO,IAAI,MAAM,CAAA;MAEzD,OACEzc,eAAC,CAAAud,OAAO;EACN1mB,MAAAA,SAAS,EAAEA,SAAS,GAAGA,SAAS,GAAG,MAAM;EACzCzF,MAAAA,EAAE,EAAEA,EAAE;EACNuD,MAAAA,IAAI,EAAEA,IAAI;EACV+nB,MAAAA,MAAM,EAAEA,MAAM;EACdrR,MAAAA,MAAM,EAAEA,MAAM;EACd+E,MAAAA,MAAM,EAAEA,MAAM;EACduM,MAAAA,YAAY,EAAEA,YAAY;EAC1Ba,MAAAA,OAAO,EAAEZ,OAAO;EAChBa,MAAAA,aAAa,EAAEZ,aAAa;EAC5BjE,MAAAA,UAAU,EAAEmE,eAAe;QAC3BnD,QAAQ,EAAE,IAAI,CAACA,QAAQ;EACvB0D,MAAAA,EAAE,EAAEA,EAAE;QACNI,GAAG,EAAE,IAAI,CAAClG,WAAW;EAEpBvb,MAAAA,QAAA,EAAA,CAAAkhB,aAAa,KAAK,KAAK,IAAI,IAAI,CAACpC,YAAY,CAACzsB,QAAQ,CAAC,EACvDsF,cAAC,CAAAsL,YAAY;EACXvK,QAAAA,IAAI,EAAC,EAAE;EACPtG,QAAAA,MAAM,EAAEA,MAAM;EACd0E,QAAAA,QAAQ,EAAEA,QAAQ;EAClB7C,QAAAA,WAAW,EAAEA,WAAW;EACxB2B,QAAAA,QAAQ,EAAEA,QAAQ;EAClByD,QAAAA,QAAQ,EAAEA,QAAQ;EAClBE,QAAAA,WAAW,EAAEA,WAAW;EACxBG,QAAAA,WAAW,EAAEA,WAAW;EACxBvI,QAAAA,QAAQ,EAAEA,QAAQ;UAClBiC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvB+F,MAAM,EAAE,IAAI,CAACA,MAAM;UACnBC,OAAO,EAAE,IAAI,CAACA,OAAO;EACrB/G,QAAAA,QAAQ,EAAEA,QAAQ;EAClBuG,QAAAA,QAAQ,EAAEA,QAAQ;EAClBE,QAAAA,QAAQ,EAAEA,QAAAA;UACV,EACDkH,QAAQ,GAAGA,QAAQ,GAAGrI,cAAC,CAAAmY,YAAY;EAAChZ,QAAAA,QAAQ,EAAEA,QAAQ;EAAEzE,QAAAA,QAAQ,EAAEA,QAAAA;SAAQ,CAAI,EAC9E6uB,aAAa,KAAK,QAAQ,IAAI,IAAI,CAACpC,YAAY,CAACzsB,QAAQ,CAAC,CAAA;EAAA,KAAA,CAClD,CAAA;KAEb,CAAA;EAAA,EAAA,OAAAipB,IAAA,CAAA;EAAA,CAAA,CA9jBO5a,eAAiD;;;ECvO3D;EACwB,SAAAghB,SAASA,CAC/BC,UAA+B,EAAA;EAE/B,EAAA,oBAAOC,gBAAU,CACf,UAAA9mB,IAAA,EAAqE2mB,GAAgC,EAAI;MAAA,IAAAI,qBAAA,EAAAC,UAAA,CAAA;EAAA,IAAA,IAAtGljB,MAAM,GAAA9D,IAAA,CAAN8D,MAAM;QAAErD,OAAO,GAAAT,IAAA,CAAPS,OAAO;QAAEgS,SAAS,GAAAzS,IAAA,CAATyS,SAAS;EAAKwU,MAAAA,WAAW,GAAAnmB,6BAAA,CAAAd,IAAA,EAAAe,SAAA,CAAA,CAAA;EAC3C+C,IAAAA,MAAM,GAAAnJ,QAAA,CAAQksB,EAAAA,EAAAA,UAAU,KAAVA,IAAAA,IAAAA,UAAU,KAAVA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,UAAU,CAAE/iB,MAAM,EAAKA,MAAM,CAAE,CAAA;EAC7CrD,IAAAA,OAAO,GAAA9F,QAAA,CAAQksB,EAAAA,EAAAA,UAAU,KAAVA,IAAAA,IAAAA,UAAU,KAAVA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,UAAU,CAAEpmB,OAAO,EAAKA,OAAO,CAAE,CAAA;MAChDgS,SAAS,GAAA9X,QAAA,CAAA,EAAA,EACJksB,UAAU,KAAA,IAAA,IAAVA,UAAU,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAVA,UAAU,CAAEpU,SAAS,EACrBA,SAAS,EAAA;QACZC,eAAe,EAAA/X,QAAA,CAAA,EAAA,EACVksB,UAAU,KAAA,IAAA,IAAVA,UAAU,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAAE,qBAAA,GAAVF,UAAU,CAAEpU,SAAS,MAAA,IAAA,IAAAsU,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAArBA,qBAAA,CAAuBrU,eAAe,EAAA,CAAAsU,UAAA,GACtCvU,SAAS,MAAA,IAAA,IAAAuU,UAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAATA,UAAA,CAAWtU,eAAe,CAAA;OAEhC,CAAA,CAAA;MAED,OACE7V,cAAC,CAAA2jB,IAAI,EAAA7lB,QAAA,CACCksB,EAAAA,EAAAA,UAAU,EACVI,WAAW,EAAA;EACfnjB,MAAAA,MAAM,EAAEA,MAAM;EACdrD,MAAAA,OAAO,EAAEA,OAAO;EAChBgS,MAAAA,SAAS,EAAEA,SAAS;EACpBkU,MAAAA,GAAG,EAAEA,GAAAA;OACL,CAAA,CAAA,CAAA;EAEN,GAAC,CACF,CAAA;EACH;;;;;;;;;;;;"}